
theory Axiomatic_Padding 
                           use why3.Bool.Bool 
                           
end

theory Int32_of_Int16

  use enum.Int32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Int32.t = (Int32.of_int (Int16.to_int n))
  
end

theory Bit_int32_of_Bit_int16

  use why3.Bool.Bool 
  
  use export Int32_of_Int16
  
  use export enum.Bit_int32_of_bit_int16
  
end

theory Int64_of_Int16

  use enum.Int64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Int64.t = (Int64.of_int (Int16.to_int n))
  
end

theory Bit_int64_of_Bit_int16

  use why3.Bool.Bool 
  
  use export Int64_of_Int16
  
  use export enum.Bit_int64_of_bit_int16
  
end

theory Int64_of_Int32

  use enum.Int64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Int64.t = (Int64.of_int (Int32.to_int n))
  
end

theory Bit_int64_of_Bit_int32

  use why3.Bool.Bool 
  
  use export Int64_of_Int32
  
  use export enum.Bit_int64_of_bit_int32
  
end

theory Int8_of_Int16

  use enum.Int8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Int8.t = (Int8.of_int (Int16.to_int n))
  
end

theory Bit_int8_of_Bit_int16

  use why3.Bool.Bool 
  
  use export Int8_of_Int16
  
  use export enum.Bit_int8_of_bit_int16
  
end

theory Int8_of_Int32

  use enum.Int8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Int8.t = (Int8.of_int (Int32.to_int n))
  
end

theory Bit_int8_of_Bit_int32

  use why3.Bool.Bool 
  
  use export Int8_of_Int32
  
  use export enum.Bit_int8_of_bit_int32
  
end

theory Int8_of_Int64

  use enum.Int8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Int8.t = (Int8.of_int (Int64.to_int n))
  
end

theory Bit_int8_of_Bit_int64

  use why3.Bool.Bool 
  
  use export Int8_of_Int64
  
  use export enum.Bit_int8_of_bit_int64
  
end

theory Uint16_of_Int16

  use enum.Uint16 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Uint16.t = (Uint16.of_int (Int16.to_int n))
  
end

theory Bit_uint16_of_Bit_int16

  use why3.Bool.Bool 
  
  use export Uint16_of_Int16
  
  use export enum.Bit_uint16_of_bit_int16
  
end

theory Uint16_of_Int32

  use enum.Uint16 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Uint16.t = (Uint16.of_int (Int32.to_int n))
  
end

theory Bit_uint16_of_Bit_int32

  use why3.Bool.Bool 
  
  use export Uint16_of_Int32
  
  use export enum.Bit_uint16_of_bit_int32
  
end

theory Uint16_of_Int64

  use enum.Uint16 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Uint16.t = (Uint16.of_int (Int64.to_int n))
  
end

theory Bit_uint16_of_Bit_int64

  use why3.Bool.Bool 
  
  use export Uint16_of_Int64
  
  use export enum.Bit_uint16_of_bit_int64
  
end

theory Uint16_of_Int8

  use enum.Uint16 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Uint16.t = (Uint16.of_int (Int8.to_int n))
  
end

theory Bit_uint16_of_Bit_int8

  use why3.Bool.Bool 
  
  use export Uint16_of_Int8
  
  use export enum.Bit_uint16_of_bit_int8
  
end

theory Uint32_of_Int16

  use enum.Uint32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Uint32.t = (Uint32.of_int (Int16.to_int n))
  
end

theory Bit_uint32_of_Bit_int16

  use why3.Bool.Bool 
  
  use export Uint32_of_Int16
  
  use export enum.Bit_uint32_of_bit_int16
  
end

theory Uint32_of_Int32

  use enum.Uint32 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Uint32.t = (Uint32.of_int (Int32.to_int n))
  
end

theory Bit_uint32_of_Bit_int32

  use why3.Bool.Bool 
  
  use export Uint32_of_Int32
  
  use export enum.Bit_uint32_of_bit_int32
  
end

theory Uint32_of_Int64

  use enum.Uint32 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Uint32.t = (Uint32.of_int (Int64.to_int n))
  
end

theory Bit_uint32_of_Bit_int64

  use why3.Bool.Bool 
  
  use export Uint32_of_Int64
  
  use export enum.Bit_uint32_of_bit_int64
  
end

theory Uint32_of_Int8

  use enum.Uint32 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Uint32.t = (Uint32.of_int (Int8.to_int n))
  
end

theory Bit_uint32_of_Bit_int8

  use why3.Bool.Bool 
  
  use export Uint32_of_Int8
  
  use export enum.Bit_uint32_of_bit_int8
  
end

theory Uint32_of_Uint16

  use enum.Uint32 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Uint32.t = (Uint32.of_int (Uint16.to_int n))
  
end

theory Bit_uint32_of_Bit_uint16

  use why3.Bool.Bool 
  
  use export Uint32_of_Uint16
  
  use export enum.Bit_uint32_of_bit_uint16
  
end

theory Uint64_of_Int16

  use enum.Uint64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Uint64.t = (Uint64.of_int (Int16.to_int n))
  
end

theory Bit_uint64_of_Bit_int16

  use why3.Bool.Bool 
  
  use export Uint64_of_Int16
  
  use export enum.Bit_uint64_of_bit_int16
  
end

theory Uint64_of_Int32

  use enum.Uint64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Uint64.t = (Uint64.of_int (Int32.to_int n))
  
end

theory Bit_uint64_of_Bit_int32

  use why3.Bool.Bool 
  
  use export Uint64_of_Int32
  
  use export enum.Bit_uint64_of_bit_int32
  
end

theory Uint64_of_Int64

  use enum.Uint64 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Uint64.t = (Uint64.of_int (Int64.to_int n))
  
end

theory Bit_uint64_of_Bit_int64

  use why3.Bool.Bool 
  
  use export Uint64_of_Int64
  
  use export enum.Bit_uint64_of_bit_int64
  
end

theory Uint64_of_Int8

  use enum.Uint64 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Uint64.t = (Uint64.of_int (Int8.to_int n))
  
end

theory Bit_uint64_of_Bit_int8

  use why3.Bool.Bool 
  
  use export Uint64_of_Int8
  
  use export enum.Bit_uint64_of_bit_int8
  
end

theory Uint64_of_Uint16

  use enum.Uint64 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Uint64.t = (Uint64.of_int (Uint16.to_int n))
  
end

theory Bit_uint64_of_Bit_uint16

  use why3.Bool.Bool 
  
  use export Uint64_of_Uint16
  
  use export enum.Bit_uint64_of_bit_uint16
  
end

theory Uint64_of_Uint32

  use enum.Uint64 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Uint64.t = (Uint64.of_int (Uint32.to_int n))
  
end

theory Bit_uint64_of_Bit_uint32

  use why3.Bool.Bool 
  
  use export Uint64_of_Uint32
  
  use export enum.Bit_uint64_of_bit_uint32
  
end

theory Uint8_of_Int16

  use enum.Uint8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Uint8.t = (Uint8.of_int (Int16.to_int n))
  
end

theory Bit_uint8_of_Bit_int16

  use why3.Bool.Bool 
  
  use export Uint8_of_Int16
  
  use export enum.Bit_uint8_of_bit_int16
  
end

theory Uint8_of_Int32

  use enum.Uint8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Uint8.t = (Uint8.of_int (Int32.to_int n))
  
end

theory Bit_uint8_of_Bit_int32

  use why3.Bool.Bool 
  
  use export Uint8_of_Int32
  
  use export enum.Bit_uint8_of_bit_int32
  
end

theory Uint8_of_Int64

  use enum.Uint8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Uint8.t = (Uint8.of_int (Int64.to_int n))
  
end

theory Bit_uint8_of_Bit_int64

  use why3.Bool.Bool 
  
  use export Uint8_of_Int64
  
  use export enum.Bit_uint8_of_bit_int64
  
end

theory Uint8_of_Int8

  use enum.Uint8 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Uint8.t = (Uint8.of_int (Int8.to_int n))
  
end

theory Bit_uint8_of_Bit_int8

  use why3.Bool.Bool 
  
  use export Uint8_of_Int8
  
  use export enum.Bit_uint8_of_bit_int8
  
end

theory Uint8_of_Uint16

  use enum.Uint8 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Uint8.t = (Uint8.of_int (Uint16.to_int n))
  
end

theory Bit_uint8_of_Bit_uint16

  use why3.Bool.Bool 
  
  use export Uint8_of_Uint16
  
  use export enum.Bit_uint8_of_bit_uint16
  
end

theory Uint8_of_Uint32

  use enum.Uint8 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Uint8.t = (Uint8.of_int (Uint32.to_int n))
  
end

theory Bit_uint8_of_Bit_uint32

  use why3.Bool.Bool 
  
  use export Uint8_of_Uint32
  
  use export enum.Bit_uint8_of_bit_uint32
  
end

theory Uint8_of_Uint64

  use enum.Uint8 
  
  use enum.Uint64 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Uint8.t = (Uint8.of_int (Uint64.to_int n))
  
end

theory Bit_uint8_of_Bit_uint64

  use why3.Bool.Bool 
  
  use export Uint8_of_Uint64
  
  use export enum.Bit_uint8_of_bit_uint64
  
end

theory Int16_of_Int32

  use enum.Int32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Int16.t = (Int16.of_int (Int32.to_int n))
  
end

theory Bit_int16_of_Bit_int32

  use why3.Bool.Bool 
  
  use export Int16_of_Int32
  
  use export enum.Bit_int16_of_bit_int32
  
end

theory Int16_of_Int64

  use enum.Int64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Int16.t = (Int16.of_int (Int64.to_int n))
  
end

theory Bit_int16_of_Bit_int64

  use why3.Bool.Bool 
  
  use export Int16_of_Int64
  
  use export enum.Bit_int16_of_bit_int64
  
end

theory Int32_of_Int64

  use enum.Int64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Int32.t = (Int32.of_int (Int64.to_int n))
  
end

theory Bit_int32_of_Bit_int64

  use why3.Bool.Bool 
  
  use export Int32_of_Int64
  
  use export enum.Bit_int32_of_bit_int64
  
end

theory Int16_of_Int8

  use enum.Int8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Int16.t = (Int16.of_int (Int8.to_int n))
  
end

theory Bit_int16_of_Bit_int8

  use why3.Bool.Bool 
  
  use export Int16_of_Int8
  
  use export enum.Bit_int16_of_bit_int8
  
end

theory Int32_of_Int8

  use enum.Int8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Int32.t = (Int32.of_int (Int8.to_int n))
  
end

theory Bit_int32_of_Bit_int8

  use why3.Bool.Bool 
  
  use export Int32_of_Int8
  
  use export enum.Bit_int32_of_bit_int8
  
end

theory Int64_of_Int8

  use enum.Int8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Int64.t = (Int64.of_int (Int8.to_int n))
  
end

theory Bit_int64_of_Bit_int8

  use why3.Bool.Bool 
  
  use export Int64_of_Int8
  
  use export enum.Bit_int64_of_bit_int8
  
end

theory Int16_of_Uint16

  use enum.Uint16 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Int16.t = (Int16.of_int (Uint16.to_int n))
  
end

theory Bit_int16_of_Bit_uint16

  use why3.Bool.Bool 
  
  use export Int16_of_Uint16
  
  use export enum.Bit_int16_of_bit_uint16
  
end

theory Int32_of_Uint16

  use enum.Uint16 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Int32.t = (Int32.of_int (Uint16.to_int n))
  
end

theory Bit_int32_of_Bit_uint16

  use why3.Bool.Bool 
  
  use export Int32_of_Uint16
  
  use export enum.Bit_int32_of_bit_uint16
  
end

theory Int64_of_Uint16

  use enum.Uint16 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Int64.t = (Int64.of_int (Uint16.to_int n))
  
end

theory Bit_int64_of_Bit_uint16

  use why3.Bool.Bool 
  
  use export Int64_of_Uint16
  
  use export enum.Bit_int64_of_bit_uint16
  
end

theory Int8_of_Uint16

  use enum.Uint16 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Int8.t = (Int8.of_int (Uint16.to_int n))
  
end

theory Bit_int8_of_Bit_uint16

  use why3.Bool.Bool 
  
  use export Int8_of_Uint16
  
  use export enum.Bit_int8_of_bit_uint16
  
end

theory Int16_of_Uint32

  use enum.Uint32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Int16.t = (Int16.of_int (Uint32.to_int n))
  
end

theory Bit_int16_of_Bit_uint32

  use why3.Bool.Bool 
  
  use export Int16_of_Uint32
  
  use export enum.Bit_int16_of_bit_uint32
  
end

theory Int32_of_Uint32

  use enum.Uint32 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Int32.t = (Int32.of_int (Uint32.to_int n))
  
end

theory Bit_int32_of_Bit_uint32

  use why3.Bool.Bool 
  
  use export Int32_of_Uint32
  
  use export enum.Bit_int32_of_bit_uint32
  
end

theory Int64_of_Uint32

  use enum.Uint32 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Int64.t = (Int64.of_int (Uint32.to_int n))
  
end

theory Bit_int64_of_Bit_uint32

  use why3.Bool.Bool 
  
  use export Int64_of_Uint32
  
  use export enum.Bit_int64_of_bit_uint32
  
end

theory Int8_of_Uint32

  use enum.Uint32 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Int8.t = (Int8.of_int (Uint32.to_int n))
  
end

theory Bit_int8_of_Bit_uint32

  use why3.Bool.Bool 
  
  use export Int8_of_Uint32
  
  use export enum.Bit_int8_of_bit_uint32
  
end

theory Uint16_of_Uint32

  use enum.Uint32 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Uint16.t = (Uint16.of_int (Uint32.to_int n))
  
end

theory Bit_uint16_of_Bit_uint32

  use why3.Bool.Bool 
  
  use export Uint16_of_Uint32
  
  use export enum.Bit_uint16_of_bit_uint32
  
end

theory Int16_of_Uint64

  use enum.Uint64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Int16.t = (Int16.of_int (Uint64.to_int n))
  
end

theory Bit_int16_of_Bit_uint64

  use why3.Bool.Bool 
  
  use export Int16_of_Uint64
  
  use export enum.Bit_int16_of_bit_uint64
  
end

theory Int32_of_Uint64

  use enum.Uint64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Int32.t = (Int32.of_int (Uint64.to_int n))
  
end

theory Bit_int32_of_Bit_uint64

  use why3.Bool.Bool 
  
  use export Int32_of_Uint64
  
  use export enum.Bit_int32_of_bit_uint64
  
end

theory Int64_of_Uint64

  use enum.Uint64 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Int64.t = (Int64.of_int (Uint64.to_int n))
  
end

theory Bit_int64_of_Bit_uint64

  use why3.Bool.Bool 
  
  use export Int64_of_Uint64
  
  use export enum.Bit_int64_of_bit_uint64
  
end

theory Int8_of_Uint64

  use enum.Uint64 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Int8.t = (Int8.of_int (Uint64.to_int n))
  
end

theory Bit_int8_of_Bit_uint64

  use why3.Bool.Bool 
  
  use export Int8_of_Uint64
  
  use export enum.Bit_int8_of_bit_uint64
  
end

theory Uint16_of_Uint64

  use enum.Uint64 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Uint16.t = (Uint16.of_int (Uint64.to_int n))
  
end

theory Bit_uint16_of_Bit_uint64

  use why3.Bool.Bool 
  
  use export Uint16_of_Uint64
  
  use export enum.Bit_uint16_of_bit_uint64
  
end

theory Uint32_of_Uint64

  use enum.Uint64 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Uint32.t = (Uint32.of_int (Uint64.to_int n))
  
end

theory Bit_uint32_of_Bit_uint64

  use why3.Bool.Bool 
  
  use export Uint32_of_Uint64
  
  use export enum.Bit_uint32_of_bit_uint64
  
end

theory Int16_of_Uint8

  use enum.Uint8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Int16.t = (Int16.of_int (Uint8.to_int n))
  
end

theory Bit_int16_of_Bit_uint8

  use why3.Bool.Bool 
  
  use export Int16_of_Uint8
  
  use export enum.Bit_int16_of_bit_uint8
  
end

theory Int32_of_Uint8

  use enum.Uint8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Int32.t = (Int32.of_int (Uint8.to_int n))
  
end

theory Bit_int32_of_Bit_uint8

  use why3.Bool.Bool 
  
  use export Int32_of_Uint8
  
  use export enum.Bit_int32_of_bit_uint8
  
end

theory Int64_of_Uint8

  use enum.Uint8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Int64.t = (Int64.of_int (Uint8.to_int n))
  
end

theory Bit_int64_of_Bit_uint8

  use why3.Bool.Bool 
  
  use export Int64_of_Uint8
  
  use export enum.Bit_int64_of_bit_uint8
  
end

theory Int8_of_Uint8

  use enum.Uint8 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Int8.t = (Int8.of_int (Uint8.to_int n))
  
end

theory Bit_int8_of_Bit_uint8

  use why3.Bool.Bool 
  
  use export Int8_of_Uint8
  
  use export enum.Bit_int8_of_bit_uint8
  
end

theory Uint16_of_Uint8

  use enum.Uint8 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Uint16.t = (Uint16.of_int (Uint8.to_int n))
  
end

theory Bit_uint16_of_Bit_uint8

  use why3.Bool.Bool 
  
  use export Uint16_of_Uint8
  
  use export enum.Bit_uint16_of_bit_uint8
  
end

theory Uint32_of_Uint8

  use enum.Uint8 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Uint32.t = (Uint32.of_int (Uint8.to_int n))
  
end

theory Bit_uint32_of_Bit_uint8

  use why3.Bool.Bool 
  
  use export Uint32_of_Uint8
  
  use export enum.Bit_uint32_of_bit_uint8
  
end

theory Uint64_of_Uint8

  use enum.Uint8 
  
  use enum.Uint64 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Uint64.t = (Uint64.of_int (Uint8.to_int n))
  
end

theory Bit_uint64_of_Bit_uint8

  use why3.Bool.Bool 
  
  use export Uint64_of_Uint8
  
  use export enum.Bit_uint64_of_bit_uint8
  
end

module Unsafe_uint8

  use why3.Bool.Bool 
  
  use import enum.Uint8 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_uint8

  use why3.Bool.Bool 
  
  use import enum.Uint8 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_uint8

  use why3.Bool.Bool 
  
  use import enum.Bit_uint8 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_uint8

  use why3.Bool.Bool 
  
  use import enum.Bit_uint8 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Unsafe_uint64

  use why3.Bool.Bool 
  
  use import enum.Uint64 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_uint64

  use why3.Bool.Bool 
  
  use import enum.Uint64 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_uint64

  use why3.Bool.Bool 
  
  use import enum.Bit_uint64 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_uint64

  use why3.Bool.Bool 
  
  use import enum.Bit_uint64 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Unsafe_uint32

  use why3.Bool.Bool 
  
  use import enum.Uint32 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_uint32

  use why3.Bool.Bool 
  
  use import enum.Uint32 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_uint32

  use why3.Bool.Bool 
  
  use import enum.Bit_uint32 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_uint32

  use why3.Bool.Bool 
  
  use import enum.Bit_uint32 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Unsafe_uint16

  use why3.Bool.Bool 
  
  use import enum.Uint16 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_uint16

  use why3.Bool.Bool 
  
  use import enum.Uint16 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_uint16

  use why3.Bool.Bool 
  
  use import enum.Bit_uint16 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_uint16

  use why3.Bool.Bool 
  
  use import enum.Bit_uint16 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Unsafe_int8

  use why3.Bool.Bool 
  
  use import enum.Int8 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_int8

  use why3.Bool.Bool 
  
  use import enum.Int8 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_int8

  use why3.Bool.Bool 
  
  use import enum.Bit_int8 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_int8

  use why3.Bool.Bool 
  
  use import enum.Bit_int8 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Unsafe_int64

  use why3.Bool.Bool 
  
  use import enum.Int64 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_int64

  use why3.Bool.Bool 
  
  use import enum.Int64 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_int64

  use why3.Bool.Bool 
  
  use import enum.Bit_int64 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_int64

  use why3.Bool.Bool 
  
  use import enum.Bit_int64 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Unsafe_int32

  use why3.Bool.Bool 
  
  use import enum.Int32 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_int32

  use why3.Bool.Bool 
  
  use import enum.Int32 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_int32

  use why3.Bool.Bool 
  
  use import enum.Bit_int32 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_int32

  use why3.Bool.Bool 
  
  use import enum.Bit_int32 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Unsafe_int16

  use why3.Bool.Bool 
  
  use import enum.Int16 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_int16

  use why3.Bool.Bool 
  
  use import enum.Int16 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_int16

  use why3.Bool.Bool 
  
  use import enum.Bit_int16 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_int16

  use why3.Bool.Bool 
  
  use import enum.Bit_int16 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Globals_simple

  use why3.Bool.Bool 
  
end

theory Root_voidP

  use why3.Bool.Bool 
  
  use import core.Voidp 
  
end

module Root_voidP_safe

  use why3.Bool.Bool 
  
end

module Root_voidP_unsafe

  use why3.Bool.Bool 
  
end

module Root___anonstruct_Value_22_safe

  use why3.Bool.Bool 
  
end

module Root___anonstruct_Value_22_unsafe

  use why3.Bool.Bool 
  
end

module Root___anonstruct_Map_24_safe

  use why3.Bool.Bool 
  
end

module Root___anonstruct_Map_24_unsafe

  use why3.Bool.Bool 
  
end

module Root___anonstruct_Key_21_safe

  use why3.Bool.Bool 
  
end

module Root___anonstruct_Key_21_unsafe

  use why3.Bool.Bool 
  
end

theory Root___anonstruct_Key_21

  use why3.Bool.Bool 
  
  type __anonstruct_Key_21 
  
end

theory Struct___anonstruct_Key_21

  use import core.Tag_table_type 
  
  use import core.Tag_table 
  
  use import core.Tag_id 
  
  use import core.Tag 
  
  use import Root___anonstruct_Key_21 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use import core.Alloc 
  
  use why3.Bool.Bool 
  
  function __anonstruct_Key_21_tag  : (tag_id
  __anonstruct_Key_21)
  
  axiom U___anonstruct_Key_21_parenttag_bottom  :
  (parenttag __anonstruct_Key_21_tag bottom_tag)
  
  axiom U___anonstruct_Key_21_is_final  :
  (forall __anonstruct_Key_21_tag_table : (tag_table __anonstruct_Key_21).
   (forall p : (pointer __anonstruct_Key_21).
    ((instanceof __anonstruct_Key_21_tag_table p __anonstruct_Key_21_tag) ->
     ((=) (typeof __anonstruct_Key_21_tag_table p) __anonstruct_Key_21_tag))))
  
  predicate frame_tag_struct___anonstruct_Key_21 (p : (pointer
  __anonstruct_Key_21)) (old___anonstruct_Key_21_tag_table : (tag_table
  __anonstruct_Key_21)) (__anonstruct_Key_21_tag_table : (tag_table
  __anonstruct_Key_21))
  =
     ((tag_extends old___anonstruct_Key_21_tag_table
      __anonstruct_Key_21_tag_table)
     /\
     (alloc_tag_block old___anonstruct_Key_21_tag_table
     __anonstruct_Key_21_tag_table p))
  
  predicate frame_free_struct___anonstruct_Key_21 (p : (pointer
  __anonstruct_Key_21)) (old___anonstruct_Key_21_alloc_table : (alloc_table
  __anonstruct_Key_21)) (__anonstruct_Key_21_alloc_table : (alloc_table
  __anonstruct_Key_21))
  =
     ((free_extends old___anonstruct_Key_21_alloc_table
      __anonstruct_Key_21_alloc_table)
     /\
     (free_block old___anonstruct_Key_21_alloc_table
     __anonstruct_Key_21_alloc_table p))
  
  predicate frame_alloc_struct___anonstruct_Key_21 (p : (pointer
  __anonstruct_Key_21)) (n : int) (old___anonstruct_Key_21_alloc_table :
  (alloc_table __anonstruct_Key_21)) (__anonstruct_Key_21_alloc_table :
  (alloc_table __anonstruct_Key_21))
  =
     ((alloc_extends old___anonstruct_Key_21_alloc_table
      __anonstruct_Key_21_alloc_table)
     /\
     (alloc_block old___anonstruct_Key_21_alloc_table
     __anonstruct_Key_21_alloc_table p n))
  
  predicate fresh_tag_struct___anonstruct_Key_21 (p : (pointer
  __anonstruct_Key_21)) (n : int) (__anonstruct_Key_21_tag_table : (tag_table
  __anonstruct_Key_21))
  = (tag_fresh __anonstruct_Key_21_tag_table p)
  
  predicate fresh_alloc_struct___anonstruct_Key_21 (p : (pointer
  __anonstruct_Key_21)) (n : int) (__anonstruct_Key_21_alloc_table :
  (alloc_table __anonstruct_Key_21))
  = (alloc_fresh __anonstruct_Key_21_alloc_table p)
  
  predicate container_of_singleton_struct___anonstruct_Key_21 (p : (pointer
  __anonstruct_Key_21)) (__anonstruct_Key_21_tag_table : (tag_table
  __anonstruct_Key_21)) = true
  
  predicate container_of_struct___anonstruct_Key_21 (p : (pointer
  __anonstruct_Key_21)) (l : int) (r : int) (__anonstruct_Key_21_tag_table :
  (tag_table __anonstruct_Key_21)) = true
  
  predicate typeof_singleton_struct___anonstruct_Key_21 (p : (pointer
  __anonstruct_Key_21)) (__anonstruct_Key_21_tag_table : (tag_table
  __anonstruct_Key_21))
  = ((=) (typeof __anonstruct_Key_21_tag_table p) __anonstruct_Key_21_tag)
  
  predicate typeof_struct___anonstruct_Key_21 (p : (pointer
  __anonstruct_Key_21)) (l : int) (r : int) (__anonstruct_Key_21_tag_table :
  (tag_table __anonstruct_Key_21))
  =
     (((=) (typeof __anonstruct_Key_21_tag_table p) __anonstruct_Key_21_tag)
     /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       ((=) (typeof __anonstruct_Key_21_tag_table (shift p i))
       __anonstruct_Key_21_tag))))
  
  predicate instanceof_singleton_struct___anonstruct_Key_21 (p : (pointer
  __anonstruct_Key_21)) (__anonstruct_Key_21_tag_table : (tag_table
  __anonstruct_Key_21))
  = (instanceof __anonstruct_Key_21_tag_table p __anonstruct_Key_21_tag)
  
  predicate instanceof_struct___anonstruct_Key_21 (p : (pointer
  __anonstruct_Key_21)) (l : int) (r : int) (__anonstruct_Key_21_tag_table :
  (tag_table __anonstruct_Key_21))
  =
     ((instanceof __anonstruct_Key_21_tag_table p __anonstruct_Key_21_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       (instanceof __anonstruct_Key_21_tag_table (shift p i)
       __anonstruct_Key_21_tag))))
  
  predicate right_valid_struct___anonstruct_Key_21 (p : (pointer
  __anonstruct_Key_21)) (b : int) (__anonstruct_Key_21_alloc_table :
  (alloc_table __anonstruct_Key_21))
  = ((>=) (offset_max __anonstruct_Key_21_alloc_table p) b)
  
  predicate left_valid_struct___anonstruct_Key_21 (p : (pointer
  __anonstruct_Key_21)) (a : int) (__anonstruct_Key_21_alloc_table :
  (alloc_table __anonstruct_Key_21))
  = ((<=) (offset_min __anonstruct_Key_21_alloc_table p) a)
  
  predicate strict_left_valid_struct___anonstruct_Key_21 (p : (pointer
  __anonstruct_Key_21)) (a : int) (__anonstruct_Key_21_alloc_table :
  (alloc_table __anonstruct_Key_21))
  = ((=) (offset_min __anonstruct_Key_21_alloc_table p) a)
  
  predicate valid_struct___anonstruct_Key_21 (p : (pointer
  __anonstruct_Key_21)) (a : int) (b : int) (__anonstruct_Key_21_alloc_table
  : (alloc_table __anonstruct_Key_21))
  =
     (((<=) (offset_min __anonstruct_Key_21_alloc_table p) a) /\
     ((>=) (offset_max __anonstruct_Key_21_alloc_table p) b))
  
  predicate strict_valid_struct___anonstruct_Key_21 (p : (pointer
  __anonstruct_Key_21)) (a : int) (b : int) (__anonstruct_Key_21_alloc_table
  : (alloc_table __anonstruct_Key_21))
  =
     (((=) (offset_min __anonstruct_Key_21_alloc_table p) a) /\
     ((=) (offset_max __anonstruct_Key_21_alloc_table p) b))
  
  axiom U___anonstruct_Key_21_int  :
  ((=) (int_of_tag __anonstruct_Key_21_tag) (5))
  
end

module Struct___anonstruct_Key_21_safe

  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Key_21 
  
  use import Root___anonstruct_Key_21 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val safe_free_struct___anonstruct_Key_21
  (p : (pointer __anonstruct_Key_21)) 
   (__anonstruct_Key_21_alloc_table : ref (alloc_table
    __anonstruct_Key_21)) : unit
    requires { true } writes { __anonstruct_Key_21_alloc_table }
    ensures {
      ((((=) p null) /\
       ((=) !__anonstruct_Key_21_alloc_table (old
       !__anonstruct_Key_21_alloc_table)))
      \/
      ((frame_free_struct___anonstruct_Key_21 p (old
       !__anonstruct_Key_21_alloc_table) !__anonstruct_Key_21_alloc_table)
      /\
      (fresh_alloc_struct___anonstruct_Key_21 p
      (offset_max (old !__anonstruct_Key_21_alloc_table) p)
      !__anonstruct_Key_21_alloc_table))) }
  
  val allocate_struct___anonstruct_Key_21
  (n : int) 
   (__anonstruct_Key_21_alloc_table : ref (alloc_table __anonstruct_Key_21)) 
    (__anonstruct_Key_21_tag_table : ref (tag_table __anonstruct_Key_21)) :
     (pointer __anonstruct_Key_21)
     requires { true } writes { __anonstruct_Key_21_alloc_table,
     __anonstruct_Key_21_tag_table }
     ensures {
       ((strict_valid_struct___anonstruct_Key_21 result (0) (Int.(-) n (1))
        !__anonstruct_Key_21_alloc_table)
       /\
       ((frame_alloc_struct___anonstruct_Key_21 result n (old
        !__anonstruct_Key_21_alloc_table) !__anonstruct_Key_21_alloc_table)
       /\
       ((frame_tag_struct___anonstruct_Key_21 result (old
        !__anonstruct_Key_21_tag_table) !__anonstruct_Key_21_tag_table)
       /\
       ((fresh_alloc_struct___anonstruct_Key_21 result (Int.(-) n (1)) (old
        !__anonstruct_Key_21_alloc_table))
       /\
       ((fresh_tag_struct___anonstruct_Key_21 result (Int.(-) n (1)) (old
        !__anonstruct_Key_21_tag_table))
       /\
       ((typeof_struct___anonstruct_Key_21 result (0) n
        !__anonstruct_Key_21_tag_table)
       /\
       (container_of_struct___anonstruct_Key_21 result (0) n
       !__anonstruct_Key_21_tag_table))))))) }
  
  val allocate_singleton_struct___anonstruct_Key_21
  (__anonstruct_Key_21_alloc_table : ref (alloc_table __anonstruct_Key_21)) 
   (__anonstruct_Key_21_tag_table : ref (tag_table __anonstruct_Key_21)) :
    (pointer __anonstruct_Key_21)
    requires { true } writes { __anonstruct_Key_21_alloc_table,
    __anonstruct_Key_21_tag_table }
    ensures {
      ((strict_valid_struct___anonstruct_Key_21 result (0) (0)
       !__anonstruct_Key_21_alloc_table)
      /\
      ((frame_alloc_struct___anonstruct_Key_21 result (1) (old
       !__anonstruct_Key_21_alloc_table) !__anonstruct_Key_21_alloc_table)
      /\
      ((frame_tag_struct___anonstruct_Key_21 result (old
       !__anonstruct_Key_21_tag_table) !__anonstruct_Key_21_tag_table)
      /\
      ((fresh_alloc_struct___anonstruct_Key_21 result (0) (old
       !__anonstruct_Key_21_alloc_table))
      /\
      ((fresh_tag_struct___anonstruct_Key_21 result (0) (old
       !__anonstruct_Key_21_tag_table))
      /\
      ((typeof_singleton_struct___anonstruct_Key_21 result
       !__anonstruct_Key_21_tag_table)
      /\
      (container_of_singleton_struct___anonstruct_Key_21 result
      !__anonstruct_Key_21_tag_table))))))) }
  
end

module Struct___anonstruct_Key_21_unsafe

  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Key_21 
  
  use import Root___anonstruct_Key_21 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val free_struct___anonstruct_Key_21
  (p : (pointer __anonstruct_Key_21)) 
   (__anonstruct_Key_21_alloc_table : ref (alloc_table
    __anonstruct_Key_21)) : unit
    requires {
      (("expl:Deallocation" ((=) p null)) \/
      (freeable !__anonstruct_Key_21_alloc_table p)) }
    writes { __anonstruct_Key_21_alloc_table }
    ensures {
      ((((=) p null) /\
       ((=) !__anonstruct_Key_21_alloc_table (old
       !__anonstruct_Key_21_alloc_table)))
      \/
      ((frame_free_struct___anonstruct_Key_21 p (old
       !__anonstruct_Key_21_alloc_table) !__anonstruct_Key_21_alloc_table)
      /\
      (fresh_alloc_struct___anonstruct_Key_21 p
      (offset_max (old !__anonstruct_Key_21_alloc_table) p)
      !__anonstruct_Key_21_alloc_table))) }
  
  val allocate_struct___anonstruct_Key_21_requires
  (n : int) 
   (__anonstruct_Key_21_alloc_table : ref (alloc_table __anonstruct_Key_21)) 
    (__anonstruct_Key_21_tag_table : ref (tag_table __anonstruct_Key_21)) :
     (pointer __anonstruct_Key_21)
     requires { ((>=) n (0)) } writes { __anonstruct_Key_21_alloc_table,
     __anonstruct_Key_21_tag_table }
     ensures {
       ((strict_valid_struct___anonstruct_Key_21 result (0) (Int.(-) n (1))
        !__anonstruct_Key_21_alloc_table)
       /\
       ((frame_alloc_struct___anonstruct_Key_21 result n (old
        !__anonstruct_Key_21_alloc_table) !__anonstruct_Key_21_alloc_table)
       /\
       ((frame_tag_struct___anonstruct_Key_21 result (old
        !__anonstruct_Key_21_tag_table) !__anonstruct_Key_21_tag_table)
       /\
       ((fresh_alloc_struct___anonstruct_Key_21 result (Int.(-) n (1)) (old
        !__anonstruct_Key_21_alloc_table))
       /\
       ((fresh_tag_struct___anonstruct_Key_21 result (Int.(-) n (1)) (old
        !__anonstruct_Key_21_tag_table))
       /\
       ((typeof_struct___anonstruct_Key_21 result (0) n
        !__anonstruct_Key_21_tag_table)
       /\
       (container_of_struct___anonstruct_Key_21 result (0) n
       !__anonstruct_Key_21_tag_table))))))) }
  
end

module Function_compareKeys_safety
#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 5 4 35#
"expl:compareKeys, safety"

  use import core.Upd_safe 
  
  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Key_21_unsafe 
  
  use import Struct___anonstruct_Key_21_safe 
  
  use import Struct___anonstruct_Key_21 
  
  use Safe_int32 
  
  use import Root___anonstruct_Key_21 
  
  use import core.Return 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import core.Any_tag_table 
  
  use import core.Any_pointer 
  
  use import core.Any_memory 
  
  use import core.Any_alloc_table 
  
  use import core.Alloc_table 
  
  use import core.Acc_safe 
  
  use why3.Bool.Bool 
  
  let compareKeys
  #"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 5 4 35#
  "expl:Function compareKeys, safety" =
  fun
   (v_key1 : (pointer __anonstruct_Key_21)) (v_key2 : (pointer
   __anonstruct_Key_21)) (__anonstruct_Key_21_v_key1_31_alloc_table :
   (alloc_table __anonstruct_Key_21))
   (__anonstruct_Key_21_v_key2_32_alloc_table : (alloc_table
   __anonstruct_Key_21)) (__anonstruct_Key_21_a_v_key1_31 : (memory
   __anonstruct_Key_21 Int32.t)) (__anonstruct_Key_21_a_v_key2_32 : (memory
   __anonstruct_Key_21 Int32.t)) (__anonstruct_Key_21_b_v_key1_31 : (memory
   __anonstruct_Key_21 Int32.t)) (__anonstruct_Key_21_b_v_key2_32 : (memory
   __anonstruct_Key_21 Int32.t)) 
   requires {
   ((valid_struct___anonstruct_Key_21 v_key2 (0) (0)
    __anonstruct_Key_21_v_key2_32_alloc_table)
   /\
   (valid_struct___anonstruct_Key_21 v_key1 (0) (0)
   __anonstruct_Key_21_v_key1_31_alloc_table)) }
   ensures { ("expl:Postcondition" true) }  ->
   'Init:
   (let __anonstruct_Key_21_b_key2_65 = ref
   (any_memory  () : (memory __anonstruct_Key_21 Int32.t)) in
   (let __anonstruct_Key_21_b_key1_64 = ref
   (any_memory  () : (memory __anonstruct_Key_21 Int32.t)) in
   (let __anonstruct_Key_21_a_key2_65 = ref
   (any_memory  () : (memory __anonstruct_Key_21 Int32.t)) in
   (let __anonstruct_Key_21_a_key1_64 = ref
   (any_memory  () : (memory __anonstruct_Key_21 Int32.t)) in
   (let __anonstruct_Key_21_key1_64_tag_table = ref
   (any_tag_table  () : (tag_table __anonstruct_Key_21)) in
   (let __anonstruct_Key_21_key2_65_tag_table = ref
   (any_tag_table  () : (tag_table __anonstruct_Key_21)) in
   (let __anonstruct_Key_21_key2_65_alloc_table = ref
   (any_alloc_table  () : (alloc_table __anonstruct_Key_21)) in
   (let __anonstruct_Key_21_key1_64_alloc_table = ref
   (any_alloc_table  () : (alloc_table __anonstruct_Key_21)) in
   (let return = ref (Safe_int32.any_  () ) in
   try
    begin
    (let key1 = ref (any_pointer  () : (pointer __anonstruct_Key_21)) in
    (let key2 = ref (any_pointer  () : (pointer __anonstruct_Key_21)) in
    (let tmp = ref (Safe_int32.any_  () ) in
    begin
    (key1 :=
     (let _jessie_38 =
     (allocate_singleton_struct___anonstruct_Key_21 
      __anonstruct_Key_21_key1_64_alloc_table
      __anonstruct_Key_21_key1_64_tag_table ) in
     begin
     (assert {
     (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 5 20 24#
     "expl:Pointer index bounds"
     ((>=) (offset_max !__anonstruct_Key_21_key1_64_alloc_table _jessie_38)
     (0))) }); _jessie_38 end));
     begin
     (key2 :=
      (let _jessie_39 =
      (allocate_singleton_struct___anonstruct_Key_21 
       __anonstruct_Key_21_key2_65_alloc_table
       __anonstruct_Key_21_key2_65_tag_table ) in
      begin
      (assert {
      (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 5 30 34#
      "expl:Pointer index bounds"
      ((>=) (offset_max !__anonstruct_Key_21_key2_65_alloc_table _jessie_39)
      (0))) }); _jessie_39 end));
      begin
      (let _jessie_41 =
      (let _jessie_40 =
      (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 5 30 34#
      "expl:Pointer dereference"
      (acc_safe  __anonstruct_Key_21_a_v_key2_32 v_key2 )) in
      begin
      (assert {
      (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 5 30 34#
      "expl:Pointer index bounds" true) }); _jessie_40 end) in
      (let _jessie_42 = !key2 in
      (let _jessie_43 = (0) in
      (let _jessie_44 = _jessie_42 in
      (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 5 30 34#
      "expl:Pointer dereference"
      (upd  !__anonstruct_Key_21_key2_65_alloc_table
       __anonstruct_Key_21_a_key2_65 _jessie_42 _jessie_41 ))))));
       begin
       (let _jessie_46 =
       (let _jessie_45 =
       (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 5 30 34#
       "expl:Pointer dereference"
       (acc_safe  __anonstruct_Key_21_b_v_key2_32 v_key2 )) in
       begin
       (assert {
       (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 5 30 34#
       "expl:Pointer index bounds" true) }); _jessie_45 end) in
       (let _jessie_47 = !key2 in
       (let _jessie_48 = (0) in
       (let _jessie_49 = _jessie_47 in
       (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 5 30 34#
       "expl:Pointer dereference"
       (upd  !__anonstruct_Key_21_key2_65_alloc_table
        __anonstruct_Key_21_b_key2_65 _jessie_47 _jessie_46 ))))));
        begin
        (let _jessie_51 =
        (let _jessie_50 =
        (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 5 20 24#
        "expl:Pointer dereference"
        (acc_safe  __anonstruct_Key_21_a_v_key1_31 v_key1 )) in
        begin
        (assert {
        (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 5 20 24#
        "expl:Pointer index bounds" true) }); _jessie_50 end) in
        (let _jessie_52 = !key1 in
        (let _jessie_53 = (0) in
        (let _jessie_54 = _jessie_52 in
        (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 5 20 24#
        "expl:Pointer dereference"
        (upd  !__anonstruct_Key_21_key1_64_alloc_table
         __anonstruct_Key_21_a_key1_64 _jessie_52 _jessie_51 ))))));
         begin
         (let _jessie_56 =
         (let _jessie_55 =
         (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 5 20 24#
         "expl:Pointer dereference"
         (acc_safe  __anonstruct_Key_21_b_v_key1_31 v_key1 )) in
         begin
         (assert {
         (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 5 20 24#
         "expl:Pointer index bounds" true) }); _jessie_55 end) in
         (let _jessie_57 = !key1 in
         (let _jessie_58 = (0) in
         (let _jessie_59 = _jessie_57 in
         (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 5 20 24#
         "expl:Pointer dereference"
         (upd  !__anonstruct_Key_21_key1_64_alloc_table
          __anonstruct_Key_21_b_key1_64 _jessie_57 _jessie_56 ))))));
          (if
          (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 6 11 27#
          (Safe_int32.(=) 
           (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 6 11 17#
           "expl:Pointer dereference"
           (acc_safe  !__anonstruct_Key_21_a_key1_64 !key1 ))
           (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 6 21 27#
           "expl:Pointer dereference"
           (acc_safe  !__anonstruct_Key_21_a_key2_65 !key2 )) ))
          then
           (if
           (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 6 31 47#
           (Safe_int32.(=) 
            (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 6 31 37#
            "expl:Pointer dereference"
            (acc_safe  !__anonstruct_Key_21_b_key1_64 !key1 ))
            (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 6 41 47#
            "expl:Pointer dereference"
            (acc_safe  !__anonstruct_Key_21_b_key2_65 !key2 )) ))
           then
            (tmp :=
             (let _jessie_62 =
             (#"map_c.jc" 297 80 92# "expl:Integer cast"
             (Safe_int32.of_int (1))) in
             begin
             (assert {
             (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 6 11 47#
             "expl:Pointer index bounds" true) }); _jessie_62 end))
           else
            (tmp :=
             (let _jessie_61 =
             (#"map_c.jc" 298 80 92# "expl:Integer cast"
             (Safe_int32.of_int (0))) in
             begin
             (assert {
             (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 6 11 47#
             "expl:Pointer index bounds" true) }); _jessie_61 end)))
          else
           (tmp :=
            (let _jessie_60 =
            (#"map_c.jc" 299 22 34# "expl:Integer cast"
            (Safe_int32.of_int (0))) in
            begin
            (assert {
            (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 6 11 47#
            "expl:Pointer index bounds" true) }); _jessie_60 end)));
          begin
          (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 5 20 24#
          (free_struct___anonstruct_Key_21  !key1
           __anonstruct_Key_21_key1_64_alloc_table ));
           begin
           (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 5 30 34#
           (free_struct___anonstruct_Key_21  !key2
            __anonstruct_Key_21_key2_65_alloc_table ));
            begin
            (return :=
             (let _jessie_63 = !tmp in
             begin
             (assert {
             (#"map_c.jc" 303 7 17# "expl:Pointer index bounds" true) });
              _jessie_63 end)); (raise Return) end end end end end end end
     end end))); absurd  end with Return -> !return end)))))))))
  
end

module Function_compareKeys_behaviors
#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 5 4 35#
"expl:compareKeys, behaviors"

  use import core.Upd_unsafe 
  
  use Unsafe_int32 
  
  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Key_21_safe 
  
  use import Struct___anonstruct_Key_21 
  
  use import Root___anonstruct_Key_21 
  
  use import core.Return 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import core.Any_tag_table 
  
  use import core.Any_pointer 
  
  use import core.Any_memory 
  
  use import core.Any_alloc_table 
  
  use import core.Alloc_table 
  
  use import core.Acc_unsafe 
  
  use why3.Bool.Bool 
  
  let compareKeys_ensures_default
  #"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 5 4 35#
  "expl:Function compareKeys, default behavior" =
  fun
   (v_key1 : (pointer __anonstruct_Key_21)) (v_key2 : (pointer
   __anonstruct_Key_21)) (__anonstruct_Key_21_v_key1_31_alloc_table :
   (alloc_table __anonstruct_Key_21))
   (__anonstruct_Key_21_v_key2_32_alloc_table : (alloc_table
   __anonstruct_Key_21)) (__anonstruct_Key_21_a_v_key1_31 : (memory
   __anonstruct_Key_21 Int32.t)) (__anonstruct_Key_21_a_v_key2_32 : (memory
   __anonstruct_Key_21 Int32.t)) (__anonstruct_Key_21_b_v_key1_31 : (memory
   __anonstruct_Key_21 Int32.t)) (__anonstruct_Key_21_b_v_key2_32 : (memory
   __anonstruct_Key_21 Int32.t)) 
   requires {
   ((valid_struct___anonstruct_Key_21 v_key2 (0) (0)
    __anonstruct_Key_21_v_key2_32_alloc_table)
   /\
   (valid_struct___anonstruct_Key_21 v_key1 (0) (0)
   __anonstruct_Key_21_v_key1_31_alloc_table)) }
   ensures { ("expl:Postcondition" ("expl:Ensures clause" true)) }  ->
   'Init:
   (let __anonstruct_Key_21_b_key2_65 = ref
   (any_memory  () : (memory __anonstruct_Key_21 Int32.t)) in
   (let __anonstruct_Key_21_b_key1_64 = ref
   (any_memory  () : (memory __anonstruct_Key_21 Int32.t)) in
   (let __anonstruct_Key_21_a_key2_65 = ref
   (any_memory  () : (memory __anonstruct_Key_21 Int32.t)) in
   (let __anonstruct_Key_21_a_key1_64 = ref
   (any_memory  () : (memory __anonstruct_Key_21 Int32.t)) in
   (let __anonstruct_Key_21_key1_64_tag_table = ref
   (any_tag_table  () : (tag_table __anonstruct_Key_21)) in
   (let __anonstruct_Key_21_key2_65_tag_table = ref
   (any_tag_table  () : (tag_table __anonstruct_Key_21)) in
   (let __anonstruct_Key_21_key2_65_alloc_table = ref
   (any_alloc_table  () : (alloc_table __anonstruct_Key_21)) in
   (let __anonstruct_Key_21_key1_64_alloc_table = ref
   (any_alloc_table  () : (alloc_table __anonstruct_Key_21)) in
   (let return = ref (Unsafe_int32.any_  () ) in
   try
    begin
    (let key1 = ref (any_pointer  () : (pointer __anonstruct_Key_21)) in
    (let key2 = ref (any_pointer  () : (pointer __anonstruct_Key_21)) in
    (let tmp = ref (Unsafe_int32.any_  () ) in
    begin
    (key1 :=
     (allocate_singleton_struct___anonstruct_Key_21 
      __anonstruct_Key_21_key1_64_alloc_table
      __anonstruct_Key_21_key1_64_tag_table ));
     begin
     (key2 :=
      (allocate_singleton_struct___anonstruct_Key_21 
       __anonstruct_Key_21_key2_65_alloc_table
       __anonstruct_Key_21_key2_65_tag_table ));
      begin
      (let _jessie_15 = (acc  __anonstruct_Key_21_a_v_key2_32 v_key2 ) in
      (let _jessie_16 = !key2 in
      (let _jessie_17 = (0) in
      (let _jessie_18 = _jessie_16 in
      (upd  __anonstruct_Key_21_a_key2_65 _jessie_18 _jessie_15 )))));
       begin
       (let _jessie_20 = (acc  __anonstruct_Key_21_b_v_key2_32 v_key2 ) in
       (let _jessie_21 = !key2 in
       (let _jessie_22 = (0) in
       (let _jessie_23 = _jessie_21 in
       (upd  __anonstruct_Key_21_b_key2_65 _jessie_23 _jessie_20 )))));
        begin
        (let _jessie_25 = (acc  __anonstruct_Key_21_a_v_key1_31 v_key1 ) in
        (let _jessie_26 = !key1 in
        (let _jessie_27 = (0) in
        (let _jessie_28 = _jessie_26 in
        (upd  __anonstruct_Key_21_a_key1_64 _jessie_28 _jessie_25 )))));
         begin
         (let _jessie_30 = (acc  __anonstruct_Key_21_b_v_key1_31 v_key1 ) in
         (let _jessie_31 = !key1 in
         (let _jessie_32 = (0) in
         (let _jessie_33 = _jessie_31 in
         (upd  __anonstruct_Key_21_b_key1_64 _jessie_33 _jessie_30 )))));
          (if
          (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 6 11 27#
          (Unsafe_int32.(=)  (acc  !__anonstruct_Key_21_a_key1_64 !key1 )
           (acc  !__anonstruct_Key_21_a_key2_65 !key2 ) ))
          then
           (if
           (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 6 31 47#
           (Unsafe_int32.(=)  (acc  !__anonstruct_Key_21_b_key1_64 !key1 )
            (acc  !__anonstruct_Key_21_b_key2_65 !key2 ) ))
           then
            (tmp :=
             (#"map_c.jc" 297 80 92# "expl:Integer cast"
             (Unsafe_int32.of_int (1))))
           else
            (tmp :=
             (#"map_c.jc" 298 80 92# "expl:Integer cast"
             (Unsafe_int32.of_int (0)))))
          else
           (tmp :=
            (#"map_c.jc" 299 22 34# "expl:Integer cast"
            (Unsafe_int32.of_int (0)))));
          begin
          (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 5 20 24#
          (safe_free_struct___anonstruct_Key_21  !key1
           __anonstruct_Key_21_key1_64_alloc_table ));
           begin
           (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 5 30 34#
           (safe_free_struct___anonstruct_Key_21  !key2
            __anonstruct_Key_21_key2_65_alloc_table ));
            begin (return := !tmp); (raise Return) end end end end end end
      end end end))); absurd  end with Return -> !return end)))))))))
  
end

theory Root___anonstruct_Map_24

  use why3.Bool.Bool 
  
  type __anonstruct_Map_24 
  
end

theory Root___anonstruct_Value_22

  use why3.Bool.Bool 
  
  type __anonstruct_Value_22 
  
end

theory Logic_all_valid_existence

  use import core.Voidp 
  
  use import Root___anonstruct_Map_24 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  predicate all_valid_existence (map_13 : (pointer __anonstruct_Map_24))
  (__anonstruct_Map_24_capacity_map_13_6_at_L : (memory __anonstruct_Map_24
  Int32.t)) (__anonstruct_Map_24_items_map_13_6_at_L : (memory
  __anonstruct_Map_24 (pointer voidP)))
  (__anonstruct_Item_23_existent_items_53_at_L : (memory voidP Int32.t))
  =
     (forall i_3 : int.
      ((((<=) (0) i_3) /\
       ((<) i_3
       (Int32.to_int
       (select __anonstruct_Map_24_capacity_map_13_6_at_L map_13)))) ->
       ((Int32.(<=) (#"map_c.jc" 143 10 22# "expl:Integer cast" (Int32.of_int
        (0)))
        (select __anonstruct_Item_23_existent_items_53_at_L
        (shift (select __anonstruct_Map_24_items_map_13_6_at_L map_13) i_3)))
       /\
       (Int32.(<=)
       (select __anonstruct_Item_23_existent_items_53_at_L
       (shift (select __anonstruct_Map_24_items_map_13_6_at_L map_13) i_3))
       (#"map_c.jc" 144 44 56# "expl:Integer cast" (Int32.of_int (1)))))))
  
  
end

theory Logic_unique_items

  use import core.Voidp 
  
  use import Root___anonstruct_Map_24 
  
  use import Root___anonstruct_Key_21 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  predicate unique_items (map_15 : (pointer __anonstruct_Map_24))
  (__anonstruct_Map_24_capacity_map_15_8_at_L : (memory __anonstruct_Map_24
  Int32.t)) (__anonstruct_Map_24_items_map_15_8_at_L : (memory
  __anonstruct_Map_24 (pointer voidP)))
  (__anonstruct_Item_23_existent_items_55_at_L : (memory voidP Int32.t))
  (__anonstruct_Item_23_key_2_items_55_at_L : (memory voidP (pointer
  __anonstruct_Key_21))) (__anonstruct_Key_21_b_items_55_at_L : (memory
  __anonstruct_Key_21 Int32.t)) (__anonstruct_Key_21_a_items_55_at_L :
  (memory __anonstruct_Key_21 Int32.t))
  =
     (forall i_4 : int.
      ((((<=) (0) i_4) /\
       (((<) i_4
        (Int32.to_int
        (select __anonstruct_Map_24_capacity_map_15_8_at_L map_15)))
       /\
       (not
       (Int32.(=)
       (select __anonstruct_Item_23_existent_items_55_at_L
       (shift (select __anonstruct_Map_24_items_map_15_8_at_L map_15) i_4))
       (#"map_c.jc" 154 46 58# "expl:Integer cast" (Int32.of_int (0))))))) ->
       (forall j_0 : int.
        (((not ((=) j_0 i_4)) /\
         (((<=) (0) j_0) /\
         (((<) j_0
          (Int32.to_int
          (select __anonstruct_Map_24_capacity_map_15_8_at_L map_15)))
         /\
         (not
         (Int32.(=)
         (select __anonstruct_Item_23_existent_items_55_at_L
         (shift (select __anonstruct_Map_24_items_map_15_8_at_L map_15) j_0))
         (#"map_c.jc" 158 50 62# "expl:Integer cast" (Int32.of_int (0))))))))
         ->
         ((not
          (Int32.(=)
          (select __anonstruct_Key_21_a_items_55_at_L
          (select __anonstruct_Item_23_key_2_items_55_at_L
          (shift (select __anonstruct_Map_24_items_map_15_8_at_L map_15) i_4)))
          (select __anonstruct_Key_21_a_items_55_at_L
          (select __anonstruct_Item_23_key_2_items_55_at_L
          (shift (select __anonstruct_Map_24_items_map_15_8_at_L map_15) j_0)))))
         \/
         (not
         (Int32.(=)
         (select __anonstruct_Key_21_b_items_55_at_L
         (select __anonstruct_Item_23_key_2_items_55_at_L
         (shift (select __anonstruct_Map_24_items_map_15_8_at_L map_15) i_4)))
         (select __anonstruct_Key_21_b_items_55_at_L
         (select __anonstruct_Item_23_key_2_items_55_at_L
         (shift (select __anonstruct_Map_24_items_map_15_8_at_L map_15) j_0))))))))))
  
  
end

theory Logic_valid_items_arr_capacity

  use import core.Voidp 
  
  use import Root___anonstruct_Value_22 
  
  use import Root___anonstruct_Map_24 
  
  use import Root___anonstruct_Key_21 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  predicate valid_items_arr_capacity (map_16 : (pointer __anonstruct_Map_24))
  (voidP_items_56_alloc_table_at_L : (alloc_table voidP))
  (__anonstruct_Value_22_items_56_alloc_table_at_L : (alloc_table
  __anonstruct_Value_22)) (__anonstruct_Key_21_items_56_alloc_table_at_L :
  (alloc_table __anonstruct_Key_21)) (__anonstruct_Map_24_count_map_16_9_at_L
  : (memory __anonstruct_Map_24 Int32.t))
  (__anonstruct_Map_24_capacity_map_16_9_at_L : (memory __anonstruct_Map_24
  Int32.t)) (__anonstruct_Map_24_items_map_16_9_at_L : (memory
  __anonstruct_Map_24 (pointer voidP)))
  (__anonstruct_Item_23_value_2_items_56_at_L : (memory voidP (pointer
  __anonstruct_Value_22))) (__anonstruct_Item_23_key_2_items_56_at_L :
  (memory voidP (pointer __anonstruct_Key_21)))
  =
     (((Int32.(>) (select __anonstruct_Map_24_capacity_map_16_9_at_L map_16)
       (#"map_c.jc" 165 26 38# "expl:Integer cast" (Int32.of_int (0))))
      /\
      ((Int32.(<=) (#"map_c.jc" 165 44 56# "expl:Integer cast" (Int32.of_int
       (0))) (select __anonstruct_Map_24_count_map_16_9_at_L map_16))
      /\
      (Int32.(<=) (select __anonstruct_Map_24_count_map_16_9_at_L map_16)
      (select __anonstruct_Map_24_capacity_map_16_9_at_L map_16)))) ->
      (if
       ((<=) (0)
       (Int.(-)
       (Int32.to_int
       (select __anonstruct_Map_24_capacity_map_16_9_at_L map_16)) (1))) then
       (((<=)
        (offset_min voidP_items_56_alloc_table_at_L
        (select __anonstruct_Map_24_items_map_16_9_at_L map_16)) (0))
       /\
       (((>=)
        (offset_max voidP_items_56_alloc_table_at_L
        (select __anonstruct_Map_24_items_map_16_9_at_L map_16))
        (Int.(-)
        (Int32.to_int
        (select __anonstruct_Map_24_capacity_map_16_9_at_L map_16)) (1)))
       /\
       (forall __framac_tmp1 : int.
        ((((<=) (0) __framac_tmp1) /\
         ((<=) __framac_tmp1
         (Int.(-)
         (Int32.to_int
         (select __anonstruct_Map_24_capacity_map_16_9_at_L map_16)) (1))))
         ->
         (((<=)
          (offset_min __anonstruct_Key_21_items_56_alloc_table_at_L
          (select __anonstruct_Item_23_key_2_items_56_at_L
          (shift (select __anonstruct_Map_24_items_map_16_9_at_L map_16)
          __framac_tmp1))) (0))
         /\
         (((>=)
          (offset_max __anonstruct_Key_21_items_56_alloc_table_at_L
          (select __anonstruct_Item_23_key_2_items_56_at_L
          (shift (select __anonstruct_Map_24_items_map_16_9_at_L map_16)
          __framac_tmp1))) (0))
         /\
         (((=) true true) /\
         (((<=)
          (offset_min __anonstruct_Value_22_items_56_alloc_table_at_L
          (select __anonstruct_Item_23_value_2_items_56_at_L
          (shift (select __anonstruct_Map_24_items_map_16_9_at_L map_16)
          __framac_tmp1))) (0))
         /\
         (((>=)
          (offset_max __anonstruct_Value_22_items_56_alloc_table_at_L
          (select __anonstruct_Item_23_value_2_items_56_at_L
          (shift (select __anonstruct_Map_24_items_map_16_9_at_L map_16)
          __framac_tmp1))) (0))
         /\ ((=) true true)))))))))) else ((=) true true)))
  
  
end

theory Axiomatic_ItemsCount

  use import core.Voidp 
  
  use import Root___anonstruct_Map_24 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  function count (pointer __anonstruct_Map_24) int int (memory
  __anonstruct_Map_24 (pointer voidP)) (memory voidP Int32.t) :
  int
  
  
  axiom Count_zero
  #"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/maptypes.h" 52 64 191#
  "expl:Axiom count_zero"  :
  (forall __anonstruct_Map_24_items_map_2_at_L : (memory __anonstruct_Map_24
   (pointer voidP)).
   (forall __anonstruct_Item_23_existent_items_41_at_L : (memory voidP
    Int32.t).
    (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/maptypes.h" 55 12 97#
    (forall map_0_0 : (pointer __anonstruct_Map_24).
     (forall m_0 : int.
      (forall n_2 : int.
       (((>=) m_0 n_2) ->
        ((=)
        (count map_0_0 m_0 n_2 __anonstruct_Map_24_items_map_2_at_L
        __anonstruct_Item_23_existent_items_41_at_L) (0)))))))))
  
  predicate count_one_p (map_1 : (pointer __anonstruct_Map_24)) (m_1 : int)
  (__anonstruct_Map_24_items_map_2_at_L : (memory __anonstruct_Map_24
  (pointer voidP))) (__anonstruct_Item_23_existent_items_41_at_L : (memory
  voidP Int32.t))
  =
     ((=)
     (count map_1 m_1 (Int.(+) m_1 (1)) __anonstruct_Map_24_items_map_2_at_L
     __anonstruct_Item_23_existent_items_41_at_L)
     (if
      ((<>)
      (Int32.to_int
      (select __anonstruct_Item_23_existent_items_41_at_L
      (shift (select __anonstruct_Map_24_items_map_2_at_L map_1) m_1))) (0))
      then (1) else (0)))
  
  
  axiom Count_one
  #"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/maptypes.h" 59 69 178#
  "expl:Axiom count_one"  :
  (forall __anonstruct_Map_24_items_map_2_at_L : (memory __anonstruct_Map_24
   (pointer voidP)).
   (forall __anonstruct_Item_23_existent_items_41_at_L : (memory voidP
    Int32.t).
    (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/maptypes.h" 62 12 77#
    (forall map_2 : (pointer __anonstruct_Map_24).
     (forall m_2 : int.
      (count_one_p map_2 m_2 __anonstruct_Map_24_items_map_2_at_L
      __anonstruct_Item_23_existent_items_41_at_L))))))
  
  predicate count_split_p (map_3 : (pointer __anonstruct_Map_24)) (m_3 : int)
  (n_3 : int) (k_1 : int) (__anonstruct_Map_24_items_map_2_at_L : (memory
  __anonstruct_Map_24 (pointer voidP)))
  (__anonstruct_Item_23_existent_items_41_at_L : (memory voidP Int32.t))
  =
     ((=)
     (count map_3 m_3 k_1 __anonstruct_Map_24_items_map_2_at_L
     __anonstruct_Item_23_existent_items_41_at_L)
     (Int.(+)
     (count map_3 m_3 n_3 __anonstruct_Map_24_items_map_2_at_L
     __anonstruct_Item_23_existent_items_41_at_L)
     (count map_3 n_3 k_1 __anonstruct_Map_24_items_map_2_at_L
     __anonstruct_Item_23_existent_items_41_at_L)))
  
  
  axiom Count_split
  #"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/maptypes.h" 66 68 211#
  "expl:Axiom count_split"  :
  (forall __anonstruct_Map_24_items_map_2_at_L : (memory __anonstruct_Map_24
   (pointer voidP)).
   (forall __anonstruct_Item_23_existent_items_41_at_L : (memory voidP
    Int32.t).
    (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/maptypes.h" 69 12 109#
    (forall map_4 : (pointer __anonstruct_Map_24).
     (forall m_4 : int.
      (forall n_4 : int.
       (forall k_2 : int.
        ((((<=) m_4 n_4) /\ ((<=) n_4 k_2)) ->
         (count_split_p map_4 m_4 n_4 k_2
         __anonstruct_Map_24_items_map_2_at_L
         __anonstruct_Item_23_existent_items_41_at_L)))))))))
  
end

theory Logic_all_count

  use import core.Voidp 
  
  use import Root___anonstruct_Map_24 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import Axiomatic_ItemsCount 
  
  use why3.Bool.Bool 
  
  function all_count (map_5 : (pointer __anonstruct_Map_24))
  (__anonstruct_Map_24_capacity_map_5_5_at_L : (memory __anonstruct_Map_24
  Int32.t)) (__anonstruct_Map_24_items_map_5_5_at_L : (memory
  __anonstruct_Map_24 (pointer voidP)))
  (__anonstruct_Item_23_existent_items_97_at_L : (memory voidP Int32.t)) :
  int
  =
     (count map_5 (0)
     (Int32.to_int (select __anonstruct_Map_24_capacity_map_5_5_at_L map_5))
     __anonstruct_Map_24_items_map_5_5_at_L
     __anonstruct_Item_23_existent_items_97_at_L)
  
  
end

theory Logic_count_correct

  use import core.Voidp 
  
  use import Root___anonstruct_Map_24 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_all_count 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  predicate count_correct (map_17 : (pointer __anonstruct_Map_24))
  (__anonstruct_Map_24_count_map_17_10_at_L : (memory __anonstruct_Map_24
  Int32.t)) (__anonstruct_Map_24_capacity_map_17_10_at_L : (memory
  __anonstruct_Map_24 Int32.t)) (__anonstruct_Map_24_items_map_17_10_at_L :
  (memory __anonstruct_Map_24 (pointer voidP)))
  (__anonstruct_Item_23_existent_items_101_at_L : (memory voidP Int32.t))
  =
     (((=)
      (all_count map_17 __anonstruct_Map_24_capacity_map_17_10_at_L
      __anonstruct_Map_24_items_map_17_10_at_L
      __anonstruct_Item_23_existent_items_101_at_L)
      (Int32.to_int (select __anonstruct_Map_24_count_map_17_10_at_L map_17)))
     /\
     (Int32.(>=) (select __anonstruct_Map_24_count_map_17_10_at_L map_17)
     (#"map_c.jc" 187 23 35# "expl:Integer cast" (Int32.of_int (0)))))
  
  
end

theory Logic_valid_item

  use import core.Voidp 
  
  use import Root___anonstruct_Map_24 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  predicate valid_item (map_14 : (pointer __anonstruct_Map_24)) (idx : int)
  (__anonstruct_Map_24_capacity_map_14_7_at_L : (memory __anonstruct_Map_24
  Int32.t)) (__anonstruct_Map_24_items_map_14_7_at_L : (memory
  __anonstruct_Map_24 (pointer voidP)))
  (__anonstruct_Item_23_existent_items_54_at_L : (memory voidP Int32.t))
  =
     (((<=) (0) idx) /\
     (((<) idx
      (Int32.to_int
      (select __anonstruct_Map_24_capacity_map_14_7_at_L map_14)))
     /\
     ((Int32.(<=) (#"map_c.jc" 148 8 20# "expl:Integer cast" (Int32.of_int
      (0)))
      (select __anonstruct_Item_23_existent_items_54_at_L
      (shift (select __anonstruct_Map_24_items_map_14_7_at_L map_14) idx)))
     /\
     (Int32.(<=)
     (select __anonstruct_Item_23_existent_items_54_at_L
     (shift (select __anonstruct_Map_24_items_map_14_7_at_L map_14) idx))
     (#"map_c.jc" 149 40 52# "expl:Integer cast" (Int32.of_int (1)))))))
  
  
end

theory Logic_valid_items

  use import core.Voidp 
  
  use import Root___anonstruct_Map_24 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_valid_item 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  predicate valid_items (map_18 : (pointer __anonstruct_Map_24))
  (__anonstruct_Map_24_capacity_map_18_11_at_L : (memory __anonstruct_Map_24
  Int32.t)) (__anonstruct_Map_24_items_map_18_11_at_L : (memory
  __anonstruct_Map_24 (pointer voidP)))
  (__anonstruct_Item_23_existent_items_105_at_L : (memory voidP Int32.t))
  =
     (forall i_5 : int.
      ((((<=) (0) i_5) /\
       ((<) i_5
       (Int32.to_int
       (select __anonstruct_Map_24_capacity_map_18_11_at_L map_18)))) ->
       (valid_item map_18 i_5 __anonstruct_Map_24_capacity_map_18_11_at_L
       __anonstruct_Map_24_items_map_18_11_at_L
       __anonstruct_Item_23_existent_items_105_at_L)))
  
  
end

theory Logic_valid_map_sizes

  use import Root___anonstruct_Map_24 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  predicate valid_map_sizes (map_19 : (pointer __anonstruct_Map_24))
  (__anonstruct_Map_24_count_map_19_12_at_L : (memory __anonstruct_Map_24
  Int32.t)) (__anonstruct_Map_24_capacity_map_19_12_at_L : (memory
  __anonstruct_Map_24 Int32.t))
  =
     ((Int32.(<=) (#"map_c.jc" 195 6 18# "expl:Integer cast" (Int32.of_int
      (0))) (select __anonstruct_Map_24_count_map_19_12_at_L map_19))
     /\
     (Int32.(<=) (select __anonstruct_Map_24_count_map_19_12_at_L map_19)
     (select __anonstruct_Map_24_capacity_map_19_12_at_L map_19)))
  
  
end

theory Logic_valid_map_begin

  use import core.Voidp 
  
  use import Root___anonstruct_Map_24 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  predicate valid_map_begin (map_22 : (pointer __anonstruct_Map_24))
  (__anonstruct_Map_24_count_map_22_15_at_L : (memory __anonstruct_Map_24
  Int32.t)) (__anonstruct_Map_24_capacity_map_22_15_at_L : (memory
  __anonstruct_Map_24 Int32.t)) (__anonstruct_Map_24_items_map_22_15_at_L :
  (memory __anonstruct_Map_24 (pointer voidP)))
  (__anonstruct_Item_23_existent_items_59_at_L : (memory voidP Int32.t))
  =
     (((Int32.(>) (select __anonstruct_Map_24_count_map_22_15_at_L map_22)
       (#"map_c.jc" 215 22 34# "expl:Integer cast" (Int32.of_int (0)))) ->
       ((Int32.(=)
        (select __anonstruct_Item_23_existent_items_59_at_L
        (shift (select __anonstruct_Map_24_items_map_22_15_at_L map_22) (0)))
        (#"map_c.jc" 216 40 52# "expl:Integer cast" (Int32.of_int (1))))
       \/
       (Int32.(=)
       (select __anonstruct_Item_23_existent_items_59_at_L
       (shift (select __anonstruct_Map_24_items_map_22_15_at_L map_22) (1)))
       (#"map_c.jc" 217 41 53# "expl:Integer cast" (Int32.of_int (1))))))
     \/
     ((Int32.(=) (select __anonstruct_Map_24_count_map_22_15_at_L map_22)
      (#"map_c.jc" 218 24 36# "expl:Integer cast" (Int32.of_int (0)))) ->
      (forall i_8 : int.
       ((((<=) (0) i_8) /\
        ((<) i_8
        (Int32.to_int
        (select __anonstruct_Map_24_capacity_map_22_15_at_L map_22)))) ->
        (Int32.(=)
        (select __anonstruct_Item_23_existent_items_59_at_L
        (shift (select __anonstruct_Map_24_items_map_22_15_at_L map_22) i_8))
        (#"map_c.jc" 221 46 58# "expl:Integer cast" (Int32.of_int (0))))))))
  
  
end

theory Logic_two_consecutive_false

  use import core.Voidp 
  
  use import Root___anonstruct_Map_24 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  predicate two_consecutive_false (map_20 : (pointer __anonstruct_Map_24))
  (__anonstruct_Map_24_capacity_map_20_13_at_L : (memory __anonstruct_Map_24
  Int32.t)) (__anonstruct_Map_24_items_map_20_13_at_L : (memory
  __anonstruct_Map_24 (pointer voidP)))
  (__anonstruct_Item_23_existent_items_57_at_L : (memory voidP Int32.t))
  =
     (exists i_6 : int.
      (((<=) (0) i_6) /\
      (((<) i_6
       (Int.(-)
       (Int32.to_int
       (select __anonstruct_Map_24_capacity_map_20_13_at_L map_20)) (1)))
      /\
      ((Int32.(=)
       (select __anonstruct_Item_23_existent_items_57_at_L
       (shift (select __anonstruct_Map_24_items_map_20_13_at_L map_20) i_6))
       (#"map_c.jc" 200 43 55# "expl:Integer cast" (Int32.of_int (0))))
      /\
      (Int32.(=)
      (select __anonstruct_Item_23_existent_items_57_at_L
      (shift (select __anonstruct_Map_24_items_map_20_13_at_L map_20)
      (Int.(+) i_6 (1)))) (#"map_c.jc" 201 48 60# "expl:Integer cast"
      (Int32.of_int (0))))))))
  
  
end

theory Logic_rest_false_after_double

  use import core.Voidp 
  
  use import Root___anonstruct_Map_24 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_two_consecutive_false 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  predicate rest_false_after_double (map_21 : (pointer __anonstruct_Map_24))
  (__anonstruct_Map_24_capacity_map_21_14_at_L : (memory __anonstruct_Map_24
  Int32.t)) (__anonstruct_Map_24_items_map_21_14_at_L : (memory
  __anonstruct_Map_24 (pointer voidP)))
  (__anonstruct_Item_23_existent_items_58_at_L : (memory voidP Int32.t))
  =
     ((two_consecutive_false map_21
      __anonstruct_Map_24_capacity_map_21_14_at_L
      __anonstruct_Map_24_items_map_21_14_at_L
      __anonstruct_Item_23_existent_items_58_at_L) ->
      (forall j_1 : int.
       ((((<=) (0) j_1) /\
        (((<) j_1
         (Int32.to_int
         (select __anonstruct_Map_24_capacity_map_21_14_at_L map_21)))
        /\
        (exists i_7 : int.
         (((<=) (0) i_7) /\
         (((<) i_7
          (Int.(-)
          (Int32.to_int
          (select __anonstruct_Map_24_capacity_map_21_14_at_L map_21)) (1)))
         /\
         ((Int32.(=)
          (select __anonstruct_Item_23_existent_items_58_at_L
          (shift (select __anonstruct_Map_24_items_map_21_14_at_L map_21)
          i_7)) (#"map_c.jc" 209 51 63# "expl:Integer cast" (Int32.of_int
          (0))))
         /\
         ((Int32.(=)
          (select __anonstruct_Item_23_existent_items_58_at_L
          (shift (select __anonstruct_Map_24_items_map_21_14_at_L map_21)
          (Int.(+) i_7 (1)))) (#"map_c.jc" 210 56 68# "expl:Integer cast"
          (Int32.of_int (0))))
         /\ ((<) (Int.(+) i_7 (1)) j_1)))))))) ->
        (Int32.(=)
        (select __anonstruct_Item_23_existent_items_58_at_L
        (shift (select __anonstruct_Map_24_items_map_21_14_at_L map_21) j_1))
        (#"map_c.jc" 212 44 56# "expl:Integer cast" (Int32.of_int (0)))))))
  
  
end

theory Logic_is_valid_map

  use import core.Voidp 
  
  use import Root___anonstruct_Value_22 
  
  use import Root___anonstruct_Map_24 
  
  use import Root___anonstruct_Key_21 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_valid_map_sizes 
  
  use import Logic_valid_map_begin 
  
  use import Logic_valid_items_arr_capacity 
  
  use import Logic_valid_items 
  
  use import Logic_unique_items 
  
  use import Logic_rest_false_after_double 
  
  use import Logic_count_correct 
  
  use import Logic_all_valid_existence 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  predicate is_valid_map (map_23 : (pointer __anonstruct_Map_24))
  (voidP_items_113_alloc_table_at_L : (alloc_table voidP))
  (__anonstruct_Value_22_items_113_alloc_table_at_L : (alloc_table
  __anonstruct_Value_22)) (__anonstruct_Map_24_map_23_16_alloc_table_at_L :
  (alloc_table __anonstruct_Map_24))
  (__anonstruct_Key_21_items_113_alloc_table_at_L : (alloc_table
  __anonstruct_Key_21)) (__anonstruct_Map_24_count_map_23_16_at_L : (memory
  __anonstruct_Map_24 Int32.t)) (__anonstruct_Map_24_capacity_map_23_16_at_L
  : (memory __anonstruct_Map_24 Int32.t))
  (__anonstruct_Map_24_items_map_23_16_at_L : (memory __anonstruct_Map_24
  (pointer voidP))) (__anonstruct_Item_23_existent_items_113_at_L : (memory
  voidP Int32.t)) (__anonstruct_Item_23_value_2_items_113_at_L : (memory
  voidP (pointer __anonstruct_Value_22)))
  (__anonstruct_Item_23_key_2_items_113_at_L : (memory voidP (pointer
  __anonstruct_Key_21))) (__anonstruct_Key_21_b_items_113_at_L : (memory
  __anonstruct_Key_21 Int32.t)) (__anonstruct_Key_21_a_items_113_at_L :
  (memory __anonstruct_Key_21 Int32.t))
  =
     ((((<=)
       (offset_min __anonstruct_Map_24_map_23_16_alloc_table_at_L map_23)
       (0))
      /\
      (((>=)
       (offset_max __anonstruct_Map_24_map_23_16_alloc_table_at_L map_23)
       (0))
      /\ ((=) true true)))
     /\
     ((all_valid_existence map_23 __anonstruct_Map_24_capacity_map_23_16_at_L
      __anonstruct_Map_24_items_map_23_16_at_L
      __anonstruct_Item_23_existent_items_113_at_L)
     /\
     ((unique_items map_23 __anonstruct_Map_24_capacity_map_23_16_at_L
      __anonstruct_Map_24_items_map_23_16_at_L
      __anonstruct_Item_23_existent_items_113_at_L
      __anonstruct_Item_23_key_2_items_113_at_L
      __anonstruct_Key_21_b_items_113_at_L
      __anonstruct_Key_21_a_items_113_at_L)
     /\
     ((valid_items_arr_capacity map_23 voidP_items_113_alloc_table_at_L
      __anonstruct_Value_22_items_113_alloc_table_at_L
      __anonstruct_Key_21_items_113_alloc_table_at_L
      __anonstruct_Map_24_count_map_23_16_at_L
      __anonstruct_Map_24_capacity_map_23_16_at_L
      __anonstruct_Map_24_items_map_23_16_at_L
      __anonstruct_Item_23_value_2_items_113_at_L
      __anonstruct_Item_23_key_2_items_113_at_L)
     /\
     ((count_correct map_23 __anonstruct_Map_24_count_map_23_16_at_L
      __anonstruct_Map_24_capacity_map_23_16_at_L
      __anonstruct_Map_24_items_map_23_16_at_L
      __anonstruct_Item_23_existent_items_113_at_L)
     /\
     ((valid_items map_23 __anonstruct_Map_24_capacity_map_23_16_at_L
      __anonstruct_Map_24_items_map_23_16_at_L
      __anonstruct_Item_23_existent_items_113_at_L)
     /\
     ((valid_map_sizes map_23 __anonstruct_Map_24_count_map_23_16_at_L
      __anonstruct_Map_24_capacity_map_23_16_at_L)
     /\
     ((valid_map_begin map_23 __anonstruct_Map_24_count_map_23_16_at_L
      __anonstruct_Map_24_capacity_map_23_16_at_L
      __anonstruct_Map_24_items_map_23_16_at_L
      __anonstruct_Item_23_existent_items_113_at_L)
     /\
     (rest_false_after_double map_23
     __anonstruct_Map_24_capacity_map_23_16_at_L
     __anonstruct_Map_24_items_map_23_16_at_L
     __anonstruct_Item_23_existent_items_113_at_L)))))))))
  
  
end

theory Struct_voidP

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import core.Tag_table 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use import core.Alloc 
  
  use why3.Bool.Bool 
  
  use import core.Voidp_tag_id 
  
  predicate frame_tag_struct_voidP (p : (pointer voidP)) (old_voidP_tag_table
  : (tag_table voidP)) (voidP_tag_table : (tag_table voidP))
  =
     ((tag_extends old_voidP_tag_table voidP_tag_table) /\
     (alloc_tag_block old_voidP_tag_table voidP_tag_table p))
  
  predicate frame_free_struct_voidP (p : (pointer voidP))
  (old_voidP_alloc_table : (alloc_table voidP)) (voidP_alloc_table :
  (alloc_table voidP))
  =
     ((free_extends old_voidP_alloc_table voidP_alloc_table) /\
     (free_block old_voidP_alloc_table voidP_alloc_table p))
  
  predicate frame_alloc_struct_voidP (p : (pointer voidP)) (n : int)
  (old_voidP_alloc_table : (alloc_table voidP)) (voidP_alloc_table :
  (alloc_table voidP))
  =
     ((alloc_extends old_voidP_alloc_table voidP_alloc_table) /\
     (alloc_block old_voidP_alloc_table voidP_alloc_table p n))
  
  predicate fresh_tag_struct_voidP (p : (pointer voidP)) (n : int)
  (voidP_tag_table : (tag_table voidP))
  = (tag_fresh voidP_tag_table p)
  
  predicate fresh_alloc_struct_voidP (p : (pointer voidP)) (n : int)
  (voidP_alloc_table : (alloc_table voidP))
  = (alloc_fresh voidP_alloc_table p)
  
  predicate container_of_singleton_struct_voidP (p : (pointer voidP))
  (voidP_tag_table : (tag_table voidP)) = true
  
  predicate container_of_struct_voidP (p : (pointer voidP)) (l : int) (r :
  int) (voidP_tag_table : (tag_table voidP)) = true
  
  predicate typeof_singleton_struct_voidP (p : (pointer voidP))
  (voidP_tag_table : (tag_table voidP))
  = ((=) (typeof voidP_tag_table p) voidP_tag)
  
  predicate typeof_struct_voidP (p : (pointer voidP)) (l : int) (r : int)
  (voidP_tag_table : (tag_table voidP))
  =
     (((=) (typeof voidP_tag_table p) voidP_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       ((=) (typeof voidP_tag_table (shift p i)) voidP_tag))))
  
  predicate instanceof_singleton_struct_voidP (p : (pointer voidP))
  (voidP_tag_table : (tag_table voidP))
  = (instanceof voidP_tag_table p voidP_tag)
  
  predicate instanceof_struct_voidP (p : (pointer voidP)) (l : int) (r : int)
  (voidP_tag_table : (tag_table voidP))
  =
     ((instanceof voidP_tag_table p voidP_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       (instanceof voidP_tag_table (shift p i) voidP_tag))))
  
  predicate right_valid_struct_voidP (p : (pointer voidP)) (b : int)
  (voidP_alloc_table : (alloc_table voidP))
  = ((>=) (offset_max voidP_alloc_table p) b)
  
  predicate left_valid_struct_voidP (p : (pointer voidP)) (a : int)
  (voidP_alloc_table : (alloc_table voidP))
  = ((<=) (offset_min voidP_alloc_table p) a)
  
  predicate strict_left_valid_struct_voidP (p : (pointer voidP)) (a : int)
  (voidP_alloc_table : (alloc_table voidP))
  = ((=) (offset_min voidP_alloc_table p) a)
  
  predicate valid_struct_voidP (p : (pointer voidP)) (a : int) (b : int)
  (voidP_alloc_table : (alloc_table voidP))
  =
     (((<=) (offset_min voidP_alloc_table p) a) /\
     ((>=) (offset_max voidP_alloc_table p) b))
  
  predicate strict_valid_struct_voidP (p : (pointer voidP)) (a : int) (b :
  int) (voidP_alloc_table : (alloc_table voidP))
  =
     (((=) (offset_min voidP_alloc_table p) a) /\
     ((=) (offset_max voidP_alloc_table p) b))
  
end

theory Struct___anonstruct_Value_22

  use import core.Tag_table_type 
  
  use import core.Tag_table 
  
  use import core.Tag_id 
  
  use import core.Tag 
  
  use import Root___anonstruct_Value_22 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use import core.Alloc 
  
  use why3.Bool.Bool 
  
  function __anonstruct_Value_22_tag  : (tag_id
  __anonstruct_Value_22)
  
  axiom U___anonstruct_Value_22_parenttag_bottom  :
  (parenttag __anonstruct_Value_22_tag bottom_tag)
  
  axiom U___anonstruct_Value_22_is_final  :
  (forall __anonstruct_Value_22_tag_table : (tag_table
   __anonstruct_Value_22).
   (forall p : (pointer __anonstruct_Value_22).
    ((instanceof __anonstruct_Value_22_tag_table p __anonstruct_Value_22_tag)
     ->
     ((=) (typeof __anonstruct_Value_22_tag_table p)
     __anonstruct_Value_22_tag))))
  
  predicate frame_tag_struct___anonstruct_Value_22 (p : (pointer
  __anonstruct_Value_22)) (old___anonstruct_Value_22_tag_table : (tag_table
  __anonstruct_Value_22)) (__anonstruct_Value_22_tag_table : (tag_table
  __anonstruct_Value_22))
  =
     ((tag_extends old___anonstruct_Value_22_tag_table
      __anonstruct_Value_22_tag_table)
     /\
     (alloc_tag_block old___anonstruct_Value_22_tag_table
     __anonstruct_Value_22_tag_table p))
  
  predicate frame_free_struct___anonstruct_Value_22 (p : (pointer
  __anonstruct_Value_22)) (old___anonstruct_Value_22_alloc_table :
  (alloc_table __anonstruct_Value_22)) (__anonstruct_Value_22_alloc_table :
  (alloc_table __anonstruct_Value_22))
  =
     ((free_extends old___anonstruct_Value_22_alloc_table
      __anonstruct_Value_22_alloc_table)
     /\
     (free_block old___anonstruct_Value_22_alloc_table
     __anonstruct_Value_22_alloc_table p))
  
  predicate frame_alloc_struct___anonstruct_Value_22 (p : (pointer
  __anonstruct_Value_22)) (n : int) (old___anonstruct_Value_22_alloc_table :
  (alloc_table __anonstruct_Value_22)) (__anonstruct_Value_22_alloc_table :
  (alloc_table __anonstruct_Value_22))
  =
     ((alloc_extends old___anonstruct_Value_22_alloc_table
      __anonstruct_Value_22_alloc_table)
     /\
     (alloc_block old___anonstruct_Value_22_alloc_table
     __anonstruct_Value_22_alloc_table p n))
  
  predicate fresh_tag_struct___anonstruct_Value_22 (p : (pointer
  __anonstruct_Value_22)) (n : int) (__anonstruct_Value_22_tag_table :
  (tag_table __anonstruct_Value_22))
  = (tag_fresh __anonstruct_Value_22_tag_table p)
  
  predicate fresh_alloc_struct___anonstruct_Value_22 (p : (pointer
  __anonstruct_Value_22)) (n : int) (__anonstruct_Value_22_alloc_table :
  (alloc_table __anonstruct_Value_22))
  = (alloc_fresh __anonstruct_Value_22_alloc_table p)
  
  predicate container_of_singleton_struct___anonstruct_Value_22 (p : (pointer
  __anonstruct_Value_22)) (__anonstruct_Value_22_tag_table : (tag_table
  __anonstruct_Value_22)) = true
  
  predicate container_of_struct___anonstruct_Value_22 (p : (pointer
  __anonstruct_Value_22)) (l : int) (r : int)
  (__anonstruct_Value_22_tag_table : (tag_table __anonstruct_Value_22))
  = true
  
  predicate typeof_singleton_struct___anonstruct_Value_22 (p : (pointer
  __anonstruct_Value_22)) (__anonstruct_Value_22_tag_table : (tag_table
  __anonstruct_Value_22))
  =
     ((=) (typeof __anonstruct_Value_22_tag_table p)
     __anonstruct_Value_22_tag)
  
  predicate typeof_struct___anonstruct_Value_22 (p : (pointer
  __anonstruct_Value_22)) (l : int) (r : int)
  (__anonstruct_Value_22_tag_table : (tag_table __anonstruct_Value_22))
  =
     (((=) (typeof __anonstruct_Value_22_tag_table p)
      __anonstruct_Value_22_tag)
     /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       ((=) (typeof __anonstruct_Value_22_tag_table (shift p i))
       __anonstruct_Value_22_tag))))
  
  predicate instanceof_singleton_struct___anonstruct_Value_22 (p : (pointer
  __anonstruct_Value_22)) (__anonstruct_Value_22_tag_table : (tag_table
  __anonstruct_Value_22))
  = (instanceof __anonstruct_Value_22_tag_table p __anonstruct_Value_22_tag)
  
  predicate instanceof_struct___anonstruct_Value_22 (p : (pointer
  __anonstruct_Value_22)) (l : int) (r : int)
  (__anonstruct_Value_22_tag_table : (tag_table __anonstruct_Value_22))
  =
     ((instanceof __anonstruct_Value_22_tag_table p __anonstruct_Value_22_tag)
     /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       (instanceof __anonstruct_Value_22_tag_table (shift p i)
       __anonstruct_Value_22_tag))))
  
  predicate right_valid_struct___anonstruct_Value_22 (p : (pointer
  __anonstruct_Value_22)) (b : int) (__anonstruct_Value_22_alloc_table :
  (alloc_table __anonstruct_Value_22))
  = ((>=) (offset_max __anonstruct_Value_22_alloc_table p) b)
  
  predicate left_valid_struct___anonstruct_Value_22 (p : (pointer
  __anonstruct_Value_22)) (a : int) (__anonstruct_Value_22_alloc_table :
  (alloc_table __anonstruct_Value_22))
  = ((<=) (offset_min __anonstruct_Value_22_alloc_table p) a)
  
  predicate strict_left_valid_struct___anonstruct_Value_22 (p : (pointer
  __anonstruct_Value_22)) (a : int) (__anonstruct_Value_22_alloc_table :
  (alloc_table __anonstruct_Value_22))
  = ((=) (offset_min __anonstruct_Value_22_alloc_table p) a)
  
  predicate valid_struct___anonstruct_Value_22 (p : (pointer
  __anonstruct_Value_22)) (a : int) (b : int)
  (__anonstruct_Value_22_alloc_table : (alloc_table __anonstruct_Value_22))
  =
     (((<=) (offset_min __anonstruct_Value_22_alloc_table p) a) /\
     ((>=) (offset_max __anonstruct_Value_22_alloc_table p) b))
  
  predicate strict_valid_struct___anonstruct_Value_22 (p : (pointer
  __anonstruct_Value_22)) (a : int) (b : int)
  (__anonstruct_Value_22_alloc_table : (alloc_table __anonstruct_Value_22))
  =
     (((=) (offset_min __anonstruct_Value_22_alloc_table p) a) /\
     ((=) (offset_max __anonstruct_Value_22_alloc_table p) b))
  
  axiom U___anonstruct_Value_22_int  :
  ((=) (int_of_tag __anonstruct_Value_22_tag) (7))
  
end

theory Struct___anonstruct_Item_23

  use import core.Voidp_tag_id 
  
  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import core.Tag_table 
  
  use import core.Tag_id 
  
  use import core.Tag 
  
  use import Struct_voidP 
  
  use import Struct___anonstruct_Value_22 
  
  use import Struct___anonstruct_Key_21 
  
  use import Root___anonstruct_Value_22 
  
  use import Root___anonstruct_Key_21 
  
  use import core.Pset 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import int.Int 
  
  use import core.Alloc_table 
  
  use import core.Alloc 
  
  use why3.Bool.Bool 
  
  function __anonstruct_Item_23_tag  : (tag_id
  voidP)
  
  axiom U___anonstruct_Item_23_parenttag_voidP  :
  (parenttag __anonstruct_Item_23_tag voidP_tag)
  
  axiom U___anonstruct_Item_23_is_final  :
  (forall voidP_tag_table : (tag_table voidP).
   (forall p : (pointer voidP).
    ((instanceof voidP_tag_table p __anonstruct_Item_23_tag) ->
     ((=) (typeof voidP_tag_table p) __anonstruct_Item_23_tag))))
  
  predicate frame_tag_struct___anonstruct_Item_23 (p : (pointer voidP))
  (old___anonstruct_Key_21_tag_table : (tag_table __anonstruct_Key_21))
  (__anonstruct_Key_21_tag_table : (tag_table __anonstruct_Key_21))
  (old___anonstruct_Value_22_tag_table : (tag_table __anonstruct_Value_22))
  (__anonstruct_Value_22_tag_table : (tag_table __anonstruct_Value_22))
  (old_voidP_tag_table : (tag_table voidP)) (voidP_tag_table : (tag_table
  voidP)) (__anonstruct_Item_23_key_2 : (memory voidP (pointer
  __anonstruct_Key_21))) (__anonstruct_Item_23_value_2 : (memory voidP
  (pointer __anonstruct_Value_22)))
  =
     ((tag_extends old___anonstruct_Key_21_tag_table
      __anonstruct_Key_21_tag_table)
     /\
     ((alloc_tag_blockset old___anonstruct_Key_21_tag_table
      __anonstruct_Key_21_tag_table
      (pset_singleton (select __anonstruct_Item_23_key_2 p)))
     /\
     ((tag_extends old___anonstruct_Value_22_tag_table
      __anonstruct_Value_22_tag_table)
     /\
     ((alloc_tag_blockset old___anonstruct_Value_22_tag_table
      __anonstruct_Value_22_tag_table
      (pset_singleton (select __anonstruct_Item_23_value_2 p)))
     /\
     ((tag_extends old_voidP_tag_table voidP_tag_table) /\
     (alloc_tag_block old_voidP_tag_table voidP_tag_table p))))))
  
  predicate frame_free_struct___anonstruct_Item_23 (p : (pointer voidP))
  (old___anonstruct_Key_21_alloc_table : (alloc_table __anonstruct_Key_21))
  (__anonstruct_Key_21_alloc_table : (alloc_table __anonstruct_Key_21))
  (old___anonstruct_Value_22_alloc_table : (alloc_table
  __anonstruct_Value_22)) (__anonstruct_Value_22_alloc_table : (alloc_table
  __anonstruct_Value_22)) (old_voidP_alloc_table : (alloc_table voidP))
  (voidP_alloc_table : (alloc_table voidP)) (__anonstruct_Item_23_key_2 :
  (memory voidP (pointer __anonstruct_Key_21))) (__anonstruct_Item_23_value_2
  : (memory voidP (pointer __anonstruct_Value_22)))
  =
     ((free_extends old___anonstruct_Key_21_alloc_table
      __anonstruct_Key_21_alloc_table)
     /\
     ((alloc_blockset old___anonstruct_Key_21_alloc_table
      __anonstruct_Key_21_alloc_table
      (pset_singleton (select __anonstruct_Item_23_key_2 p)))
     /\
     ((free_extends old___anonstruct_Value_22_alloc_table
      __anonstruct_Value_22_alloc_table)
     /\
     ((alloc_blockset old___anonstruct_Value_22_alloc_table
      __anonstruct_Value_22_alloc_table
      (pset_singleton (select __anonstruct_Item_23_value_2 p)))
     /\
     ((free_extends old_voidP_alloc_table voidP_alloc_table) /\
     (free_block old_voidP_alloc_table voidP_alloc_table p))))))
  
  predicate frame_alloc_struct___anonstruct_Item_23 (p : (pointer voidP)) (n
  : int) (old___anonstruct_Key_21_alloc_table : (alloc_table
  __anonstruct_Key_21)) (__anonstruct_Key_21_alloc_table : (alloc_table
  __anonstruct_Key_21)) (old___anonstruct_Value_22_alloc_table : (alloc_table
  __anonstruct_Value_22)) (__anonstruct_Value_22_alloc_table : (alloc_table
  __anonstruct_Value_22)) (old_voidP_alloc_table : (alloc_table voidP))
  (voidP_alloc_table : (alloc_table voidP)) (__anonstruct_Item_23_key_2 :
  (memory voidP (pointer __anonstruct_Key_21))) (__anonstruct_Item_23_value_2
  : (memory voidP (pointer __anonstruct_Value_22)))
  =
     ((alloc_extends old___anonstruct_Key_21_alloc_table
      __anonstruct_Key_21_alloc_table)
     /\
     ((alloc_blockset old___anonstruct_Key_21_alloc_table
      __anonstruct_Key_21_alloc_table
      (pset_singleton (select __anonstruct_Item_23_key_2 p)))
     /\
     ((alloc_extends old___anonstruct_Value_22_alloc_table
      __anonstruct_Value_22_alloc_table)
     /\
     ((alloc_blockset old___anonstruct_Value_22_alloc_table
      __anonstruct_Value_22_alloc_table
      (pset_singleton (select __anonstruct_Item_23_value_2 p)))
     /\
     ((alloc_extends old_voidP_alloc_table voidP_alloc_table) /\
     (alloc_block old_voidP_alloc_table voidP_alloc_table p n))))))
  
  predicate fresh_tag_struct___anonstruct_Item_23 (p : (pointer voidP)) (n :
  int) (__anonstruct_Key_21_tag_table : (tag_table __anonstruct_Key_21))
  (__anonstruct_Value_22_tag_table : (tag_table __anonstruct_Value_22))
  (voidP_tag_table : (tag_table voidP)) (__anonstruct_Item_23_key_2 : (memory
  voidP (pointer __anonstruct_Key_21))) (__anonstruct_Item_23_value_2 :
  (memory voidP (pointer __anonstruct_Value_22)))
  =
     ((fresh_tag_struct_voidP p n voidP_tag_table) /\
     ((fresh_tag_struct___anonstruct_Value_22
      (select __anonstruct_Item_23_value_2 p) (0)
      __anonstruct_Value_22_tag_table)
     /\
     ((fresh_tag_struct___anonstruct_Key_21
      (select __anonstruct_Item_23_key_2 p) (0)
      __anonstruct_Key_21_tag_table)
     /\
     (forall i : int.
      ((instanceof voidP_tag_table (shift p i) __anonstruct_Item_23_tag) ->
       ((fresh_tag_struct___anonstruct_Value_22
        (select __anonstruct_Item_23_value_2 (shift p i)) (0)
        __anonstruct_Value_22_tag_table)
       /\
       (fresh_tag_struct___anonstruct_Key_21
       (select __anonstruct_Item_23_key_2 (shift p i)) (0)
       __anonstruct_Key_21_tag_table)))))))
  
  predicate fresh_alloc_struct___anonstruct_Item_23 (p : (pointer voidP)) (n
  : int) (__anonstruct_Key_21_alloc_table : (alloc_table
  __anonstruct_Key_21)) (__anonstruct_Value_22_alloc_table : (alloc_table
  __anonstruct_Value_22)) (voidP_alloc_table : (alloc_table voidP))
  (__anonstruct_Item_23_key_2 : (memory voidP (pointer __anonstruct_Key_21)))
  (__anonstruct_Item_23_value_2 : (memory voidP (pointer
  __anonstruct_Value_22)))
  =
     ((fresh_alloc_struct_voidP p n voidP_alloc_table) /\
     ((fresh_alloc_struct___anonstruct_Value_22
      (select __anonstruct_Item_23_value_2 p) (0)
      __anonstruct_Value_22_alloc_table)
     /\
     ((fresh_alloc_struct___anonstruct_Key_21
      (select __anonstruct_Item_23_key_2 p) (0)
      __anonstruct_Key_21_alloc_table)
     /\
     (forall i : int.
      ((((<=) (0) i) /\ ((<=) i n)) ->
       ((fresh_alloc_struct___anonstruct_Value_22
        (select __anonstruct_Item_23_value_2 (shift p i)) (0)
        __anonstruct_Value_22_alloc_table)
       /\
       (fresh_alloc_struct___anonstruct_Key_21
       (select __anonstruct_Item_23_key_2 (shift p i)) (0)
       __anonstruct_Key_21_alloc_table)))))))
  
  predicate container_of_singleton_struct___anonstruct_Item_23 (p : (pointer
  voidP)) (__anonstruct_Key_21_tag_table : (tag_table __anonstruct_Key_21))
  (__anonstruct_Value_22_tag_table : (tag_table __anonstruct_Value_22))
  (voidP_tag_table : (tag_table voidP)) (__anonstruct_Item_23_key_2 : (memory
  voidP (pointer __anonstruct_Key_21))) (__anonstruct_Item_23_value_2 :
  (memory voidP (pointer __anonstruct_Value_22)))
  =
     ((container_of_singleton_struct___anonstruct_Value_22
      (select __anonstruct_Item_23_value_2 p)
      __anonstruct_Value_22_tag_table)
     /\
     (container_of_singleton_struct___anonstruct_Key_21
     (select __anonstruct_Item_23_key_2 p) __anonstruct_Key_21_tag_table))
  
  predicate container_of_struct___anonstruct_Item_23 (p : (pointer voidP)) (l
  : int) (r : int) (__anonstruct_Key_21_tag_table : (tag_table
  __anonstruct_Key_21)) (__anonstruct_Value_22_tag_table : (tag_table
  __anonstruct_Value_22)) (voidP_tag_table : (tag_table voidP))
  (__anonstruct_Item_23_key_2 : (memory voidP (pointer __anonstruct_Key_21)))
  (__anonstruct_Item_23_value_2 : (memory voidP (pointer
  __anonstruct_Value_22)))
  =
     ((container_of_singleton_struct___anonstruct_Value_22
      (select __anonstruct_Item_23_value_2 p)
      __anonstruct_Value_22_tag_table)
     /\
     ((container_of_singleton_struct___anonstruct_Key_21
      (select __anonstruct_Item_23_key_2 p) __anonstruct_Key_21_tag_table)
     /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       ((container_of_singleton_struct___anonstruct_Value_22
        (select __anonstruct_Item_23_value_2 (shift p i))
        __anonstruct_Value_22_tag_table)
       /\
       (container_of_singleton_struct___anonstruct_Key_21
       (select __anonstruct_Item_23_key_2 (shift p i))
       __anonstruct_Key_21_tag_table))))))
  
  predicate typeof_singleton_struct___anonstruct_Item_23 (p : (pointer
  voidP)) (__anonstruct_Key_21_tag_table : (tag_table __anonstruct_Key_21))
  (__anonstruct_Value_22_tag_table : (tag_table __anonstruct_Value_22))
  (voidP_tag_table : (tag_table voidP)) (__anonstruct_Item_23_key_2 : (memory
  voidP (pointer __anonstruct_Key_21))) (__anonstruct_Item_23_value_2 :
  (memory voidP (pointer __anonstruct_Value_22)))
  =
     (((=) (typeof voidP_tag_table p) __anonstruct_Item_23_tag) /\
     ((typeof_singleton_struct___anonstruct_Value_22
      (select __anonstruct_Item_23_value_2 p)
      __anonstruct_Value_22_tag_table)
     /\
     (typeof_singleton_struct___anonstruct_Key_21
     (select __anonstruct_Item_23_key_2 p) __anonstruct_Key_21_tag_table)))
  
  predicate typeof_struct___anonstruct_Item_23 (p : (pointer voidP)) (l :
  int) (r : int) (__anonstruct_Key_21_tag_table : (tag_table
  __anonstruct_Key_21)) (__anonstruct_Value_22_tag_table : (tag_table
  __anonstruct_Value_22)) (voidP_tag_table : (tag_table voidP))
  (__anonstruct_Item_23_key_2 : (memory voidP (pointer __anonstruct_Key_21)))
  (__anonstruct_Item_23_value_2 : (memory voidP (pointer
  __anonstruct_Value_22)))
  =
     (((=) (typeof voidP_tag_table p) __anonstruct_Item_23_tag) /\
     ((typeof_singleton_struct___anonstruct_Value_22
      (select __anonstruct_Item_23_value_2 p)
      __anonstruct_Value_22_tag_table)
     /\
     ((typeof_singleton_struct___anonstruct_Key_21
      (select __anonstruct_Item_23_key_2 p) __anonstruct_Key_21_tag_table)
     /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       (((=) (typeof voidP_tag_table (shift p i)) __anonstruct_Item_23_tag)
       /\
       ((typeof_singleton_struct___anonstruct_Value_22
        (select __anonstruct_Item_23_value_2 (shift p i))
        __anonstruct_Value_22_tag_table)
       /\
       (typeof_singleton_struct___anonstruct_Key_21
       (select __anonstruct_Item_23_key_2 (shift p i))
       __anonstruct_Key_21_tag_table))))))))
  
  predicate instanceof_singleton_struct___anonstruct_Item_23 (p : (pointer
  voidP)) (__anonstruct_Key_21_tag_table : (tag_table __anonstruct_Key_21))
  (__anonstruct_Value_22_tag_table : (tag_table __anonstruct_Value_22))
  (voidP_tag_table : (tag_table voidP)) (__anonstruct_Item_23_key_2 : (memory
  voidP (pointer __anonstruct_Key_21))) (__anonstruct_Item_23_value_2 :
  (memory voidP (pointer __anonstruct_Value_22)))
  =
     ((instanceof voidP_tag_table p __anonstruct_Item_23_tag) /\
     ((instanceof_singleton_struct___anonstruct_Value_22
      (select __anonstruct_Item_23_value_2 p)
      __anonstruct_Value_22_tag_table)
     /\
     (instanceof_singleton_struct___anonstruct_Key_21
     (select __anonstruct_Item_23_key_2 p) __anonstruct_Key_21_tag_table)))
  
  predicate instanceof_struct___anonstruct_Item_23 (p : (pointer voidP)) (l :
  int) (r : int) (__anonstruct_Key_21_tag_table : (tag_table
  __anonstruct_Key_21)) (__anonstruct_Value_22_tag_table : (tag_table
  __anonstruct_Value_22)) (voidP_tag_table : (tag_table voidP))
  (__anonstruct_Item_23_key_2 : (memory voidP (pointer __anonstruct_Key_21)))
  (__anonstruct_Item_23_value_2 : (memory voidP (pointer
  __anonstruct_Value_22)))
  =
     ((instanceof voidP_tag_table p __anonstruct_Item_23_tag) /\
     ((instanceof_singleton_struct___anonstruct_Value_22
      (select __anonstruct_Item_23_value_2 p)
      __anonstruct_Value_22_tag_table)
     /\
     ((instanceof_singleton_struct___anonstruct_Key_21
      (select __anonstruct_Item_23_key_2 p) __anonstruct_Key_21_tag_table)
     /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       ((instanceof voidP_tag_table (shift p i) __anonstruct_Item_23_tag) /\
       ((instanceof_singleton_struct___anonstruct_Value_22
        (select __anonstruct_Item_23_value_2 (shift p i))
        __anonstruct_Value_22_tag_table)
       /\
       (instanceof_singleton_struct___anonstruct_Key_21
       (select __anonstruct_Item_23_key_2 (shift p i))
       __anonstruct_Key_21_tag_table))))))))
  
  predicate right_valid_struct___anonstruct_Item_23 (p : (pointer voidP)) (b
  : int) (__anonstruct_Key_21_alloc_table : (alloc_table
  __anonstruct_Key_21)) (__anonstruct_Value_22_alloc_table : (alloc_table
  __anonstruct_Value_22)) (voidP_alloc_table : (alloc_table voidP))
  (__anonstruct_Item_23_key_2 : (memory voidP (pointer __anonstruct_Key_21)))
  (__anonstruct_Item_23_value_2 : (memory voidP (pointer
  __anonstruct_Value_22)))
  =
     ((right_valid_struct_voidP p b voidP_alloc_table) /\
     ((right_valid_struct___anonstruct_Value_22
      (select __anonstruct_Item_23_value_2 p) (0)
      __anonstruct_Value_22_alloc_table)
     /\
     (right_valid_struct___anonstruct_Key_21
     (select __anonstruct_Item_23_key_2 p) (0)
     __anonstruct_Key_21_alloc_table)))
  
  predicate left_valid_struct___anonstruct_Item_23 (p : (pointer voidP)) (a :
  int) (__anonstruct_Key_21_alloc_table : (alloc_table __anonstruct_Key_21))
  (__anonstruct_Value_22_alloc_table : (alloc_table __anonstruct_Value_22))
  (voidP_alloc_table : (alloc_table voidP)) (__anonstruct_Item_23_key_2 :
  (memory voidP (pointer __anonstruct_Key_21))) (__anonstruct_Item_23_value_2
  : (memory voidP (pointer __anonstruct_Value_22)))
  =
     ((left_valid_struct_voidP p a voidP_alloc_table) /\
     ((left_valid_struct___anonstruct_Value_22
      (select __anonstruct_Item_23_value_2 p) (0)
      __anonstruct_Value_22_alloc_table)
     /\
     (left_valid_struct___anonstruct_Key_21
     (select __anonstruct_Item_23_key_2 p) (0)
     __anonstruct_Key_21_alloc_table)))
  
  predicate strict_left_valid_struct___anonstruct_Item_23 (p : (pointer
  voidP)) (a : int) (__anonstruct_Key_21_alloc_table : (alloc_table
  __anonstruct_Key_21)) (__anonstruct_Value_22_alloc_table : (alloc_table
  __anonstruct_Value_22)) (voidP_alloc_table : (alloc_table voidP))
  (__anonstruct_Item_23_key_2 : (memory voidP (pointer __anonstruct_Key_21)))
  (__anonstruct_Item_23_value_2 : (memory voidP (pointer
  __anonstruct_Value_22)))
  =
     ((strict_left_valid_struct_voidP p a voidP_alloc_table) /\
     ((left_valid_struct___anonstruct_Value_22
      (select __anonstruct_Item_23_value_2 p) (0)
      __anonstruct_Value_22_alloc_table)
     /\
     (left_valid_struct___anonstruct_Key_21
     (select __anonstruct_Item_23_key_2 p) (0)
     __anonstruct_Key_21_alloc_table)))
  
  predicate valid_struct___anonstruct_Item_23 (p : (pointer voidP)) (a : int)
  (b : int) (__anonstruct_Key_21_alloc_table : (alloc_table
  __anonstruct_Key_21)) (__anonstruct_Value_22_alloc_table : (alloc_table
  __anonstruct_Value_22)) (voidP_alloc_table : (alloc_table voidP))
  (__anonstruct_Item_23_key_2 : (memory voidP (pointer __anonstruct_Key_21)))
  (__anonstruct_Item_23_value_2 : (memory voidP (pointer
  __anonstruct_Value_22)))
  =
     ((valid_struct_voidP p a b voidP_alloc_table) /\
     ((valid_struct___anonstruct_Value_22
      (select __anonstruct_Item_23_value_2 p) (0) (0)
      __anonstruct_Value_22_alloc_table)
     /\
     ((valid_struct___anonstruct_Key_21 (select __anonstruct_Item_23_key_2 p)
      (0) (0) __anonstruct_Key_21_alloc_table)
     /\
     (forall i : int.
      ((((<=) a i) /\ ((<=) i b)) ->
       ((valid_struct___anonstruct_Value_22
        (select __anonstruct_Item_23_value_2 (shift p i)) (0) (0)
        __anonstruct_Value_22_alloc_table)
       /\
       (valid_struct___anonstruct_Key_21
       (select __anonstruct_Item_23_key_2 (shift p i)) (0) (0)
       __anonstruct_Key_21_alloc_table)))))))
  
  predicate strict_valid_struct___anonstruct_Item_23 (p : (pointer voidP)) (a
  : int) (b : int) (__anonstruct_Key_21_alloc_table : (alloc_table
  __anonstruct_Key_21)) (__anonstruct_Value_22_alloc_table : (alloc_table
  __anonstruct_Value_22)) (voidP_alloc_table : (alloc_table voidP))
  (__anonstruct_Item_23_key_2 : (memory voidP (pointer __anonstruct_Key_21)))
  (__anonstruct_Item_23_value_2 : (memory voidP (pointer
  __anonstruct_Value_22)))
  =
     ((strict_valid_struct_voidP p a b voidP_alloc_table) /\
     ((valid_struct___anonstruct_Value_22
      (select __anonstruct_Item_23_value_2 p) (0) (0)
      __anonstruct_Value_22_alloc_table)
     /\
     ((valid_struct___anonstruct_Key_21 (select __anonstruct_Item_23_key_2 p)
      (0) (0) __anonstruct_Key_21_alloc_table)
     /\
     (forall i : int.
      ((((<=) a i) /\ ((<=) i b)) ->
       ((valid_struct___anonstruct_Value_22
        (select __anonstruct_Item_23_value_2 (shift p i)) (0) (0)
        __anonstruct_Value_22_alloc_table)
       /\
       (valid_struct___anonstruct_Key_21
       (select __anonstruct_Item_23_key_2 (shift p i)) (0) (0)
       __anonstruct_Key_21_alloc_table)))))))
  
  axiom U___anonstruct_Item_23_int  :
  ((=) (int_of_tag __anonstruct_Item_23_tag) (4))
  
end

module Struct___anonstruct_Item_23_unsafe

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Item_23 
  
  use import Root___anonstruct_Value_22 
  
  use import Root___anonstruct_Key_21 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val free_struct___anonstruct_Item_23
  (p : (pointer voidP)) 
   (__anonstruct_Key_21_alloc_table : ref (alloc_table __anonstruct_Key_21)) 
    (__anonstruct_Value_22_alloc_table : ref (alloc_table
     __anonstruct_Value_22)) 
     (voidP_alloc_table : ref (alloc_table voidP)) 
      (__anonstruct_Item_23_key_2 : (memory voidP (pointer
       __anonstruct_Key_21))) 
       (__anonstruct_Item_23_value_2 : (memory voidP (pointer
        __anonstruct_Value_22))) : unit
        requires {
          (("expl:Deallocation" ((=) p null)) \/
          (freeable !voidP_alloc_table p)) }
        writes { __anonstruct_Key_21_alloc_table,
        __anonstruct_Value_22_alloc_table, voidP_alloc_table }
        ensures {
          ((((=) p null) /\
           (((=) !__anonstruct_Key_21_alloc_table (old
            !__anonstruct_Key_21_alloc_table))
           /\
           (((=) !__anonstruct_Value_22_alloc_table (old
            !__anonstruct_Value_22_alloc_table))
           /\ ((=) !voidP_alloc_table (old !voidP_alloc_table)))))
          \/
          ((frame_free_struct___anonstruct_Item_23 p (old
           !__anonstruct_Key_21_alloc_table) !__anonstruct_Key_21_alloc_table
           (old !__anonstruct_Value_22_alloc_table)
           !__anonstruct_Value_22_alloc_table (old !voidP_alloc_table)
           !voidP_alloc_table __anonstruct_Item_23_key_2
           __anonstruct_Item_23_value_2)
          /\
          (fresh_alloc_struct___anonstruct_Item_23 p
          (offset_max (old !voidP_alloc_table) p)
          !__anonstruct_Key_21_alloc_table !__anonstruct_Value_22_alloc_table
          !voidP_alloc_table __anonstruct_Item_23_key_2
          __anonstruct_Item_23_value_2))) }
  
  val allocate_struct___anonstruct_Item_23_requires
  (n : int) 
   (__anonstruct_Key_21_alloc_table : ref (alloc_table __anonstruct_Key_21)) 
    (__anonstruct_Value_22_alloc_table : ref (alloc_table
     __anonstruct_Value_22)) 
     (voidP_alloc_table : ref (alloc_table voidP)) 
      (__anonstruct_Key_21_tag_table : ref (tag_table __anonstruct_Key_21)) 
       (__anonstruct_Value_22_tag_table : ref (tag_table
        __anonstruct_Value_22)) 
        (voidP_tag_table : ref (tag_table voidP)) 
         (__anonstruct_Item_23_key_2 : (memory voidP (pointer
          __anonstruct_Key_21))) 
          (__anonstruct_Item_23_value_2 : (memory voidP (pointer
           __anonstruct_Value_22))) : (pointer voidP)
           requires { ((>=) n (0)) } writes {
           __anonstruct_Key_21_alloc_table, __anonstruct_Key_21_tag_table,
           __anonstruct_Value_22_alloc_table,
           __anonstruct_Value_22_tag_table, voidP_alloc_table,
           voidP_tag_table }
           ensures {
             ((strict_valid_struct___anonstruct_Item_23 result (0)
              (Int.(-) n (1)) !__anonstruct_Key_21_alloc_table
              !__anonstruct_Value_22_alloc_table !voidP_alloc_table
              __anonstruct_Item_23_key_2 __anonstruct_Item_23_value_2)
             /\
             ((frame_alloc_struct___anonstruct_Item_23 result n (old
              !__anonstruct_Key_21_alloc_table)
              !__anonstruct_Key_21_alloc_table (old
              !__anonstruct_Value_22_alloc_table)
              !__anonstruct_Value_22_alloc_table (old !voidP_alloc_table)
              !voidP_alloc_table __anonstruct_Item_23_key_2
              __anonstruct_Item_23_value_2)
             /\
             ((frame_tag_struct___anonstruct_Item_23 result (old
              !__anonstruct_Key_21_tag_table) !__anonstruct_Key_21_tag_table
              (old !__anonstruct_Value_22_tag_table)
              !__anonstruct_Value_22_tag_table (old !voidP_tag_table)
              !voidP_tag_table __anonstruct_Item_23_key_2
              __anonstruct_Item_23_value_2)
             /\
             ((fresh_alloc_struct___anonstruct_Item_23 result (Int.(-) n (1))
              (old !__anonstruct_Key_21_alloc_table) (old
              !__anonstruct_Value_22_alloc_table) (old !voidP_alloc_table)
              __anonstruct_Item_23_key_2 __anonstruct_Item_23_value_2)
             /\
             ((fresh_tag_struct___anonstruct_Item_23 result (Int.(-) n (1))
              (old !__anonstruct_Key_21_tag_table) (old
              !__anonstruct_Value_22_tag_table) (old !voidP_tag_table)
              __anonstruct_Item_23_key_2 __anonstruct_Item_23_value_2)
             /\
             ((typeof_struct___anonstruct_Item_23 result (0) n
              !__anonstruct_Key_21_tag_table !__anonstruct_Value_22_tag_table
              !voidP_tag_table __anonstruct_Item_23_key_2
              __anonstruct_Item_23_value_2)
             /\
             (container_of_struct___anonstruct_Item_23 result (0) n
             !__anonstruct_Key_21_tag_table !__anonstruct_Value_22_tag_table
             !voidP_tag_table __anonstruct_Item_23_key_2
             __anonstruct_Item_23_value_2))))))) }
  
end

module Function_finalizeMap_safety
#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 27 5 26#
"expl:finalizeMap, safety"

  use import core.Voidp 
  
  use import core.Upd_safe 
  
  use import Struct___anonstruct_Item_23_unsafe 
  
  use import Struct___anonstruct_Item_23 
  
  use import Root___anonstruct_Value_22 
  
  use import Root___anonstruct_Map_24 
  
  use import Root___anonstruct_Key_21 
  
  use import core.Return 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_valid_map 
  
  use enum.Int32 
  
  use import core.Alloc_table 
  
  use import core.Acc_safe 
  
  use why3.Bool.Bool 
  
  let finalizeMap
  #"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 27 5 26#
  "expl:Function finalizeMap, safety" =
  fun
   (map_0 : (pointer __anonstruct_Map_24))
   (__anonstruct_Key_21_items_68_alloc_table : ref (alloc_table
   __anonstruct_Key_21)) (__anonstruct_Value_22_items_68_alloc_table : ref
   (alloc_table __anonstruct_Value_22)) (voidP_items_68_alloc_table : ref
   (alloc_table voidP)) (__anonstruct_Map_24_items_map_0_33 : ref (memory
   __anonstruct_Map_24 (pointer voidP)))
   (__anonstruct_Map_24_map_0_33_alloc_table : (alloc_table
   __anonstruct_Map_24)) (__anonstruct_Key_21_a_items_68 : (memory
   __anonstruct_Key_21 Int32.t)) (__anonstruct_Key_21_b_items_68 : (memory
   __anonstruct_Key_21 Int32.t)) (__anonstruct_Item_23_key_2_items_68 :
   (memory voidP (pointer __anonstruct_Key_21)))
   (__anonstruct_Item_23_value_2_items_68 : (memory voidP (pointer
   __anonstruct_Value_22))) (__anonstruct_Item_23_existent_items_68 : (memory
   voidP Int32.t)) (__anonstruct_Map_24_capacity_map_0_33 : (memory
   __anonstruct_Map_24 Int32.t)) (__anonstruct_Map_24_count_map_0_33 :
   (memory __anonstruct_Map_24 Int32.t)) 
   requires {
   (#"map_c.jc" 308 12 102#
   ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 41 13 30#
    (is_valid_map map_0 !voidP_items_68_alloc_table
    !__anonstruct_Value_22_items_68_alloc_table
    __anonstruct_Map_24_map_0_33_alloc_table
    !__anonstruct_Key_21_items_68_alloc_table
    __anonstruct_Map_24_count_map_0_33 __anonstruct_Map_24_capacity_map_0_33
    !__anonstruct_Map_24_items_map_0_33
    __anonstruct_Item_23_existent_items_68
    __anonstruct_Item_23_value_2_items_68 __anonstruct_Item_23_key_2_items_68
    __anonstruct_Key_21_b_items_68 __anonstruct_Key_21_a_items_68))
   /\
   (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 42 13 34#
   (#"map_c.jc" 308 12 102#
   ((#"map_c.jc" 308 12 102#
    (strict_left_valid_struct___anonstruct_Item_23
    (select !__anonstruct_Map_24_items_map_0_33 map_0) (0)
    !__anonstruct_Key_21_items_68_alloc_table
    !__anonstruct_Value_22_items_68_alloc_table !voidP_items_68_alloc_table
    __anonstruct_Item_23_key_2_items_68
    __anonstruct_Item_23_value_2_items_68))
   /\
   (#"map_c.jc" 308 12 102#
   (right_valid_struct___anonstruct_Item_23
   (select !__anonstruct_Map_24_items_map_0_33 map_0) (Int.(-_) 1)
   !__anonstruct_Key_21_items_68_alloc_table
   !__anonstruct_Value_22_items_68_alloc_table !voidP_items_68_alloc_table
   __anonstruct_Item_23_key_2_items_68 __anonstruct_Item_23_value_2_items_68)))))))
   } ensures { ("expl:Postcondition" true) }  ->
   'Init:
   try
    begin
    (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 28 4 20#
    (free_struct___anonstruct_Item_23 
     (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 28 9 19#
     "expl:Pointer dereference"
     (acc  __anonstruct_Map_24_map_0_33_alloc_table
      !__anonstruct_Map_24_items_map_0_33 map_0 ))
     __anonstruct_Key_21_items_68_alloc_table
     __anonstruct_Value_22_items_68_alloc_table voidP_items_68_alloc_table
     __anonstruct_Item_23_key_2_items_68
     __anonstruct_Item_23_value_2_items_68 ));
     begin
     (let _jessie_70 =
     (let _jessie_69 = (null  ) in
     begin
     (assert {
     (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 29 4 62#
     "expl:Pointer index bounds" true) }); _jessie_69 end) in
     (let _jessie_71 = map_0 in
     (let _jessie_72 = (0) in
     (let _jessie_73 = _jessie_71 in
     (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 29 4 62#
     "expl:Pointer dereference"
     (upd  __anonstruct_Map_24_map_0_33_alloc_table
      __anonstruct_Map_24_items_map_0_33 _jessie_71 _jessie_70 ))))));
      (raise Return) end; (raise Return) end with Return -> () end
  
end

module Struct___anonstruct_Item_23_safe

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Item_23 
  
  use import Root___anonstruct_Value_22 
  
  use import Root___anonstruct_Key_21 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val safe_free_struct___anonstruct_Item_23
  (p : (pointer voidP)) 
   (__anonstruct_Key_21_alloc_table : ref (alloc_table __anonstruct_Key_21)) 
    (__anonstruct_Value_22_alloc_table : ref (alloc_table
     __anonstruct_Value_22)) 
     (voidP_alloc_table : ref (alloc_table voidP)) 
      (__anonstruct_Item_23_key_2 : (memory voidP (pointer
       __anonstruct_Key_21))) 
       (__anonstruct_Item_23_value_2 : (memory voidP (pointer
        __anonstruct_Value_22))) : unit
        requires { true } writes { __anonstruct_Key_21_alloc_table,
        __anonstruct_Value_22_alloc_table, voidP_alloc_table }
        ensures {
          ((((=) p null) /\
           (((=) !__anonstruct_Key_21_alloc_table (old
            !__anonstruct_Key_21_alloc_table))
           /\
           (((=) !__anonstruct_Value_22_alloc_table (old
            !__anonstruct_Value_22_alloc_table))
           /\ ((=) !voidP_alloc_table (old !voidP_alloc_table)))))
          \/
          ((frame_free_struct___anonstruct_Item_23 p (old
           !__anonstruct_Key_21_alloc_table) !__anonstruct_Key_21_alloc_table
           (old !__anonstruct_Value_22_alloc_table)
           !__anonstruct_Value_22_alloc_table (old !voidP_alloc_table)
           !voidP_alloc_table __anonstruct_Item_23_key_2
           __anonstruct_Item_23_value_2)
          /\
          (fresh_alloc_struct___anonstruct_Item_23 p
          (offset_max (old !voidP_alloc_table) p)
          !__anonstruct_Key_21_alloc_table !__anonstruct_Value_22_alloc_table
          !voidP_alloc_table __anonstruct_Item_23_key_2
          __anonstruct_Item_23_value_2))) }
  
  val allocate_struct___anonstruct_Item_23
  (n : int) 
   (__anonstruct_Key_21_alloc_table : ref (alloc_table __anonstruct_Key_21)) 
    (__anonstruct_Value_22_alloc_table : ref (alloc_table
     __anonstruct_Value_22)) 
     (voidP_alloc_table : ref (alloc_table voidP)) 
      (__anonstruct_Key_21_tag_table : ref (tag_table __anonstruct_Key_21)) 
       (__anonstruct_Value_22_tag_table : ref (tag_table
        __anonstruct_Value_22)) 
        (voidP_tag_table : ref (tag_table voidP)) 
         (__anonstruct_Item_23_key_2 : (memory voidP (pointer
          __anonstruct_Key_21))) 
          (__anonstruct_Item_23_value_2 : (memory voidP (pointer
           __anonstruct_Value_22))) : (pointer voidP)
           requires { true } writes { __anonstruct_Key_21_alloc_table,
           __anonstruct_Key_21_tag_table, __anonstruct_Value_22_alloc_table,
           __anonstruct_Value_22_tag_table, voidP_alloc_table,
           voidP_tag_table }
           ensures {
             ((strict_valid_struct___anonstruct_Item_23 result (0)
              (Int.(-) n (1)) !__anonstruct_Key_21_alloc_table
              !__anonstruct_Value_22_alloc_table !voidP_alloc_table
              __anonstruct_Item_23_key_2 __anonstruct_Item_23_value_2)
             /\
             ((frame_alloc_struct___anonstruct_Item_23 result n (old
              !__anonstruct_Key_21_alloc_table)
              !__anonstruct_Key_21_alloc_table (old
              !__anonstruct_Value_22_alloc_table)
              !__anonstruct_Value_22_alloc_table (old !voidP_alloc_table)
              !voidP_alloc_table __anonstruct_Item_23_key_2
              __anonstruct_Item_23_value_2)
             /\
             ((frame_tag_struct___anonstruct_Item_23 result (old
              !__anonstruct_Key_21_tag_table) !__anonstruct_Key_21_tag_table
              (old !__anonstruct_Value_22_tag_table)
              !__anonstruct_Value_22_tag_table (old !voidP_tag_table)
              !voidP_tag_table __anonstruct_Item_23_key_2
              __anonstruct_Item_23_value_2)
             /\
             ((fresh_alloc_struct___anonstruct_Item_23 result (Int.(-) n (1))
              (old !__anonstruct_Key_21_alloc_table) (old
              !__anonstruct_Value_22_alloc_table) (old !voidP_alloc_table)
              __anonstruct_Item_23_key_2 __anonstruct_Item_23_value_2)
             /\
             ((fresh_tag_struct___anonstruct_Item_23 result (Int.(-) n (1))
              (old !__anonstruct_Key_21_tag_table) (old
              !__anonstruct_Value_22_tag_table) (old !voidP_tag_table)
              __anonstruct_Item_23_key_2 __anonstruct_Item_23_value_2)
             /\
             ((typeof_struct___anonstruct_Item_23 result (0) n
              !__anonstruct_Key_21_tag_table !__anonstruct_Value_22_tag_table
              !voidP_tag_table __anonstruct_Item_23_key_2
              __anonstruct_Item_23_value_2)
             /\
             (container_of_struct___anonstruct_Item_23 result (0) n
             !__anonstruct_Key_21_tag_table !__anonstruct_Value_22_tag_table
             !voidP_tag_table __anonstruct_Item_23_key_2
             __anonstruct_Item_23_value_2))))))) }
  
  val allocate_singleton_struct___anonstruct_Item_23
  (__anonstruct_Key_21_alloc_table : ref (alloc_table __anonstruct_Key_21)) 
   (__anonstruct_Value_22_alloc_table : ref (alloc_table
    __anonstruct_Value_22)) 
    (voidP_alloc_table : ref (alloc_table voidP)) 
     (__anonstruct_Key_21_tag_table : ref (tag_table __anonstruct_Key_21)) 
      (__anonstruct_Value_22_tag_table : ref (tag_table
       __anonstruct_Value_22)) 
       (voidP_tag_table : ref (tag_table voidP)) 
        (__anonstruct_Item_23_key_2 : (memory voidP (pointer
         __anonstruct_Key_21))) 
         (__anonstruct_Item_23_value_2 : (memory voidP (pointer
          __anonstruct_Value_22))) : (pointer voidP)
          requires { true } writes { __anonstruct_Key_21_alloc_table,
          __anonstruct_Key_21_tag_table, __anonstruct_Value_22_alloc_table,
          __anonstruct_Value_22_tag_table, voidP_alloc_table, voidP_tag_table
          }
          ensures {
            ((strict_valid_struct___anonstruct_Item_23 result (0) (0)
             !__anonstruct_Key_21_alloc_table
             !__anonstruct_Value_22_alloc_table !voidP_alloc_table
             __anonstruct_Item_23_key_2 __anonstruct_Item_23_value_2)
            /\
            ((frame_alloc_struct___anonstruct_Item_23 result (1) (old
             !__anonstruct_Key_21_alloc_table)
             !__anonstruct_Key_21_alloc_table (old
             !__anonstruct_Value_22_alloc_table)
             !__anonstruct_Value_22_alloc_table (old !voidP_alloc_table)
             !voidP_alloc_table __anonstruct_Item_23_key_2
             __anonstruct_Item_23_value_2)
            /\
            ((frame_tag_struct___anonstruct_Item_23 result (old
             !__anonstruct_Key_21_tag_table) !__anonstruct_Key_21_tag_table
             (old !__anonstruct_Value_22_tag_table)
             !__anonstruct_Value_22_tag_table (old !voidP_tag_table)
             !voidP_tag_table __anonstruct_Item_23_key_2
             __anonstruct_Item_23_value_2)
            /\
            ((fresh_alloc_struct___anonstruct_Item_23 result (0) (old
             !__anonstruct_Key_21_alloc_table) (old
             !__anonstruct_Value_22_alloc_table) (old !voidP_alloc_table)
             __anonstruct_Item_23_key_2 __anonstruct_Item_23_value_2)
            /\
            ((fresh_tag_struct___anonstruct_Item_23 result (0) (old
             !__anonstruct_Key_21_tag_table) (old
             !__anonstruct_Value_22_tag_table) (old !voidP_tag_table)
             __anonstruct_Item_23_key_2 __anonstruct_Item_23_value_2)
            /\
            ((typeof_singleton_struct___anonstruct_Item_23 result
             !__anonstruct_Key_21_tag_table !__anonstruct_Value_22_tag_table
             !voidP_tag_table __anonstruct_Item_23_key_2
             __anonstruct_Item_23_value_2)
            /\
            (container_of_singleton_struct___anonstruct_Item_23 result
            !__anonstruct_Key_21_tag_table !__anonstruct_Value_22_tag_table
            !voidP_tag_table __anonstruct_Item_23_key_2
            __anonstruct_Item_23_value_2))))))) }
  
end

module Function_finalizeMap_behaviors
#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 27 5 26#
"expl:finalizeMap, behaviors"

  use import core.Voidp 
  
  use import core.Upd_unsafe 
  
  use import Struct___anonstruct_Item_23_safe 
  
  use import Struct___anonstruct_Item_23 
  
  use import Root___anonstruct_Value_22 
  
  use import Root___anonstruct_Map_24 
  
  use import Root___anonstruct_Key_21 
  
  use import core.Return 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_valid_map 
  
  use enum.Int32 
  
  use import core.Alloc_table 
  
  use import core.Acc_unsafe 
  
  use why3.Bool.Bool 
  
  let finalizeMap_ensures_default
  #"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 27 5 26#
  "expl:Function finalizeMap, default behavior" =
  fun
   (map_0 : (pointer __anonstruct_Map_24))
   (__anonstruct_Key_21_items_68_alloc_table : ref (alloc_table
   __anonstruct_Key_21)) (__anonstruct_Value_22_items_68_alloc_table : ref
   (alloc_table __anonstruct_Value_22)) (voidP_items_68_alloc_table : ref
   (alloc_table voidP)) (__anonstruct_Map_24_items_map_0_33 : ref (memory
   __anonstruct_Map_24 (pointer voidP)))
   (__anonstruct_Map_24_map_0_33_alloc_table : (alloc_table
   __anonstruct_Map_24)) (__anonstruct_Key_21_a_items_68 : (memory
   __anonstruct_Key_21 Int32.t)) (__anonstruct_Key_21_b_items_68 : (memory
   __anonstruct_Key_21 Int32.t)) (__anonstruct_Item_23_key_2_items_68 :
   (memory voidP (pointer __anonstruct_Key_21)))
   (__anonstruct_Item_23_value_2_items_68 : (memory voidP (pointer
   __anonstruct_Value_22))) (__anonstruct_Item_23_existent_items_68 : (memory
   voidP Int32.t)) (__anonstruct_Map_24_capacity_map_0_33 : (memory
   __anonstruct_Map_24 Int32.t)) (__anonstruct_Map_24_count_map_0_33 :
   (memory __anonstruct_Map_24 Int32.t)) 
   requires {
   (#"map_c.jc" 308 12 102#
   ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 41 13 30#
    (is_valid_map map_0 !voidP_items_68_alloc_table
    !__anonstruct_Value_22_items_68_alloc_table
    __anonstruct_Map_24_map_0_33_alloc_table
    !__anonstruct_Key_21_items_68_alloc_table
    __anonstruct_Map_24_count_map_0_33 __anonstruct_Map_24_capacity_map_0_33
    !__anonstruct_Map_24_items_map_0_33
    __anonstruct_Item_23_existent_items_68
    __anonstruct_Item_23_value_2_items_68 __anonstruct_Item_23_key_2_items_68
    __anonstruct_Key_21_b_items_68 __anonstruct_Key_21_a_items_68))
   /\
   (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 42 13 34#
   (#"map_c.jc" 308 12 102#
   ((#"map_c.jc" 308 12 102#
    (strict_left_valid_struct___anonstruct_Item_23
    (select !__anonstruct_Map_24_items_map_0_33 map_0) (0)
    !__anonstruct_Key_21_items_68_alloc_table
    !__anonstruct_Value_22_items_68_alloc_table !voidP_items_68_alloc_table
    __anonstruct_Item_23_key_2_items_68
    __anonstruct_Item_23_value_2_items_68))
   /\
   (#"map_c.jc" 308 12 102#
   (right_valid_struct___anonstruct_Item_23
   (select !__anonstruct_Map_24_items_map_0_33 map_0) (Int.(-_) 1)
   !__anonstruct_Key_21_items_68_alloc_table
   !__anonstruct_Value_22_items_68_alloc_table !voidP_items_68_alloc_table
   __anonstruct_Item_23_key_2_items_68 __anonstruct_Item_23_value_2_items_68)))))))
   }
   ensures {
     ("expl:Postcondition"
     (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 43 12 40#
     "expl:Ensures clause"
     (fresh_alloc_struct___anonstruct_Item_23
     (select (old !__anonstruct_Map_24_items_map_0_33) map_0) (0)
     !__anonstruct_Key_21_items_68_alloc_table
     !__anonstruct_Value_22_items_68_alloc_table !voidP_items_68_alloc_table
     __anonstruct_Item_23_key_2_items_68
     __anonstruct_Item_23_value_2_items_68))) }  ->
   'Init:
   try
    begin
    (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 28 4 20#
    (safe_free_struct___anonstruct_Item_23 
     (acc  !__anonstruct_Map_24_items_map_0_33 map_0 )
     __anonstruct_Key_21_items_68_alloc_table
     __anonstruct_Value_22_items_68_alloc_table voidP_items_68_alloc_table
     __anonstruct_Item_23_key_2_items_68
     __anonstruct_Item_23_value_2_items_68 ));
     begin
     (let _jessie_65 = (null  ) in
     (let _jessie_66 = map_0 in
     (let _jessie_67 = (0) in
     (let _jessie_68 = _jessie_66 in
     (upd  __anonstruct_Map_24_items_map_0_33 _jessie_68 _jessie_65 )))));
      (raise Return) end; (raise Return) end with Return -> () end
  
end

module Exceptions

  use why3.Bool.Bool 
  
  exception Goto_return_label_0_exc unit
  
  exception Goto_while_0_break_exc unit
  
  exception Goto_while_0_break_0_exc unit
  
  exception Goto_while_0_break_0_0_exc unit
  
  exception Loop_continue_exc unit
  
  exception Loop_exit_exc unit
  
  exception Return_label_exc unit
  
end

module Function_removeElement_safety
#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 57 4 51#
"expl:removeElement, safety"

  use import core.Voidp 
  
  use import core.Upd_safe 
  
  use import core.Upd_offset_safe 
  
  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Key_21_unsafe 
  
  use import Struct___anonstruct_Key_21_safe 
  
  use import core.Shift_safe 
  
  use Safe_int32 
  
  use import Root___anonstruct_Value_22 
  
  use import Root___anonstruct_Map_24 
  
  use import Root___anonstruct_Key_21 
  
  use import core.Return 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_valid_map 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import Exceptions 
  
  use import core.Eq_pointer_safe 
  
  use import core.Any_tag_table 
  
  use import core.Any_pointer 
  
  use import core.Any_memory 
  
  use import core.Any_alloc_table 
  
  use import core.Alloc_table 
  
  use import core.Acc_safe 
  
  use import core.Acc_offset_safe 
  
  use why3.Bool.Bool 
  
  let removeElement
  #"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 57 4 51#
  "expl:Function removeElement, safety" =
  fun
   (map_3_0 : (pointer __anonstruct_Map_24)) (key_1 : (pointer
   __anonstruct_Key_21)) (value_1 : (pointer __anonstruct_Value_22))
   (__anonstruct_Key_21_a_items_70 : ref (memory __anonstruct_Key_21
   Int32.t)) (__anonstruct_Key_21_b_items_70 : ref (memory
   __anonstruct_Key_21 Int32.t)) (__anonstruct_Value_22_c_value_1_36 : ref
   (memory __anonstruct_Value_22 Int32.t)) (__anonstruct_Value_22_c_items_70
   : ref (memory __anonstruct_Value_22 Int32.t))
   (__anonstruct_Value_22_d_value_1_36 : ref (memory __anonstruct_Value_22
   Int32.t)) (__anonstruct_Value_22_d_items_70 : ref (memory
   __anonstruct_Value_22 Int32.t)) (__anonstruct_Item_23_existent_items_70 :
   ref (memory voidP Int32.t)) (__anonstruct_Map_24_items_map_3_34 : ref
   (memory __anonstruct_Map_24 (pointer voidP)))
   (__anonstruct_Map_24_count_map_3_34 : ref (memory __anonstruct_Map_24
   Int32.t)) (__anonstruct_Key_21_key_1_35_alloc_table : (alloc_table
   __anonstruct_Key_21)) (__anonstruct_Key_21_items_70_alloc_table :
   (alloc_table __anonstruct_Key_21))
   (__anonstruct_Map_24_map_3_34_alloc_table : (alloc_table
   __anonstruct_Map_24)) (__anonstruct_Value_22_value_1_36_alloc_table :
   (alloc_table __anonstruct_Value_22))
   (__anonstruct_Value_22_items_70_alloc_table : (alloc_table
   __anonstruct_Value_22)) (voidP_items_70_alloc_table : (alloc_table voidP))
   (voidP_items_70_tag_table : (tag_table voidP))
   (__anonstruct_Key_21_a_key_1_35 : (memory __anonstruct_Key_21 Int32.t))
   (__anonstruct_Key_21_b_key_1_35 : (memory __anonstruct_Key_21 Int32.t))
   (__anonstruct_Item_23_key_2_items_70 : (memory voidP (pointer
   __anonstruct_Key_21))) (__anonstruct_Item_23_value_2_items_70 : (memory
   voidP (pointer __anonstruct_Value_22)))
   (__anonstruct_Map_24_capacity_map_3_34 : (memory __anonstruct_Map_24
   Int32.t)) 
   requires {
   (#"map_c.jc" 323 12 763#
   ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 57 13 25#
    (not ((=) map_3_0 null)))
   /\
   (#"map_c.jc" 323 12 763#
   ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 58 13 25#
    (not ((=) key_1 null)))
   /\
   (#"map_c.jc" 323 12 763#
   ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 59 13 24#
    (#"map_c.jc" 323 12 763#
    ((#"map_c.jc" 323 12 763#
     ((<=) (offset_min __anonstruct_Key_21_key_1_35_alloc_table key_1) (0)))
    /\
    (#"map_c.jc" 323 12 763#
    ((#"map_c.jc" 323 12 763#
     ((>=) (offset_max __anonstruct_Key_21_key_1_35_alloc_table key_1) (0)))
    /\ (#"map_c.jc" 323 12 763# ((=) true true)))))))
   /\
   (#"map_c.jc" 323 12 763#
   ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 60 13 26#
    (#"map_c.jc" 323 12 763#
    ((#"map_c.jc" 323 12 763#
     ((<=) (offset_min __anonstruct_Value_22_value_1_36_alloc_table value_1)
     (0)))
    /\
    (#"map_c.jc" 323 12 763#
    ((#"map_c.jc" 323 12 763#
     ((>=) (offset_max __anonstruct_Value_22_value_1_36_alloc_table value_1)
     (0)))
    /\ (#"map_c.jc" 323 12 763# ((=) true true)))))))
   /\
   (#"map_c.jc" 323 12 763#
   ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 61 13 30#
    (is_valid_map map_3_0 voidP_items_70_alloc_table
    __anonstruct_Value_22_items_70_alloc_table
    __anonstruct_Map_24_map_3_34_alloc_table
    __anonstruct_Key_21_items_70_alloc_table
    !__anonstruct_Map_24_count_map_3_34 __anonstruct_Map_24_capacity_map_3_34
    !__anonstruct_Map_24_items_map_3_34
    !__anonstruct_Item_23_existent_items_70
    __anonstruct_Item_23_value_2_items_70 __anonstruct_Item_23_key_2_items_70
    !__anonstruct_Key_21_b_items_70 !__anonstruct_Key_21_a_items_70))
   /\
   (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 62 13 30#
   (Int32.(>) (select __anonstruct_Map_24_capacity_map_3_34 map_3_0)
   (#"map_c.jc" 335 49 61# "expl:Integer cast" (Int32.of_int (0)))))))))))))))
   } ensures { ("expl:Postcondition" true) }  ->
   'Init:
   (let __anonstruct_Key_21_b_tmp_key_77 = ref
   (any_memory  () : (memory __anonstruct_Key_21 Int32.t)) in
   (let __anonstruct_Key_21_a_tmp_key_77 = ref
   (any_memory  () : (memory __anonstruct_Key_21 Int32.t)) in
   (let __anonstruct_Key_21_tmp_key_77_tag_table = ref
   (any_tag_table  () : (tag_table __anonstruct_Key_21)) in
   (let __anonstruct_Key_21_tmp_key_77_alloc_table = ref
   (any_alloc_table  () : (alloc_table __anonstruct_Key_21)) in
   (let __anonstruct_Key_21_b_key_1_72 =
   (any_memory  () : (memory __anonstruct_Key_21 Int32.t)) in
   (let __anonstruct_Key_21_a_key_1_72 =
   (any_memory  () : (memory __anonstruct_Key_21 Int32.t)) in
   (let return = ref (Safe_int32.any_  () ) in
   try
    begin
    (let foundIndex = ref (Safe_int32.any_  () ) in
    (let i_15 = ref (Safe_int32.any_  () ) in
    (let tmp_key = ref (any_pointer  () : (pointer __anonstruct_Key_21)) in
    (let insertIndex = ref (Safe_int32.any_  () ) in
    (let i_0_0 = ref (Safe_int32.any_  () ) in
    (let __retres = ref (Safe_int32.any_  () ) in
    try
     begin
     (tmp_key :=
      (let _jessie_240 =
      (allocate_singleton_struct___anonstruct_Key_21 
       __anonstruct_Key_21_tmp_key_77_alloc_table
       __anonstruct_Key_21_tmp_key_77_tag_table ) in
      begin
      (assert {
      (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 93 12 19#
      "expl:Pointer index bounds"
      ((>=)
      (offset_max !__anonstruct_Key_21_tmp_key_77_alloc_table _jessie_240)
      (0))) }); _jessie_240 end));
      begin
      (foundIndex :=
       (let _jessie_159 =
       (#"map_c.jc" 490 29 42# "expl:Integer cast"
       (Safe_int32.of_int  (Int.(-_)  (1) ) )) in
       begin
       (assert {
       (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 58 8 18#
       "expl:Pointer index bounds" true) }); _jessie_159 end));
       (if
       (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 60 8 23#
       (Safe_int32.(>=) 
        (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 60 8 18#
        "expl:Pointer dereference"
        (acc  __anonstruct_Map_24_map_3_34_alloc_table
         !__anonstruct_Map_24_count_map_3_34 map_3_0 ))
        (#"map_c.jc" 491 47 59# "expl:Integer cast" (Safe_int32.of_int (1)))
        ))
       then
        begin
        try
         begin
         (i_15 :=
          (let _jessie_183 =
          (#"map_c.jc" 493 26 38# "expl:Integer cast"
          (Safe_int32.of_int (0))) in
          begin
          (assert {
          (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 73 17 18#
          "expl:Pointer index bounds" true) }); _jessie_183 end));
          'LoopEntry:
          begin
          'LoopEntry:
          'Loop_3:
          loop
          invariant { (#"map_c.jc" 495 12 8498# true) }
            variant {
              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 71 25 42#
              (Int.(-)
              (Int32.to_int
              (select __anonstruct_Map_24_capacity_map_3_34 map_3_0))
              (Int32.to_int !i_15))) }
           begin
           any unit
           requires { true } reads { __anonstruct_Map_24_count_map_3_34,
           __anonstruct_Map_24_items_map_3_34, map_3_0 }
           ensures {
             ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 66 27 59#
              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 66 27 59#
              ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 66 27 42#
               (Int32.(<=) (#"map_c.jc" 549 44 56# "expl:Integer cast"
               (Int32.of_int (0)))
               (select !__anonstruct_Map_24_count_map_3_34 map_3_0)))
              /\
              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 66 32 59#
              (Int32.(<=)
              (select !__anonstruct_Map_24_count_map_3_34 map_3_0)
              (select __anonstruct_Map_24_capacity_map_3_34 map_3_0))))))
             /\
             ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 65 27 59#
              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 65 27 59#
              ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 65 27 43#
               (Int32.(<=) (#"map_c.jc" 546 44 60# "expl:Integer cast"
               (Int32.of_int (Int.(-_) (1)))) !foundIndex))
              /\
              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 65 33 59#
              (Int32.(<) !foundIndex
              (select __anonstruct_Map_24_capacity_map_3_34 map_3_0))))))
             /\
             ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 64 27 50#
              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 64 27 50#
              ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 64 27 33#
               (Int32.(<=) (#"map_c.jc" 543 44 56# "expl:Integer cast"
               (Int32.of_int (0))) !i_15))
              /\
              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 64 32 50#
              (Int32.(<=) !i_15
              (select __anonstruct_Map_24_capacity_map_3_34 map_3_0))))))
             /\
             ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 63 27 70#
              (if
               ((<=) (0)
               (Int.(-)
               (Int32.to_int
               (select __anonstruct_Map_24_capacity_map_3_34 map_3_0)) (1)))
               then
               (((<=)
                (offset_min voidP_items_70_alloc_table
                (select !__anonstruct_Map_24_items_map_3_34 map_3_0)) (0))
               /\
               (((>=)
                (offset_max voidP_items_70_alloc_table
                (select !__anonstruct_Map_24_items_map_3_34 map_3_0))
                (Int.(-)
                (Int32.to_int
                (select __anonstruct_Map_24_capacity_map_3_34 map_3_0)) (1)))
               /\
               (forall __framac_tmp5 : int.
                ((((<=) (0) __framac_tmp5) /\
                 ((<=) __framac_tmp5
                 (Int.(-)
                 (Int32.to_int
                 (select __anonstruct_Map_24_capacity_map_3_34 map_3_0)) (1))))
                 ->
                 (((<=)
                  (offset_min __anonstruct_Key_21_items_70_alloc_table
                  (select __anonstruct_Item_23_key_2_items_70
                  (shift (select !__anonstruct_Map_24_items_map_3_34 map_3_0)
                  __framac_tmp5))) (0))
                 /\
                 (((>=)
                  (offset_max __anonstruct_Key_21_items_70_alloc_table
                  (select __anonstruct_Item_23_key_2_items_70
                  (shift (select !__anonstruct_Map_24_items_map_3_34 map_3_0)
                  __framac_tmp5))) (0))
                 /\
                 (((=) true true) /\
                 (((<=)
                  (offset_min __anonstruct_Value_22_items_70_alloc_table
                  (select __anonstruct_Item_23_value_2_items_70
                  (shift (select !__anonstruct_Map_24_items_map_3_34 map_3_0)
                  __framac_tmp5))) (0))
                 /\
                 (((>=)
                  (offset_max __anonstruct_Value_22_items_70_alloc_table
                  (select __anonstruct_Item_23_value_2_items_70
                  (shift (select !__anonstruct_Map_24_items_map_3_34 map_3_0)
                  __framac_tmp5))) (0))
                 /\ ((=) true true)))))))))) else ((=) true true)))
             /\
             (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 62 27 38#
             (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 62 27 38#
             ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 62 27 38#
              ((<=)
              (offset_min __anonstruct_Map_24_map_3_34_alloc_table map_3_0)
              (0)))
             /\
             (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 62 27 38#
             ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 62 27 38#
              ((>=)
              (offset_max __anonstruct_Map_24_map_3_34_alloc_table map_3_0)
              (0)))
             /\
             (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 62 27 38#
             ((=) true true))))))))))) } ;
            try
             begin
             'LoopCurrent:
             begin
             'LoopCurrent:
             (if
             (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 73 24 41#
             (Safe_int32.(<)  !i_15
              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 73 28 41#
              "expl:Pointer dereference"
              (acc  __anonstruct_Map_24_map_3_34_alloc_table
               __anonstruct_Map_24_capacity_map_3_34 map_3_0 )) )) then ()
             else (raise (Goto_while_0_break_exc ())));
              (if
              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 74 16 38#
              (Safe_int32.(<>) 
               (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 74 16 38#
               "expl:Pointer dereference"
               (acc_offset_typesafe  voidP_items_70_alloc_table
                !__anonstruct_Item_23_existent_items_70
                (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 74 16 26#
                "expl:Pointer dereference"
                (acc  __anonstruct_Map_24_map_3_34_alloc_table
                 !__anonstruct_Map_24_items_map_3_34 map_3_0 ))
                (Safe_int32.to_int  !i_15 ) ))
               (#"map_c.jc" 559 37 49# "expl:Integer cast"
               (Safe_int32.of_int (0))) ))
              then
               (if
               (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 74 43 72#
               (Safe_int32.(=) 
                (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 74 43 62#
                "expl:Pointer dereference"
                (acc_safe  !__anonstruct_Key_21_a_items_70
                 (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 74 43 62#
                 "expl:Pointer dereference"
                 (acc_offset_typesafe  voidP_items_70_alloc_table
                  __anonstruct_Item_23_key_2_items_70
                  (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 74 43 53#
                  "expl:Pointer dereference"
                  (acc  __anonstruct_Map_24_map_3_34_alloc_table
                   !__anonstruct_Map_24_items_map_3_34 map_3_0 ))
                  (Safe_int32.to_int  !i_15 ) )) ))
                (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 74 66 72#
                "expl:Pointer dereference"
                (acc  __anonstruct_Key_21_key_1_35_alloc_table
                 __anonstruct_Key_21_a_key_1_35 key_1 )) ))
               then
                (if
                (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 74 78 107#
                (Safe_int32.(=) 
                 (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 74 78 97#
                 "expl:Pointer dereference"
                 (acc_safe  !__anonstruct_Key_21_b_items_70
                  (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 74 78 97#
                  "expl:Pointer dereference"
                  (acc_offset_typesafe  voidP_items_70_alloc_table
                   __anonstruct_Item_23_key_2_items_70
                   (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 74 78 88#
                   "expl:Pointer dereference"
                   (acc  __anonstruct_Map_24_map_3_34_alloc_table
                    !__anonstruct_Map_24_items_map_3_34 map_3_0 ))
                   (Safe_int32.to_int  !i_15 ) )) ))
                 (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 74 101 107#
                 "expl:Pointer dereference"
                 (acc  __anonstruct_Key_21_key_1_35_alloc_table
                  __anonstruct_Key_21_b_key_1_35 key_1 )) ))
                then
                 begin
                 (if
                 (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 75 20 86#
                 (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 75 20 86#
                 (neq_pointer  __anonstruct_Value_22_value_1_36_alloc_table
                  __anonstruct_Value_22_value_1_36_alloc_table value_1
                  (null  ) )))
                 then
                  begin
                  (let _jessie_162 =
                  (let _jessie_161 =
                  (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 76 29 48#
                  "expl:Pointer dereference"
                  (acc_safe  !__anonstruct_Value_22_c_items_70
                   (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 76 29 48#
                   "expl:Pointer dereference"
                   (acc_offset_typesafe  voidP_items_70_alloc_table
                    __anonstruct_Item_23_value_2_items_70
                    (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 76 29 39#
                    "expl:Pointer dereference"
                    (acc  __anonstruct_Map_24_map_3_34_alloc_table
                     !__anonstruct_Map_24_items_map_3_34 map_3_0 ))
                    (Safe_int32.to_int  !i_15 ) )) )) in
                  begin
                  (assert {
                  (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 76 20 48#
                  "expl:Pointer index bounds" true) }); _jessie_161 end) in
                  (let _jessie_163 = value_1 in
                  (let _jessie_164 = (0) in
                  (let _jessie_165 = _jessie_163 in
                  (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 76 20 48#
                  "expl:Pointer dereference"
                  (upd  __anonstruct_Value_22_value_1_36_alloc_table
                   __anonstruct_Value_22_c_value_1_36 _jessie_163 _jessie_162
                   ))))));
                   (let _jessie_167 =
                   (let _jessie_166 =
                   (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 76 29 48#
                   "expl:Pointer dereference"
                   (acc_safe  !__anonstruct_Value_22_d_items_70
                    (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 76 29 48#
                    "expl:Pointer dereference"
                    (acc_offset_typesafe  voidP_items_70_alloc_table
                     __anonstruct_Item_23_value_2_items_70
                     (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 76 29 39#
                     "expl:Pointer dereference"
                     (acc  __anonstruct_Map_24_map_3_34_alloc_table
                      !__anonstruct_Map_24_items_map_3_34 map_3_0 ))
                     (Safe_int32.to_int  !i_15 ) )) )) in
                   begin
                   (assert {
                   (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 76 20 48#
                   "expl:Pointer index bounds" true) }); _jessie_166 end) in
                   (let _jessie_168 = value_1 in
                   (let _jessie_169 = (0) in
                   (let _jessie_170 = _jessie_168 in
                   (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 76 20 48#
                   "expl:Pointer dereference"
                   (upd  __anonstruct_Value_22_value_1_36_alloc_table
                    __anonstruct_Value_22_d_value_1_36 _jessie_168
                    _jessie_167 )))))) end else ());
                  begin
                  (let _jessie_178 =
                  (let _jessie_177 =
                  (#"map_c.jc" 595 78 90# "expl:Integer cast"
                  (Safe_int32.of_int (0))) in
                  begin
                  (assert {
                  (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 78 16 42#
                  "expl:Pointer index bounds" true) }); _jessie_177 end) in
                  (let _jessie_179 =
                  (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 78 16 26#
                  "expl:Pointer dereference"
                  (acc  __anonstruct_Map_24_map_3_34_alloc_table
                   !__anonstruct_Map_24_items_map_3_34 map_3_0 )) in
                  (let _jessie_180 = (Safe_int32.to_int  !i_15 ) in
                  (let _jessie_181 =
                  (shift_typesafe  _jessie_179 _jessie_180 ) in
                  (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 78 16 42#
                  "expl:Pointer dereference"
                  (upd_offset_typesafe  voidP_items_70_alloc_table
                   __anonstruct_Item_23_existent_items_70 _jessie_179
                   _jessie_180 _jessie_178 ))))));
                   begin
                   (let _jessie_173 =
                   (let _jessie_172 =
                   (Safe_int32.(-) 
                    (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 79 16 26#
                    "expl:Pointer dereference"
                    (acc  __anonstruct_Map_24_map_3_34_alloc_table
                     !__anonstruct_Map_24_count_map_3_34 map_3_0 ))
                    (#"map_c.jc" 601 62 74# "expl:Integer cast"
                    (Safe_int32.of_int (1))) ) in
                   begin
                   (assert {
                   (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 79 16 28#
                   "expl:Pointer index bounds" true) }); _jessie_172 end) in
                   (let _jessie_174 = map_3_0 in
                   (let _jessie_175 = (0) in
                   (let _jessie_176 = _jessie_174 in
                   (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 79 16 28#
                   "expl:Pointer dereference"
                   (upd  __anonstruct_Map_24_map_3_34_alloc_table
                    __anonstruct_Map_24_count_map_3_34 _jessie_174
                    _jessie_173 ))))));
                    begin
                    (foundIndex :=
                     (let _jessie_171 = !i_15 in
                     begin
                     (assert {
                     (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 80 16 30#
                     "expl:Pointer index bounds" true) }); _jessie_171 end));
                     (raise (Goto_while_0_break_exc ())) end end end end
                else ()) else ()) else ());
              (i_15 :=
               (let _jessie_182 =
               (Safe_int32.(+)  !i_15
                (#"map_c.jc" 607 59 71# "expl:Integer cast"
                (Safe_int32.of_int (1))) ) in
               begin
               (assert {
               (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 73 43 46#
               "expl:Pointer index bounds" true) }); _jessie_182 end)) end;
              (raise (Loop_continue_exc ())) end with Loop_continue_exc
             _jessie_5 -> () end end end; (raise (Goto_while_0_break_exc ()))
          end end with Goto_while_0_break_exc _jessie_1 ->
         'While_0_break: 'While_0_break: () end;
         (if
         (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 85 12 28#
         (Safe_int32.(=)  !foundIndex
          (#"map_c.jc" 612 38 51# "expl:Integer cast"
          (Safe_int32.of_int  (Int.(-_)  (1) ) )) ))
         then
          begin
          (__retres :=
           (let _jessie_184 =
           (#"map_c.jc" 613 34 46# "expl:Integer cast"
           (Safe_int32.of_int (0))) in
           begin
           (assert {
           (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 86 12 21#
           "expl:Pointer index bounds" true) }); _jessie_184 end));
           (raise (Return_label_exc ())) end else ()) end
       else
        begin
        (__retres :=
         (let _jessie_160 =
         (#"map_c.jc" 618 30 42# "expl:Integer cast" (Safe_int32.of_int (0)))
         in
         begin
         (assert {
         (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 89 8 17#
         "expl:Pointer index bounds" true) }); _jessie_160 end));
         (raise (Return_label_exc ())) end);
       (if
       (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 92 8 23#
       (Safe_int32.(>=) 
        (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 92 8 18#
        "expl:Pointer dereference"
        (acc  __anonstruct_Map_24_map_3_34_alloc_table
         !__anonstruct_Map_24_count_map_3_34 map_3_0 ))
        (#"map_c.jc" 622 47 59# "expl:Integer cast" (Safe_int32.of_int (1)))
        ))
       then
        begin
        (insertIndex :=
         (let _jessie_186 = !foundIndex in
         begin
         (assert {
         (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 94 12 23#
         "expl:Pointer index bounds" true) }); _jessie_186 end));
         try
          begin
          (i_0_0 :=
           (let _jessie_239 =
           (Safe_int32.(+)  !foundIndex
            (#"map_c.jc" 625 64 76# "expl:Integer cast"
            (Safe_int32.of_int (1))) ) in
           begin
           (assert {
           (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 109 17 18#
           "expl:Pointer index bounds" true) }); _jessie_239 end));
           'LoopEntry:
           begin
           'LoopEntry:
           'Loop_4:
           loop
           invariant { (#"map_c.jc" 627 12 8393# true) }
             variant {
               (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 107 25 42#
               (Int.(-)
               (Int32.to_int
               (select __anonstruct_Map_24_capacity_map_3_34 map_3_0))
               (Int32.to_int !i_0_0))) }
            begin
            any unit
            requires { true } reads { __anonstruct_Map_24_count_map_3_34,
            __anonstruct_Map_24_items_map_3_34, map_3_0 }
            ensures {
              ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 102 27 59#
               (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 102 27 59#
               ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 102 27 42#
                (Int32.(<=) (#"map_c.jc" 685 46 58# "expl:Integer cast"
                (Int32.of_int (0)))
                (select !__anonstruct_Map_24_count_map_3_34 map_3_0)))
               /\
               (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 102 32 59#
               (Int32.(<=)
               (select !__anonstruct_Map_24_count_map_3_34 map_3_0)
               (select __anonstruct_Map_24_capacity_map_3_34 map_3_0))))))
              /\
              ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 101 27 59#
               (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 101 27 59#
               ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 101 27 43#
                (Int32.(<=) (#"map_c.jc" 682 46 58# "expl:Integer cast"
                (Int32.of_int (0))) !insertIndex))
               /\
               (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 101 32 59#
               (Int32.(<) !insertIndex
               (select __anonstruct_Map_24_capacity_map_3_34 map_3_0))))))
              /\
              ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 100 27 63#
               (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 100 27 63#
               ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 100 27 46#
                ((<=) (Int.(+) (Int32.to_int !foundIndex) (1))
                (Int32.to_int !i_0_0)))
               /\
               (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 100 45 63#
               (Int32.(<=) !i_0_0
               (select __anonstruct_Map_24_capacity_map_3_34 map_3_0))))))
              /\
              ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 99 27 58#
               (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 99 27 58#
               ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 99 27 42#
                (Int32.(<=) (#"map_c.jc" 675 46 58# "expl:Integer cast"
                (Int32.of_int (0))) !foundIndex))
               /\
               (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 99 32 58#
               (Int32.(<) !foundIndex
               (select __anonstruct_Map_24_capacity_map_3_34 map_3_0))))))
              /\
              ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 98 27 70#
               (if
                ((<=) (0)
                (Int.(-)
                (Int32.to_int
                (select __anonstruct_Map_24_capacity_map_3_34 map_3_0)) (1)))
                then
                (((<=)
                 (offset_min voidP_items_70_alloc_table
                 (select !__anonstruct_Map_24_items_map_3_34 map_3_0)) (0))
                /\
                (((>=)
                 (offset_max voidP_items_70_alloc_table
                 (select !__anonstruct_Map_24_items_map_3_34 map_3_0))
                 (Int.(-)
                 (Int32.to_int
                 (select __anonstruct_Map_24_capacity_map_3_34 map_3_0)) (1)))
                /\
                (forall __framac_tmp9 : int.
                 ((((<=) (0) __framac_tmp9) /\
                  ((<=) __framac_tmp9
                  (Int.(-)
                  (Int32.to_int
                  (select __anonstruct_Map_24_capacity_map_3_34 map_3_0))
                  (1)))) ->
                  (((<=)
                   (offset_min __anonstruct_Key_21_items_70_alloc_table
                   (select __anonstruct_Item_23_key_2_items_70
                   (shift
                   (select !__anonstruct_Map_24_items_map_3_34 map_3_0)
                   __framac_tmp9))) (0))
                  /\
                  (((>=)
                   (offset_max __anonstruct_Key_21_items_70_alloc_table
                   (select __anonstruct_Item_23_key_2_items_70
                   (shift
                   (select !__anonstruct_Map_24_items_map_3_34 map_3_0)
                   __framac_tmp9))) (0))
                  /\
                  (((=) true true) /\
                  (((<=)
                   (offset_min __anonstruct_Value_22_items_70_alloc_table
                   (select __anonstruct_Item_23_value_2_items_70
                   (shift
                   (select !__anonstruct_Map_24_items_map_3_34 map_3_0)
                   __framac_tmp9))) (0))
                  /\
                  (((>=)
                   (offset_max __anonstruct_Value_22_items_70_alloc_table
                   (select __anonstruct_Item_23_value_2_items_70
                   (shift
                   (select !__anonstruct_Map_24_items_map_3_34 map_3_0)
                   __framac_tmp9))) (0))
                  /\ ((=) true true)))))))))) else ((=) true true)))
              /\
              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 97 27 38#
              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 97 27 38#
              ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 97 27 38#
               ((<=)
               (offset_min __anonstruct_Map_24_map_3_34_alloc_table map_3_0)
               (0)))
              /\
              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 97 27 38#
              ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 97 27 38#
               ((>=)
               (offset_max __anonstruct_Map_24_map_3_34_alloc_table map_3_0)
               (0)))
              /\
              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 97 27 38#
              ((=) true true)))))))))))) } ;
             try
              begin
              'LoopCurrent:
              begin
              'LoopCurrent:
              (if
              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 109 37 54#
              (Safe_int32.(<)  !i_0_0
               (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 109 41 54#
               "expl:Pointer dereference"
               (acc  __anonstruct_Map_24_map_3_34_alloc_table
                __anonstruct_Map_24_capacity_map_3_34 map_3_0 )) )) then ()
              else (raise (Goto_while_0_break_0_exc ())));
               (if
               (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 110 16 43#
               (Safe_int32.(=) 
                (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 110 16 38#
                "expl:Pointer dereference"
                (acc_offset_typesafe  voidP_items_70_alloc_table
                 !__anonstruct_Item_23_existent_items_70
                 (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 110 16 26#
                 "expl:Pointer dereference"
                 (acc  __anonstruct_Map_24_map_3_34_alloc_table
                  !__anonstruct_Map_24_items_map_3_34 map_3_0 ))
                 (Safe_int32.to_int  !i_0_0 ) ))
                (#"map_c.jc" 697 37 49# "expl:Integer cast"
                (Safe_int32.of_int (1))) ))
               then
                begin
                (let _jessie_188 =
                (let _jessie_187 =
                (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 111 26 53#
                "expl:Pointer dereference"
                (acc_safe  !__anonstruct_Key_21_a_items_70
                 (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 111 26 53#
                 "expl:Pointer dereference"
                 (acc_offset_typesafe  voidP_items_70_alloc_table
                  __anonstruct_Item_23_key_2_items_70
                  (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 111 26 36#
                  "expl:Pointer dereference"
                  (acc  __anonstruct_Map_24_map_3_34_alloc_table
                   !__anonstruct_Map_24_items_map_3_34 map_3_0 ))
                  (Safe_int32.to_int  !insertIndex ) )) )) in
                begin
                (assert {
                (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 111 16 53#
                "expl:Pointer index bounds" true) }); _jessie_187 end) in
                (let _jessie_189 = !tmp_key in
                (let _jessie_190 = (0) in
                (let _jessie_191 = _jessie_189 in
                (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 111 16 53#
                "expl:Pointer dereference"
                (upd  !__anonstruct_Key_21_tmp_key_77_alloc_table
                 __anonstruct_Key_21_a_tmp_key_77 _jessie_189 _jessie_188 ))))));
                 begin
                 (let _jessie_193 =
                 (let _jessie_192 =
                 (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 111 26 53#
                 "expl:Pointer dereference"
                 (acc_safe  !__anonstruct_Key_21_b_items_70
                  (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 111 26 53#
                  "expl:Pointer dereference"
                  (acc_offset_typesafe  voidP_items_70_alloc_table
                   __anonstruct_Item_23_key_2_items_70
                   (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 111 26 36#
                   "expl:Pointer dereference"
                   (acc  __anonstruct_Map_24_map_3_34_alloc_table
                    !__anonstruct_Map_24_items_map_3_34 map_3_0 ))
                   (Safe_int32.to_int  !insertIndex ) )) )) in
                 begin
                 (assert {
                 (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 111 16 53#
                 "expl:Pointer index bounds" true) }); _jessie_192 end) in
                 (let _jessie_194 = !tmp_key in
                 (let _jessie_195 = (0) in
                 (let _jessie_196 = _jessie_194 in
                 (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 111 16 53#
                 "expl:Pointer dereference"
                 (upd  !__anonstruct_Key_21_tmp_key_77_alloc_table
                  __anonstruct_Key_21_b_tmp_key_77 _jessie_194 _jessie_193 ))))));
                  begin
                  (let _jessie_198 =
                  (let _jessie_197 =
                  (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 112 46 63#
                  "expl:Pointer dereference"
                  (acc_safe  !__anonstruct_Key_21_a_items_70
                   (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 112 46 63#
                   "expl:Pointer dereference"
                   (acc_offset_typesafe  voidP_items_70_alloc_table
                    __anonstruct_Item_23_key_2_items_70
                    (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 112 46 56#
                    "expl:Pointer dereference"
                    (acc  __anonstruct_Map_24_map_3_34_alloc_table
                     !__anonstruct_Map_24_items_map_3_34 map_3_0 ))
                    (Safe_int32.to_int  !i_0_0 ) )) )) in
                  begin
                  (assert {
                  (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 112 16 63#
                  "expl:Pointer index bounds" true) }); _jessie_197 end) in
                  (let _jessie_199 =
                  (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 112 16 63#
                  "expl:Pointer dereference"
                  (acc_offset_typesafe  voidP_items_70_alloc_table
                   __anonstruct_Item_23_key_2_items_70
                   (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 112 16 26#
                   "expl:Pointer dereference"
                   (acc  __anonstruct_Map_24_map_3_34_alloc_table
                    !__anonstruct_Map_24_items_map_3_34 map_3_0 ))
                   (Safe_int32.to_int  !insertIndex ) )) in
                  (let _jessie_200 = (0) in
                  (let _jessie_201 = _jessie_199 in
                  (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 112 16 63#
                  "expl:Pointer dereference"
                  (upd  __anonstruct_Key_21_items_70_alloc_table
                   __anonstruct_Key_21_a_items_70 _jessie_199 _jessie_198 ))))));
                   begin
                   (let _jessie_203 =
                   (let _jessie_202 =
                   (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 112 46 63#
                   "expl:Pointer dereference"
                   (acc_safe  !__anonstruct_Key_21_b_items_70
                    (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 112 46 63#
                    "expl:Pointer dereference"
                    (acc_offset_typesafe  voidP_items_70_alloc_table
                     __anonstruct_Item_23_key_2_items_70
                     (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 112 46 56#
                     "expl:Pointer dereference"
                     (acc  __anonstruct_Map_24_map_3_34_alloc_table
                      !__anonstruct_Map_24_items_map_3_34 map_3_0 ))
                     (Safe_int32.to_int  !i_0_0 ) )) )) in
                   begin
                   (assert {
                   (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 112 16 63#
                   "expl:Pointer index bounds" true) }); _jessie_202 end) in
                   (let _jessie_204 =
                   (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 112 16 63#
                   "expl:Pointer dereference"
                   (acc_offset_typesafe  voidP_items_70_alloc_table
                    __anonstruct_Item_23_key_2_items_70
                    (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 112 16 26#
                    "expl:Pointer dereference"
                    (acc  __anonstruct_Map_24_map_3_34_alloc_table
                     !__anonstruct_Map_24_items_map_3_34 map_3_0 ))
                    (Safe_int32.to_int  !insertIndex ) )) in
                   (let _jessie_205 = (0) in
                   (let _jessie_206 = _jessie_204 in
                   (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 112 16 63#
                   "expl:Pointer dereference"
                   (upd  __anonstruct_Key_21_items_70_alloc_table
                    __anonstruct_Key_21_b_items_70 _jessie_204 _jessie_203 ))))));
                    begin
                    (let _jessie_208 =
                    (let _jessie_207 =
                    (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 113 48 67#
                    "expl:Pointer dereference"
                    (acc_safe  !__anonstruct_Value_22_c_items_70
                     (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 113 48 67#
                     "expl:Pointer dereference"
                     (acc_offset_typesafe  voidP_items_70_alloc_table
                      __anonstruct_Item_23_value_2_items_70
                      (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 113 48 58#
                      "expl:Pointer dereference"
                      (acc  __anonstruct_Map_24_map_3_34_alloc_table
                       !__anonstruct_Map_24_items_map_3_34 map_3_0 ))
                      (Safe_int32.to_int  !i_0_0 ) )) )) in
                    begin
                    (assert {
                    (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 113 16 67#
                    "expl:Pointer index bounds" true) }); _jessie_207 end) in
                    (let _jessie_209 =
                    (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 113 16 67#
                    "expl:Pointer dereference"
                    (acc_offset_typesafe  voidP_items_70_alloc_table
                     __anonstruct_Item_23_value_2_items_70
                     (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 113 16 26#
                     "expl:Pointer dereference"
                     (acc  __anonstruct_Map_24_map_3_34_alloc_table
                      !__anonstruct_Map_24_items_map_3_34 map_3_0 ))
                     (Safe_int32.to_int  !insertIndex ) )) in
                    (let _jessie_210 = (0) in
                    (let _jessie_211 = _jessie_209 in
                    (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 113 16 67#
                    "expl:Pointer dereference"
                    (upd  __anonstruct_Value_22_items_70_alloc_table
                     __anonstruct_Value_22_c_items_70 _jessie_209 _jessie_208
                     ))))));
                     begin
                     (let _jessie_213 =
                     (let _jessie_212 =
                     (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 113 48 67#
                     "expl:Pointer dereference"
                     (acc_safe  !__anonstruct_Value_22_d_items_70
                      (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 113 48 67#
                      "expl:Pointer dereference"
                      (acc_offset_typesafe  voidP_items_70_alloc_table
                       __anonstruct_Item_23_value_2_items_70
                       (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 113 48 58#
                       "expl:Pointer dereference"
                       (acc  __anonstruct_Map_24_map_3_34_alloc_table
                        !__anonstruct_Map_24_items_map_3_34 map_3_0 ))
                       (Safe_int32.to_int  !i_0_0 ) )) )) in
                     begin
                     (assert {
                     (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 113 16 67#
                     "expl:Pointer index bounds" true) }); _jessie_212 end)
                     in
                     (let _jessie_214 =
                     (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 113 16 67#
                     "expl:Pointer dereference"
                     (acc_offset_typesafe  voidP_items_70_alloc_table
                      __anonstruct_Item_23_value_2_items_70
                      (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 113 16 26#
                      "expl:Pointer dereference"
                      (acc  __anonstruct_Map_24_map_3_34_alloc_table
                       !__anonstruct_Map_24_items_map_3_34 map_3_0 ))
                      (Safe_int32.to_int  !insertIndex ) )) in
                     (let _jessie_215 = (0) in
                     (let _jessie_216 = _jessie_214 in
                     (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 113 16 67#
                     "expl:Pointer dereference"
                     (upd  __anonstruct_Value_22_items_70_alloc_table
                      __anonstruct_Value_22_d_items_70 _jessie_214
                      _jessie_213 ))))));
                      begin
                      (let _jessie_218 =
                      (let _jessie_217 =
                      (#"map_c.jc" 723 83 95# "expl:Integer cast"
                      (Safe_int32.of_int (1))) in
                      begin
                      (assert {
                      (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 114 16 52#
                      "expl:Pointer index bounds" true) }); _jessie_217 end)
                      in
                      (let _jessie_219 =
                      (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 114 16 26#
                      "expl:Pointer dereference"
                      (acc  __anonstruct_Map_24_map_3_34_alloc_table
                       !__anonstruct_Map_24_items_map_3_34 map_3_0 )) in
                      (let _jessie_220 = (Safe_int32.to_int  !insertIndex )
                      in
                      (let _jessie_221 =
                      (shift_typesafe  _jessie_219 _jessie_220 ) in
                      (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 114 16 52#
                      "expl:Pointer dereference"
                      (upd_offset_typesafe  voidP_items_70_alloc_table
                       __anonstruct_Item_23_existent_items_70 _jessie_219
                       _jessie_220 _jessie_218 ))))));
                       begin
                       (let _jessie_223 =
                       (let _jessie_222 =
                       (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 115 36 43#
                       "expl:Pointer dereference"
                       (acc_safe  !__anonstruct_Key_21_a_tmp_key_77 !tmp_key
                        )) in
                       begin
                       (assert {
                       (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 115 16 43#
                       "expl:Pointer index bounds" true) }); _jessie_222 end)
                       in
                       (let _jessie_224 =
                       (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 115 16 43#
                       "expl:Pointer dereference"
                       (acc_offset_typesafe  voidP_items_70_alloc_table
                        __anonstruct_Item_23_key_2_items_70
                        (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 115 16 26#
                        "expl:Pointer dereference"
                        (acc  __anonstruct_Map_24_map_3_34_alloc_table
                         !__anonstruct_Map_24_items_map_3_34 map_3_0 ))
                        (Safe_int32.to_int  !i_0_0 ) )) in
                       (let _jessie_225 = (0) in
                       (let _jessie_226 = _jessie_224 in
                       (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 115 16 43#
                       "expl:Pointer dereference"
                       (upd  __anonstruct_Key_21_items_70_alloc_table
                        __anonstruct_Key_21_a_items_70 _jessie_224
                        _jessie_223 ))))));
                        begin
                        (let _jessie_228 =
                        (let _jessie_227 =
                        (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 115 36 43#
                        "expl:Pointer dereference"
                        (acc_safe  !__anonstruct_Key_21_b_tmp_key_77 !tmp_key
                         )) in
                        begin
                        (assert {
                        (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 115 16 43#
                        "expl:Pointer index bounds" true) }); _jessie_227 end)
                        in
                        (let _jessie_229 =
                        (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 115 16 43#
                        "expl:Pointer dereference"
                        (acc_offset_typesafe  voidP_items_70_alloc_table
                         __anonstruct_Item_23_key_2_items_70
                         (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 115 16 26#
                         "expl:Pointer dereference"
                         (acc  __anonstruct_Map_24_map_3_34_alloc_table
                          !__anonstruct_Map_24_items_map_3_34 map_3_0 ))
                         (Safe_int32.to_int  !i_0_0 ) )) in
                        (let _jessie_230 = (0) in
                        (let _jessie_231 = _jessie_229 in
                        (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 115 16 43#
                        "expl:Pointer dereference"
                        (upd  __anonstruct_Key_21_items_70_alloc_table
                         __anonstruct_Key_21_b_items_70 _jessie_229
                         _jessie_228 ))))));
                         begin
                         (let _jessie_233 =
                         (let _jessie_232 =
                         (#"map_c.jc" 731 75 87# "expl:Integer cast"
                         (Safe_int32.of_int (0))) in
                         begin
                         (assert {
                         (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 116 16 42#
                         "expl:Pointer index bounds" true) }); _jessie_232
                         end) in
                         (let _jessie_234 =
                         (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 116 16 26#
                         "expl:Pointer dereference"
                         (acc  __anonstruct_Map_24_map_3_34_alloc_table
                          !__anonstruct_Map_24_items_map_3_34 map_3_0 )) in
                         (let _jessie_235 = (Safe_int32.to_int  !i_0_0 ) in
                         (let _jessie_236 =
                         (shift_typesafe  _jessie_234 _jessie_235 ) in
                         (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 116 16 42#
                         "expl:Pointer dereference"
                         (upd_offset_typesafe  voidP_items_70_alloc_table
                          __anonstruct_Item_23_existent_items_70 _jessie_234
                          _jessie_235 _jessie_233 ))))));
                          (insertIndex :=
                           (let _jessie_237 =
                           (Safe_int32.(+)  !insertIndex
                            (#"map_c.jc" 734 62 74# "expl:Integer cast"
                            (Safe_int32.of_int (1))) ) in
                           begin
                           (assert {
                           (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 117 16 29#
                           "expl:Pointer index bounds" true) }); _jessie_237
                           end)) end end end end end end end end end end
               else ());
               (i_0_0 :=
                (let _jessie_238 =
                (Safe_int32.(+)  !i_0_0
                 (#"map_c.jc" 737 63 75# "expl:Integer cast"
                 (Safe_int32.of_int (1))) ) in
                begin
                (assert {
                (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 109 56 59#
                "expl:Pointer index bounds" true) }); _jessie_238 end)) end;
               (raise (Loop_continue_exc ())) end with Loop_continue_exc
              _jessie_7 -> () end end end;
            (raise (Goto_while_0_break_0_exc ())) end end with
          Goto_while_0_break_0_exc _jessie_2 ->
          'While_0_break_0: 'While_0_break_0: () end;
         begin
         (__retres :=
          (let _jessie_185 =
          (#"map_c.jc" 743 34 46# "expl:Integer cast"
          (Safe_int32.of_int (1))) in
          begin
          (assert {
          (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 121 8 17#
          "expl:Pointer index bounds" true) }); _jessie_185 end));
          (raise (Return_label_exc ())) end end else ());
       begin
       (__retres :=
        (let _jessie_158 =
        (#"map_c.jc" 748 28 40# "expl:Integer cast" (Safe_int32.of_int (1)))
        in
        begin
        (assert {
        (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 124 4 13#
        "expl:Pointer index bounds" true) }); _jessie_158 end));
        (raise (Return_label_exc ())) end end end with Return_label_exc
     _jessie_3 ->
     'Return_label:
     'Return_label:
     begin
     (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 93 12 19#
     (free_struct___anonstruct_Key_21  !tmp_key
      __anonstruct_Key_21_tmp_key_77_alloc_table ));
      begin
      (return :=
       (let _jessie_241 = !__retres in
       begin
       (assert { (#"map_c.jc" 751 7 22# "expl:Pointer index bounds" true) });
        _jessie_241 end)); (raise Return) end end end)))))); absurd  end with
    Return -> !return end)))))))
  
end

theory Logic_has_key

  use import core.Voidp 
  
  use import Root___anonstruct_Map_24 
  
  use import Root___anonstruct_Key_21 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  predicate has_key (map_26 : (pointer __anonstruct_Map_24)) (key : (pointer
  __anonstruct_Key_21)) (__anonstruct_Map_24_capacity_map_26_19_at_L :
  (memory __anonstruct_Map_24 Int32.t))
  (__anonstruct_Map_24_items_map_26_19_at_L : (memory __anonstruct_Map_24
  (pointer voidP))) (__anonstruct_Item_23_existent_items_61_at_L : (memory
  voidP Int32.t)) (__anonstruct_Item_23_key_2_items_61_at_L : (memory voidP
  (pointer __anonstruct_Key_21))) (__anonstruct_Key_21_b_items_61_at_L :
  (memory __anonstruct_Key_21 Int32.t)) (__anonstruct_Key_21_b_key_20_at_L :
  (memory __anonstruct_Key_21 Int32.t)) (__anonstruct_Key_21_a_items_61_at_L
  : (memory __anonstruct_Key_21 Int32.t)) (__anonstruct_Key_21_a_key_20_at_L
  : (memory __anonstruct_Key_21 Int32.t))
  =
     (exists i_10 : int.
      (((<=) (0) i_10) /\
      (((<) i_10
       (Int32.to_int
       (select __anonstruct_Map_24_capacity_map_26_19_at_L map_26)))
      /\
      ((Int32.(=)
       (select __anonstruct_Item_23_existent_items_61_at_L
       (shift (select __anonstruct_Map_24_items_map_26_19_at_L map_26) i_10))
       (#"map_c.jc" 249 48 60# "expl:Integer cast" (Int32.of_int (1))))
      /\
      ((Int32.(=)
       (select __anonstruct_Key_21_a_items_61_at_L
       (select __anonstruct_Item_23_key_2_items_61_at_L
       (shift (select __anonstruct_Map_24_items_map_26_19_at_L map_26) i_10)))
       (select __anonstruct_Key_21_a_key_20_at_L key))
      /\
      (Int32.(=)
      (select __anonstruct_Key_21_b_items_61_at_L
      (select __anonstruct_Item_23_key_2_items_61_at_L
      (shift (select __anonstruct_Map_24_items_map_26_19_at_L map_26) i_10)))
      (select __anonstruct_Key_21_b_key_20_at_L key)))))))
  
  
end

module Function_removeElement_behaviors
#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 57 4 51#
"expl:removeElement, behaviors"

  use import core.Voidp 
  
  use import core.Upd_unsafe 
  
  use Unsafe_int32 
  
  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Key_21_safe 
  
  use import core.Shift_unsafe 
  
  use import core.Same_except 
  
  use import Root___anonstruct_Value_22 
  
  use import Root___anonstruct_Map_24 
  
  use import Root___anonstruct_Key_21 
  
  use import core.Return 
  
  use import ref.Ref 
  
  use import core.Pset_range 
  
  use import core.Pset_deref 
  
  use import core.Pset 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_valid_map 
  
  use import Logic_has_key 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import Exceptions 
  
  use import Axiomatic_ItemsCount 
  
  use import core.Assigns 
  
  use import core.Any_tag_table 
  
  use import core.Any_pointer 
  
  use import core.Any_memory 
  
  use import core.Any_alloc_table 
  
  use import core.Alloc_table 
  
  use import core.Alloc 
  
  use import core.Acc_unsafe 
  
  use why3.Bool.Bool 
  
  let removeElement_ensures_default
  #"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 57 4 51#
  "expl:Function removeElement, default behavior" =
  fun
   (map_3_0 : (pointer __anonstruct_Map_24)) (key_1 : (pointer
   __anonstruct_Key_21)) (value_1 : (pointer __anonstruct_Value_22))
   (__anonstruct_Key_21_a_items_70 : ref (memory __anonstruct_Key_21
   Int32.t)) (__anonstruct_Key_21_b_items_70 : ref (memory
   __anonstruct_Key_21 Int32.t)) (__anonstruct_Value_22_c_value_1_36 : ref
   (memory __anonstruct_Value_22 Int32.t)) (__anonstruct_Value_22_c_items_70
   : ref (memory __anonstruct_Value_22 Int32.t))
   (__anonstruct_Value_22_d_value_1_36 : ref (memory __anonstruct_Value_22
   Int32.t)) (__anonstruct_Value_22_d_items_70 : ref (memory
   __anonstruct_Value_22 Int32.t)) (__anonstruct_Item_23_existent_items_70 :
   ref (memory voidP Int32.t)) (__anonstruct_Map_24_items_map_3_34 : ref
   (memory __anonstruct_Map_24 (pointer voidP)))
   (__anonstruct_Map_24_count_map_3_34 : ref (memory __anonstruct_Map_24
   Int32.t)) (__anonstruct_Key_21_key_1_35_alloc_table : (alloc_table
   __anonstruct_Key_21)) (__anonstruct_Key_21_items_70_alloc_table :
   (alloc_table __anonstruct_Key_21))
   (__anonstruct_Map_24_map_3_34_alloc_table : (alloc_table
   __anonstruct_Map_24)) (__anonstruct_Value_22_value_1_36_alloc_table :
   (alloc_table __anonstruct_Value_22))
   (__anonstruct_Value_22_items_70_alloc_table : (alloc_table
   __anonstruct_Value_22)) (voidP_items_70_alloc_table : (alloc_table voidP))
   (voidP_items_70_tag_table : (tag_table voidP))
   (__anonstruct_Key_21_a_key_1_35 : (memory __anonstruct_Key_21 Int32.t))
   (__anonstruct_Key_21_b_key_1_35 : (memory __anonstruct_Key_21 Int32.t))
   (__anonstruct_Item_23_key_2_items_70 : (memory voidP (pointer
   __anonstruct_Key_21))) (__anonstruct_Item_23_value_2_items_70 : (memory
   voidP (pointer __anonstruct_Value_22)))
   (__anonstruct_Map_24_capacity_map_3_34 : (memory __anonstruct_Map_24
   Int32.t)) 
   requires {
   (#"map_c.jc" 323 12 763#
   ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 57 13 25#
    (not ((=) map_3_0 null)))
   /\
   (#"map_c.jc" 323 12 763#
   ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 58 13 25#
    (not ((=) key_1 null)))
   /\
   (#"map_c.jc" 323 12 763#
   ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 59 13 24#
    (#"map_c.jc" 323 12 763#
    ((#"map_c.jc" 323 12 763#
     ((<=) (offset_min __anonstruct_Key_21_key_1_35_alloc_table key_1) (0)))
    /\
    (#"map_c.jc" 323 12 763#
    ((#"map_c.jc" 323 12 763#
     ((>=) (offset_max __anonstruct_Key_21_key_1_35_alloc_table key_1) (0)))
    /\ (#"map_c.jc" 323 12 763# ((=) true true)))))))
   /\
   (#"map_c.jc" 323 12 763#
   ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 60 13 26#
    (#"map_c.jc" 323 12 763#
    ((#"map_c.jc" 323 12 763#
     ((<=) (offset_min __anonstruct_Value_22_value_1_36_alloc_table value_1)
     (0)))
    /\
    (#"map_c.jc" 323 12 763#
    ((#"map_c.jc" 323 12 763#
     ((>=) (offset_max __anonstruct_Value_22_value_1_36_alloc_table value_1)
     (0)))
    /\ (#"map_c.jc" 323 12 763# ((=) true true)))))))
   /\
   (#"map_c.jc" 323 12 763#
   ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 61 13 30#
    (is_valid_map map_3_0 voidP_items_70_alloc_table
    __anonstruct_Value_22_items_70_alloc_table
    __anonstruct_Map_24_map_3_34_alloc_table
    __anonstruct_Key_21_items_70_alloc_table
    !__anonstruct_Map_24_count_map_3_34 __anonstruct_Map_24_capacity_map_3_34
    !__anonstruct_Map_24_items_map_3_34
    !__anonstruct_Item_23_existent_items_70
    __anonstruct_Item_23_value_2_items_70 __anonstruct_Item_23_key_2_items_70
    !__anonstruct_Key_21_b_items_70 !__anonstruct_Key_21_a_items_70))
   /\
   (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 62 13 30#
   (Int32.(>) (select __anonstruct_Map_24_capacity_map_3_34 map_3_0)
   (#"map_c.jc" 335 49 61# "expl:Integer cast" (Int32.of_int (0)))))))))))))))
   }
   ensures {
     ("expl:Postcondition"
     ((((((((((#"map_c.jc" 337 10 382# "expl:Assigns clause"
              (not_assigns __anonstruct_Key_21_items_70_alloc_table
              __anonstruct_Key_21_items_70_alloc_table (old
              !__anonstruct_Key_21_a_items_70)
              !__anonstruct_Key_21_a_items_70
              (pset_deref __anonstruct_Item_23_key_2_items_70
              (pset_range
              (pset_deref (old !__anonstruct_Map_24_items_map_3_34)
              (pset_singleton map_3_0)) (0)
              (Int.(-)
              (Int32.to_int
              (select __anonstruct_Map_24_capacity_map_3_34 map_3_0)) (1))))))
             /\
             (#"map_c.jc" 337 10 382# "expl:Assigns clause"
             (not_assigns __anonstruct_Key_21_items_70_alloc_table
             __anonstruct_Key_21_items_70_alloc_table (old
             !__anonstruct_Key_21_b_items_70) !__anonstruct_Key_21_b_items_70
             (pset_deref __anonstruct_Item_23_key_2_items_70
             (pset_range
             (pset_deref (old !__anonstruct_Map_24_items_map_3_34)
             (pset_singleton map_3_0)) (0)
             (Int.(-)
             (Int32.to_int
             (select __anonstruct_Map_24_capacity_map_3_34 map_3_0)) (1)))))))
            /\
            (#"map_c.jc" 337 10 382# "expl:Assigns clause"
            (not_assigns __anonstruct_Value_22_value_1_36_alloc_table
            __anonstruct_Value_22_value_1_36_alloc_table (old
            !__anonstruct_Value_22_c_value_1_36)
            !__anonstruct_Value_22_c_value_1_36 (pset_singleton value_1))))
           /\
           (#"map_c.jc" 337 10 382# "expl:Assigns clause"
           (not_assigns __anonstruct_Value_22_items_70_alloc_table
           __anonstruct_Value_22_items_70_alloc_table (old
           !__anonstruct_Value_22_c_items_70)
           !__anonstruct_Value_22_c_items_70
           (pset_deref __anonstruct_Item_23_value_2_items_70
           (pset_range
           (pset_deref (old !__anonstruct_Map_24_items_map_3_34)
           (pset_singleton map_3_0)) (0)
           (Int.(-)
           (Int32.to_int
           (select __anonstruct_Map_24_capacity_map_3_34 map_3_0)) (1)))))))
          /\
          (#"map_c.jc" 337 10 382# "expl:Assigns clause"
          (not_assigns __anonstruct_Value_22_value_1_36_alloc_table
          __anonstruct_Value_22_value_1_36_alloc_table (old
          !__anonstruct_Value_22_d_value_1_36)
          !__anonstruct_Value_22_d_value_1_36 (pset_singleton value_1))))
         /\
         (#"map_c.jc" 337 10 382# "expl:Assigns clause"
         (not_assigns __anonstruct_Value_22_items_70_alloc_table
         __anonstruct_Value_22_items_70_alloc_table (old
         !__anonstruct_Value_22_d_items_70) !__anonstruct_Value_22_d_items_70
         (pset_deref __anonstruct_Item_23_value_2_items_70
         (pset_range
         (pset_deref (old !__anonstruct_Map_24_items_map_3_34)
         (pset_singleton map_3_0)) (0)
         (Int.(-)
         (Int32.to_int
         (select __anonstruct_Map_24_capacity_map_3_34 map_3_0)) (1)))))))
        /\
        (#"map_c.jc" 337 10 382# "expl:Assigns clause"
        (not_assigns voidP_items_70_alloc_table voidP_items_70_alloc_table
        (old !__anonstruct_Item_23_existent_items_70)
        !__anonstruct_Item_23_existent_items_70
        (pset_range
        (pset_deref (old !__anonstruct_Map_24_items_map_3_34)
        (pset_singleton map_3_0)) (0)
        (Int.(-)
        (Int32.to_int (select __anonstruct_Map_24_capacity_map_3_34 map_3_0))
        (1))))))
       /\
       (#"map_c.jc" 337 10 382# "expl:Assigns clause"
       (not_assigns __anonstruct_Map_24_map_3_34_alloc_table
       __anonstruct_Map_24_map_3_34_alloc_table (old
       !__anonstruct_Map_24_items_map_3_34)
       !__anonstruct_Map_24_items_map_3_34 pset_empty)))
      /\
      (#"map_c.jc" 337 10 382# "expl:Assigns clause"
      (not_assigns __anonstruct_Map_24_map_3_34_alloc_table
      __anonstruct_Map_24_map_3_34_alloc_table (old
      !__anonstruct_Map_24_count_map_3_34)
      !__anonstruct_Map_24_count_map_3_34 (pset_singleton map_3_0))))
     /\
     (exists __anonstruct_Key_21_b_key_1_72 : (memory __anonstruct_Key_21
      Int32.t).
      (exists __anonstruct_Key_21_a_key_1_72 : (memory __anonstruct_Key_21
       Int32.t).
       (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
       "expl:Ensures clause"
       (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
       "expl:Ensures clause"
       ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
        "expl:Ensures clause"
        (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
        "expl:Ensures clause"
        ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
         "expl:Ensures clause"
         ((<=) (offset_min __anonstruct_Key_21_key_1_35_alloc_table key_1)
         (0)))
        /\
        (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
        "expl:Ensures clause"
        ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
         "expl:Ensures clause"
         ((>=) (offset_max __anonstruct_Key_21_key_1_35_alloc_table key_1)
         (0)))
        /\
        (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
        "expl:Ensures clause" ((=) true true)))))))
       /\
       (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
       "expl:Ensures clause"
       ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 73 12 23#
        "expl:Ensures clause"
        (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
        "expl:Ensures clause"
        ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
         "expl:Ensures clause"
         ((<=) (offset_min __anonstruct_Map_24_map_3_34_alloc_table map_3_0)
         (0)))
        /\
        (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
        "expl:Ensures clause"
        ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
         "expl:Ensures clause"
         ((>=) (offset_max __anonstruct_Map_24_map_3_34_alloc_table map_3_0)
         (0)))
        /\
        (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
        "expl:Ensures clause" ((=) true true)))))))
       /\
       (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
       "expl:Ensures clause"
       ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 74 12 29#
        "expl:Ensures clause"
        (is_valid_map map_3_0 voidP_items_70_alloc_table
        __anonstruct_Value_22_items_70_alloc_table
        __anonstruct_Map_24_map_3_34_alloc_table
        __anonstruct_Key_21_items_70_alloc_table
        !__anonstruct_Map_24_count_map_3_34
        __anonstruct_Map_24_capacity_map_3_34
        !__anonstruct_Map_24_items_map_3_34
        !__anonstruct_Item_23_existent_items_70
        __anonstruct_Item_23_value_2_items_70
        __anonstruct_Item_23_key_2_items_70 !__anonstruct_Key_21_b_items_70
        !__anonstruct_Key_21_a_items_70))
       /\
       (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
       "expl:Ensures clause"
       ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 75 12 45#
        "expl:Ensures clause"
        ((((<=)
          (offset_min __anonstruct_Value_22_value_1_36_alloc_table value_1)
          (0))
         /\
         (((>=)
          (offset_max __anonstruct_Value_22_value_1_36_alloc_table value_1)
          (0))
         /\ ((=) true true)))
        \/ ((=) value_1 null)))
       /\
       (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
       "expl:Ensures clause"
       ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 76 13 49#
        "expl:Ensures clause"
        (Int32.(=) (select __anonstruct_Map_24_capacity_map_3_34 map_3_0)
        (select __anonstruct_Map_24_capacity_map_3_34 map_3_0)))
       /\
       (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
       "expl:Ensures clause"
       ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 77 12 169#
        "expl:Ensures clause"
        ((not
         (has_key map_3_0 key_1 __anonstruct_Map_24_capacity_map_3_34 (old
         !__anonstruct_Map_24_items_map_3_34) (old
         !__anonstruct_Item_23_existent_items_70)
         __anonstruct_Item_23_key_2_items_70 (old
         !__anonstruct_Key_21_b_items_70) __anonstruct_Key_21_b_key_1_35 (old
         !__anonstruct_Key_21_a_items_70) __anonstruct_Key_21_a_key_1_35)) ->
         ((Int32.(=) result (#"map_c.jc" 367 56 68# "expl:Integer cast"
          (Int32.of_int (0)))) ->
          ((Int32.(=)
           (select (old !__anonstruct_Map_24_count_map_3_34) map_3_0)
           (select !__anonstruct_Map_24_count_map_3_34 map_3_0))
          /\
          ((=)
          (count map_3_0 (0)
          (Int32.to_int
          (select __anonstruct_Map_24_capacity_map_3_34 map_3_0))
          !__anonstruct_Map_24_items_map_3_34
          !__anonstruct_Item_23_existent_items_70)
          (count map_3_0 (0)
          (Int32.to_int
          (select __anonstruct_Map_24_capacity_map_3_34 map_3_0))
          !__anonstruct_Map_24_items_map_3_34
          !__anonstruct_Item_23_existent_items_70))))))
       /\
       (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
       "expl:Ensures clause"
       ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 78 12 176#
        "expl:Ensures clause"
        ((has_key map_3_0 key_1 __anonstruct_Map_24_capacity_map_3_34 (old
         !__anonstruct_Map_24_items_map_3_34) (old
         !__anonstruct_Item_23_existent_items_70)
         __anonstruct_Item_23_key_2_items_70 (old
         !__anonstruct_Key_21_b_items_70) __anonstruct_Key_21_b_key_1_35 (old
         !__anonstruct_Key_21_a_items_70) __anonstruct_Key_21_a_key_1_35) ->
         ((Int32.(=) result (#"map_c.jc" 378 58 70# "expl:Integer cast"
          (Int32.of_int (1)))) ->
          (((=)
           (Int32.to_int
           (select (old !__anonstruct_Map_24_count_map_3_34) map_3_0))
           (Int.(+)
           (Int32.to_int
           (select !__anonstruct_Map_24_count_map_3_34 map_3_0)) (1)))
          /\
          ((=)
          (count map_3_0 (0)
          (Int32.to_int
          (select __anonstruct_Map_24_capacity_map_3_34 map_3_0))
          !__anonstruct_Map_24_items_map_3_34
          !__anonstruct_Item_23_existent_items_70)
          (Int.(+)
          (count map_3_0 (0)
          (Int32.to_int
          (select __anonstruct_Map_24_capacity_map_3_34 map_3_0))
          !__anonstruct_Map_24_items_map_3_34
          !__anonstruct_Item_23_existent_items_70) (1)))))))
       /\
       (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
       "expl:Ensures clause"
       ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 79 12 432#
        "expl:Ensures clause"
        ((has_key map_3_0 key_1 __anonstruct_Map_24_capacity_map_3_34 (old
         !__anonstruct_Map_24_items_map_3_34) (old
         !__anonstruct_Item_23_existent_items_70)
         __anonstruct_Item_23_key_2_items_70 (old
         !__anonstruct_Key_21_b_items_70) __anonstruct_Key_21_b_key_1_35 (old
         !__anonstruct_Key_21_a_items_70) __anonstruct_Key_21_a_key_1_35) ->
         ((Int32.(=) result (#"map_c.jc" 391 60 72# "expl:Integer cast"
          (Int32.of_int (1)))) ->
          (exists i_12 : int.
           (((<=) (0) i_12) /\
           (((<) i_12
            (Int32.to_int
            (select __anonstruct_Map_24_capacity_map_3_34 map_3_0)))
           /\
           ((Int32.(=)
            (select (old !__anonstruct_Key_21_a_items_70)
            (select __anonstruct_Item_23_key_2_items_70
            (shift (select (old !__anonstruct_Map_24_items_map_3_34) map_3_0)
            i_12))) (select __anonstruct_Key_21_a_key_1_35 key_1))
           /\
           ((Int32.(=)
            (select (old !__anonstruct_Key_21_b_items_70)
            (select __anonstruct_Item_23_key_2_items_70
            (shift (select (old !__anonstruct_Map_24_items_map_3_34) map_3_0)
            i_12))) (select __anonstruct_Key_21_b_key_1_35 key_1))
           /\
           ((Int32.(=)
            (select (old !__anonstruct_Item_23_existent_items_70)
            (shift (select (old !__anonstruct_Map_24_items_map_3_34) map_3_0)
            i_12)) (#"map_c.jc" 404 56 68# "expl:Integer cast" (Int32.of_int
            (1))))
           /\
           (exists j_2 : int.
            (((<=) (0) j_2) /\
            (((<) j_2
             (Int32.to_int
             (select __anonstruct_Map_24_capacity_map_3_34 map_3_0)))
            /\
            ((Int32.(=)
             (select !__anonstruct_Item_23_existent_items_70
             (shift (select !__anonstruct_Map_24_items_map_3_34 map_3_0) j_2))
             (#"map_c.jc" 411 61 73# "expl:Integer cast" (Int32.of_int (0))))
            /\
            ((Int32.(=)
             (select !__anonstruct_Key_21_a_items_70
             (select __anonstruct_Item_23_key_2_items_70
             (shift (select !__anonstruct_Map_24_items_map_3_34 map_3_0) j_2)))
             (select __anonstruct_Key_21_a_key_1_35 key_1))
            /\
            (Int32.(=)
            (select !__anonstruct_Key_21_b_items_70
            (select __anonstruct_Item_23_key_2_items_70
            (shift (select !__anonstruct_Map_24_items_map_3_34 map_3_0) j_2)))
            (select __anonstruct_Key_21_b_key_1_35 key_1))))))))))))))))
       /\
       (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
       "expl:Ensures clause"
       ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 84 12 432#
        "expl:Ensures clause"
        (forall i_13 : int.
         (((<=) (0) i_13) /\
         (((<) i_13
          (Int32.to_int
          (select __anonstruct_Map_24_capacity_map_3_34 map_3_0)))
         /\
         (((not
           (Int32.(=)
           (select (old !__anonstruct_Key_21_a_items_70)
           (select __anonstruct_Item_23_key_2_items_70
           (shift (select (old !__anonstruct_Map_24_items_map_3_34) map_3_0)
           i_13))) (select __anonstruct_Key_21_a_key_1_35 key_1)))
          \/
          (not
          (Int32.(=)
          (select (old !__anonstruct_Key_21_b_items_70)
          (select __anonstruct_Item_23_key_2_items_70
          (shift (select (old !__anonstruct_Map_24_items_map_3_34) map_3_0)
          i_13))) (select __anonstruct_Key_21_b_key_1_35 key_1))))
         /\
         ((Int32.(=)
          (select (old !__anonstruct_Item_23_existent_items_70)
          (shift (select (old !__anonstruct_Map_24_items_map_3_34) map_3_0)
          i_13)) (#"map_c.jc" 429 54 66# "expl:Integer cast" (Int32.of_int
          (1))))
         /\
         (exists j_3 : int.
          (((<=) (0) j_3) /\
          (((<) j_3
           (Int32.to_int
           (select __anonstruct_Map_24_capacity_map_3_34 map_3_0)))
          /\
          ((Int32.(=)
           (select (old !__anonstruct_Key_21_a_items_70)
           (select __anonstruct_Item_23_key_2_items_70
           (shift (select (old !__anonstruct_Map_24_items_map_3_34) map_3_0)
           i_13)))
           (select !__anonstruct_Key_21_a_items_70
           (select __anonstruct_Item_23_key_2_items_70
           (shift (select !__anonstruct_Map_24_items_map_3_34 map_3_0) j_3))))
          /\
          ((Int32.(=)
           (select (old !__anonstruct_Key_21_b_items_70)
           (select __anonstruct_Item_23_key_2_items_70
           (shift (select (old !__anonstruct_Map_24_items_map_3_34) map_3_0)
           i_13)))
           (select !__anonstruct_Key_21_b_items_70
           (select __anonstruct_Item_23_key_2_items_70
           (shift (select !__anonstruct_Map_24_items_map_3_34 map_3_0) j_3))))
          /\
          (Int32.(=)
          (select (old !__anonstruct_Item_23_existent_items_70)
          (shift (select (old !__anonstruct_Map_24_items_map_3_34) map_3_0)
          i_13))
          (select !__anonstruct_Item_23_existent_items_70
          (shift (select !__anonstruct_Map_24_items_map_3_34 map_3_0) j_3))))))))))))))
       /\
       (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
       "expl:Ensures clause"
       ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 88 12 90#
        "expl:Ensures clause"
        (forall key_1_0 : (pointer __anonstruct_Key_21).
         ((not
          (has_key map_3_0 key_1_0 __anonstruct_Map_24_capacity_map_3_34 (old
          !__anonstruct_Map_24_items_map_3_34) (old
          !__anonstruct_Item_23_existent_items_70)
          __anonstruct_Item_23_key_2_items_70 (old
          !__anonstruct_Key_21_b_items_70) __anonstruct_Key_21_b_key_1_72
          (old !__anonstruct_Key_21_a_items_70)
          __anonstruct_Key_21_a_key_1_72)) ->
          (not
          (has_key map_3_0 key_1_0 __anonstruct_Map_24_capacity_map_3_34
          !__anonstruct_Map_24_items_map_3_34
          !__anonstruct_Item_23_existent_items_70
          __anonstruct_Item_23_key_2_items_70 !__anonstruct_Key_21_b_items_70
          __anonstruct_Key_21_b_key_1_72 !__anonstruct_Key_21_a_items_70
          __anonstruct_Key_21_a_key_1_72)))))
       /\
       (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
       "expl:Ensures clause"
       ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 90 12 53#
        "expl:Ensures clause"
        ((Int32.(=) result (#"map_c.jc" 451 64 76# "expl:Integer cast"
         (Int32.of_int (0)))) -> ((=) value_1 value_1)))
       /\
       (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
       "expl:Ensures clause"
       ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 91 12 81#
        "expl:Ensures clause"
        (((Int32.(=) result (#"map_c.jc" 455 57 69# "expl:Integer cast"
          (Int32.of_int (1))))
         /\ ((=) value_1 null)) ->
         ((Int32.(=) (select !__anonstruct_Value_22_c_value_1_36 value_1)
          (select (old !__anonstruct_Value_22_c_value_1_36) value_1))
         /\
         (Int32.(=) (select !__anonstruct_Value_22_d_value_1_36 value_1)
         (select (old !__anonstruct_Value_22_d_value_1_36) value_1)))))
       /\
       (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 92 12 220#
       "expl:Ensures clause"
       (((Int32.(=) result (#"map_c.jc" 463 58 70# "expl:Integer cast"
         (Int32.of_int (1))))
        /\ (not ((=) value_1 null))) ->
        (exists i_14 : int.
         (((<=) (0) i_14) /\
         (((<) i_14
          (Int32.to_int
          (select __anonstruct_Map_24_capacity_map_3_34 map_3_0)))
         /\
         ((Int32.(=)
          (select (old !__anonstruct_Value_22_c_items_70)
          (select __anonstruct_Item_23_value_2_items_70
          (shift (select (old !__anonstruct_Map_24_items_map_3_34) map_3_0)
          i_14))) (select !__anonstruct_Value_22_c_value_1_36 value_1))
         /\
         (Int32.(=)
         (select (old !__anonstruct_Value_22_d_items_70)
         (select __anonstruct_Item_23_value_2_items_70
         (shift (select (old !__anonstruct_Map_24_items_map_3_34) map_3_0)
         i_14))) (select !__anonstruct_Value_22_d_value_1_36 value_1)))))))))))))))))))))))))))))))))))))
     } diverges  ->
   'Init:
   (let __anonstruct_Key_21_b_tmp_key_77 = ref
   (any_memory  () : (memory __anonstruct_Key_21 Int32.t)) in
   (let __anonstruct_Key_21_a_tmp_key_77 = ref
   (any_memory  () : (memory __anonstruct_Key_21 Int32.t)) in
   (let __anonstruct_Key_21_tmp_key_77_tag_table = ref
   (any_tag_table  () : (tag_table __anonstruct_Key_21)) in
   (let __anonstruct_Key_21_tmp_key_77_alloc_table = ref
   (any_alloc_table  () : (alloc_table __anonstruct_Key_21)) in
   (let __anonstruct_Key_21_b_key_1_72 =
   (any_memory  () : (memory __anonstruct_Key_21 Int32.t)) in
   (let __anonstruct_Key_21_a_key_1_72 =
   (any_memory  () : (memory __anonstruct_Key_21 Int32.t)) in
   (let return = ref (Unsafe_int32.any_  () ) in
   try
    begin
    (let foundIndex = ref (Unsafe_int32.any_  () ) in
    (let i_15 = ref (Unsafe_int32.any_  () ) in
    (let tmp_key = ref (any_pointer  () : (pointer __anonstruct_Key_21)) in
    (let insertIndex = ref (Unsafe_int32.any_  () ) in
    (let i_0_0 = ref (Unsafe_int32.any_  () ) in
    (let __retres = ref (Unsafe_int32.any_  () ) in
    try
     begin
     (tmp_key :=
      (allocate_singleton_struct___anonstruct_Key_21 
       __anonstruct_Key_21_tmp_key_77_alloc_table
       __anonstruct_Key_21_tmp_key_77_tag_table ));
      begin
      (foundIndex :=
       (#"map_c.jc" 490 29 42# "expl:Integer cast"
       (Unsafe_int32.of_int  (Int.(-_)  (1) ) )));
       (if
       (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 60 8 23#
       (Unsafe_int32.(>=) 
        (acc  !__anonstruct_Map_24_count_map_3_34 map_3_0 )
        (#"map_c.jc" 491 47 59# "expl:Integer cast"
        (Unsafe_int32.of_int (1))) ))
       then
        begin
        try
         begin
         (i_15 :=
          (#"map_c.jc" 493 26 38# "expl:Integer cast"
          (Unsafe_int32.of_int (0))));
          'LoopEntry:
          begin
          'LoopEntry:
          'Loop_1:
          loop
          invariant
            { (((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 62 27 38#
                (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 62 27 38#
                ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 62 27 38#
                 ((<=)
                 (offset_min __anonstruct_Map_24_map_3_34_alloc_table
                 map_3_0) (0)))
                /\
                (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 62 27 38#
                ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 62 27 38#
                 ((>=)
                 (offset_max __anonstruct_Map_24_map_3_34_alloc_table
                 map_3_0) (0)))
                /\
                (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 62 27 38#
                ((=) true true)))))))
               &&
               ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 63 27 70#
                (if
                 ((<=) (0)
                 (Int.(-)
                 (Int32.to_int
                 (select __anonstruct_Map_24_capacity_map_3_34 map_3_0)) (1)))
                 then
                 (((<=)
                  (offset_min voidP_items_70_alloc_table
                  (select !__anonstruct_Map_24_items_map_3_34 map_3_0)) (0))
                 /\
                 (((>=)
                  (offset_max voidP_items_70_alloc_table
                  (select !__anonstruct_Map_24_items_map_3_34 map_3_0))
                  (Int.(-)
                  (Int32.to_int
                  (select __anonstruct_Map_24_capacity_map_3_34 map_3_0))
                  (1)))
                 /\
                 (forall __framac_tmp5 : int.
                  ((((<=) (0) __framac_tmp5) /\
                   ((<=) __framac_tmp5
                   (Int.(-)
                   (Int32.to_int
                   (select __anonstruct_Map_24_capacity_map_3_34 map_3_0))
                   (1)))) ->
                   (((<=)
                    (offset_min __anonstruct_Key_21_items_70_alloc_table
                    (select __anonstruct_Item_23_key_2_items_70
                    (shift
                    (select !__anonstruct_Map_24_items_map_3_34 map_3_0)
                    __framac_tmp5))) (0))
                   /\
                   (((>=)
                    (offset_max __anonstruct_Key_21_items_70_alloc_table
                    (select __anonstruct_Item_23_key_2_items_70
                    (shift
                    (select !__anonstruct_Map_24_items_map_3_34 map_3_0)
                    __framac_tmp5))) (0))
                   /\
                   (((=) true true) /\
                   (((<=)
                    (offset_min __anonstruct_Value_22_items_70_alloc_table
                    (select __anonstruct_Item_23_value_2_items_70
                    (shift
                    (select !__anonstruct_Map_24_items_map_3_34 map_3_0)
                    __framac_tmp5))) (0))
                   /\
                   (((>=)
                    (offset_max __anonstruct_Value_22_items_70_alloc_table
                    (select __anonstruct_Item_23_value_2_items_70
                    (shift
                    (select !__anonstruct_Map_24_items_map_3_34 map_3_0)
                    __framac_tmp5))) (0))
                   /\ ((=) true true)))))))))) else ((=) true true)))
               &&
               ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 64 27 50#
                (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 64 27 50#
                ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 64 27 33#
                 (Int32.(<=) (#"map_c.jc" 543 44 56# "expl:Integer cast"
                 (Int32.of_int (0))) !i_15))
                /\
                (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 64 32 50#
                (Int32.(<=) !i_15
                (select __anonstruct_Map_24_capacity_map_3_34 map_3_0))))))
               &&
               ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 65 27 59#
                (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 65 27 59#
                ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 65 27 43#
                 (Int32.(<=) (#"map_c.jc" 546 44 60# "expl:Integer cast"
                 (Int32.of_int (Int.(-_) (1)))) !foundIndex))
                /\
                (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 65 33 59#
                (Int32.(<) !foundIndex
                (select __anonstruct_Map_24_capacity_map_3_34 map_3_0))))))
               &&
               (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 66 27 59#
               (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 66 27 59#
               ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 66 27 42#
                (Int32.(<=) (#"map_c.jc" 549 44 56# "expl:Integer cast"
                (Int32.of_int (0)))
                (select !__anonstruct_Map_24_count_map_3_34 map_3_0)))
               /\
               (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 66 32 59#
               (Int32.(<=)
               (select !__anonstruct_Map_24_count_map_3_34 map_3_0)
               (select __anonstruct_Map_24_capacity_map_3_34 map_3_0))))))))))
              /\
              (#"map_c.jc" 495 12 8498#
              ((#"map_c.jc" 495 12 8498#
               ((#"map_c.jc" 495 12 8498#
                ((#"map_c.jc" 495 12 8498#
                 ((#"map_c.jc" 495 12 8498#
                  ((#"map_c.jc" 495 12 8498#
                   ((#"map_c.jc" 495 12 8498#
                    ((#"map_c.jc" 495 12 8498#
                     ((#"map_c.jc" 495 12 8498#
                      ((#"map_c.jc" 495 12 8498#
                       ((#"map_c.jc" 337 10 382# "expl:Assigns clause"
                        (not_assigns __anonstruct_Key_21_items_70_alloc_table
                        __anonstruct_Key_21_items_70_alloc_table (at
                        !__anonstruct_Key_21_a_items_70 'Init)
                        !__anonstruct_Key_21_a_items_70
                        (pset_deref __anonstruct_Item_23_key_2_items_70
                        (pset_range
                        (pset_deref (at !__anonstruct_Map_24_items_map_3_34
                        'Init) (pset_singleton map_3_0)) (0)
                        (Int.(-)
                        (Int32.to_int
                        (select __anonstruct_Map_24_capacity_map_3_34
                        map_3_0)) (1))))))
                       /\
                       (#"map_c.jc" 337 10 382# "expl:Assigns clause"
                       (not_assigns (at
                       !__anonstruct_Key_21_tmp_key_77_alloc_table 'Init)
                       !__anonstruct_Key_21_tmp_key_77_alloc_table (at
                       !__anonstruct_Key_21_a_tmp_key_77 'Init)
                       !__anonstruct_Key_21_a_tmp_key_77 pset_empty))))
                      /\
                      (#"map_c.jc" 337 10 382# "expl:Assigns clause"
                      (not_assigns __anonstruct_Key_21_items_70_alloc_table
                      __anonstruct_Key_21_items_70_alloc_table (at
                      !__anonstruct_Key_21_b_items_70 'Init)
                      !__anonstruct_Key_21_b_items_70
                      (pset_deref __anonstruct_Item_23_key_2_items_70
                      (pset_range
                      (pset_deref (at !__anonstruct_Map_24_items_map_3_34
                      'Init) (pset_singleton map_3_0)) (0)
                      (Int.(-)
                      (Int32.to_int
                      (select __anonstruct_Map_24_capacity_map_3_34 map_3_0))
                      (1))))))))
                     /\
                     (#"map_c.jc" 337 10 382# "expl:Assigns clause"
                     (not_assigns (at
                     !__anonstruct_Key_21_tmp_key_77_alloc_table 'Init)
                     !__anonstruct_Key_21_tmp_key_77_alloc_table (at
                     !__anonstruct_Key_21_b_tmp_key_77 'Init)
                     !__anonstruct_Key_21_b_tmp_key_77 pset_empty))))
                    /\
                    (#"map_c.jc" 337 10 382# "expl:Assigns clause"
                    (not_assigns __anonstruct_Value_22_value_1_36_alloc_table
                    __anonstruct_Value_22_value_1_36_alloc_table (at
                    !__anonstruct_Value_22_c_value_1_36 'Init)
                    !__anonstruct_Value_22_c_value_1_36
                    (pset_singleton value_1)))))
                   /\
                   (#"map_c.jc" 337 10 382# "expl:Assigns clause"
                   (not_assigns __anonstruct_Value_22_items_70_alloc_table
                   __anonstruct_Value_22_items_70_alloc_table (at
                   !__anonstruct_Value_22_c_items_70 'Init)
                   !__anonstruct_Value_22_c_items_70
                   (pset_deref __anonstruct_Item_23_value_2_items_70
                   (pset_range
                   (pset_deref (at !__anonstruct_Map_24_items_map_3_34 'Init)
                   (pset_singleton map_3_0)) (0)
                   (Int.(-)
                   (Int32.to_int
                   (select __anonstruct_Map_24_capacity_map_3_34 map_3_0))
                   (1))))))))
                  /\
                  (#"map_c.jc" 337 10 382# "expl:Assigns clause"
                  (not_assigns __anonstruct_Value_22_value_1_36_alloc_table
                  __anonstruct_Value_22_value_1_36_alloc_table (at
                  !__anonstruct_Value_22_d_value_1_36 'Init)
                  !__anonstruct_Value_22_d_value_1_36
                  (pset_singleton value_1)))))
                 /\
                 (#"map_c.jc" 337 10 382# "expl:Assigns clause"
                 (not_assigns __anonstruct_Value_22_items_70_alloc_table
                 __anonstruct_Value_22_items_70_alloc_table (at
                 !__anonstruct_Value_22_d_items_70 'Init)
                 !__anonstruct_Value_22_d_items_70
                 (pset_deref __anonstruct_Item_23_value_2_items_70
                 (pset_range
                 (pset_deref (at !__anonstruct_Map_24_items_map_3_34 'Init)
                 (pset_singleton map_3_0)) (0)
                 (Int.(-)
                 (Int32.to_int
                 (select __anonstruct_Map_24_capacity_map_3_34 map_3_0)) (1))))))))
                /\
                (#"map_c.jc" 337 10 382# "expl:Assigns clause"
                (not_assigns voidP_items_70_alloc_table
                voidP_items_70_alloc_table (at
                !__anonstruct_Item_23_existent_items_70 'Init)
                !__anonstruct_Item_23_existent_items_70
                (pset_range
                (pset_deref (at !__anonstruct_Map_24_items_map_3_34 'Init)
                (pset_singleton map_3_0)) (0)
                (Int.(-)
                (Int32.to_int
                (select __anonstruct_Map_24_capacity_map_3_34 map_3_0)) (1)))))))
               /\
               (#"map_c.jc" 337 10 382# "expl:Assigns clause"
               (not_assigns __anonstruct_Map_24_map_3_34_alloc_table
               __anonstruct_Map_24_map_3_34_alloc_table (at
               !__anonstruct_Map_24_items_map_3_34 'Init)
               !__anonstruct_Map_24_items_map_3_34 pset_empty))))
              /\
              (#"map_c.jc" 337 10 382# "expl:Assigns clause"
              (not_assigns __anonstruct_Map_24_map_3_34_alloc_table
              __anonstruct_Map_24_map_3_34_alloc_table (at
              !__anonstruct_Map_24_count_map_3_34 'Init)
              !__anonstruct_Map_24_count_map_3_34 (pset_singleton map_3_0)))))) }
            
           begin
           any unit requires { true } ensures { true } ;
            try
             begin
             'LoopCurrent:
             begin
             'LoopCurrent:
             (if
             (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 73 24 41#
             (Unsafe_int32.(<)  !i_15
              (acc  __anonstruct_Map_24_capacity_map_3_34 map_3_0 ) ))
             then () else (raise (Goto_while_0_break_exc ())));
              (if
              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 74 16 38#
              (Unsafe_int32.(<>) 
               (acc  !__anonstruct_Item_23_existent_items_70
                (shift_  (acc  !__anonstruct_Map_24_items_map_3_34 map_3_0 )
                 (Unsafe_int32.to_int  !i_15 ) ) )
               (#"map_c.jc" 559 37 49# "expl:Integer cast"
               (Unsafe_int32.of_int (0))) ))
              then
               (if
               (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 74 43 72#
               (Unsafe_int32.(=) 
                (acc  !__anonstruct_Key_21_a_items_70
                 (acc  __anonstruct_Item_23_key_2_items_70
                  (shift_ 
                   (acc  !__anonstruct_Map_24_items_map_3_34 map_3_0 )
                   (Unsafe_int32.to_int  !i_15 ) ) ) )
                (acc  __anonstruct_Key_21_a_key_1_35 key_1 ) ))
               then
                (if
                (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 74 78 107#
                (Unsafe_int32.(=) 
                 (acc  !__anonstruct_Key_21_b_items_70
                  (acc  __anonstruct_Item_23_key_2_items_70
                   (shift_ 
                    (acc  !__anonstruct_Map_24_items_map_3_34 map_3_0 )
                    (Unsafe_int32.to_int  !i_15 ) ) ) )
                 (acc  __anonstruct_Key_21_b_key_1_35 key_1 ) ))
                then
                 begin
                 (if
                 (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 75 20 86#
                 ((<>)  value_1 (null  ) ))
                 then
                  begin
                  (let _jessie_78 =
                  (acc  !__anonstruct_Value_22_c_items_70
                   (acc  __anonstruct_Item_23_value_2_items_70
                    (shift_ 
                     (acc  !__anonstruct_Map_24_items_map_3_34 map_3_0 )
                     (Unsafe_int32.to_int  !i_15 ) ) ) ) in
                  (let _jessie_79 = value_1 in
                  (let _jessie_80 = (0) in
                  (let _jessie_81 = _jessie_79 in
                  (upd  __anonstruct_Value_22_c_value_1_36 _jessie_81
                   _jessie_78 )))));
                   (let _jessie_83 =
                   (acc  !__anonstruct_Value_22_d_items_70
                    (acc  __anonstruct_Item_23_value_2_items_70
                     (shift_ 
                      (acc  !__anonstruct_Map_24_items_map_3_34 map_3_0 )
                      (Unsafe_int32.to_int  !i_15 ) ) ) ) in
                   (let _jessie_84 = value_1 in
                   (let _jessie_85 = (0) in
                   (let _jessie_86 = _jessie_84 in
                   (upd  __anonstruct_Value_22_d_value_1_36 _jessie_86
                    _jessie_83 ))))) end else ());
                  begin
                  (let _jessie_94 =
                  (#"map_c.jc" 595 78 90# "expl:Integer cast"
                  (Unsafe_int32.of_int (0))) in
                  (let _jessie_95 =
                  (acc  !__anonstruct_Map_24_items_map_3_34 map_3_0 ) in
                  (let _jessie_96 = (Unsafe_int32.to_int  !i_15 ) in
                  (let _jessie_97 = (shift_  _jessie_95 _jessie_96 ) in
                  (upd  __anonstruct_Item_23_existent_items_70 _jessie_97
                   _jessie_94 )))));
                   begin
                   (let _jessie_89 =
                   (Unsafe_int32.(-) 
                    (acc  !__anonstruct_Map_24_count_map_3_34 map_3_0 )
                    (#"map_c.jc" 601 62 74# "expl:Integer cast"
                    (Unsafe_int32.of_int (1))) ) in
                   (let _jessie_90 = map_3_0 in
                   (let _jessie_91 = (0) in
                   (let _jessie_92 = _jessie_90 in
                   (upd  __anonstruct_Map_24_count_map_3_34 _jessie_92
                    _jessie_89 )))));
                    begin
                    (foundIndex := !i_15);
                     (raise (Goto_while_0_break_exc ())) end end end end
                else ()) else ()) else ());
              (i_15 :=
               (Unsafe_int32.(+)  !i_15
                (#"map_c.jc" 607 59 71# "expl:Integer cast"
                (Unsafe_int32.of_int (1))) )) end;
              (raise (Loop_continue_exc ())) end with Loop_continue_exc
             _jessie_5 -> () end end end; (raise (Goto_while_0_break_exc ()))
          end end with Goto_while_0_break_exc _jessie_1 ->
         'While_0_break: 'While_0_break: () end;
         (if
         (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 85 12 28#
         (Unsafe_int32.(=)  !foundIndex
          (#"map_c.jc" 612 38 51# "expl:Integer cast"
          (Unsafe_int32.of_int  (Int.(-_)  (1) ) )) ))
         then
          begin
          (__retres :=
           (#"map_c.jc" 613 34 46# "expl:Integer cast"
           (Unsafe_int32.of_int (0)))); (raise (Return_label_exc ())) end
         else ()) end
       else
        begin
        (__retres :=
         (#"map_c.jc" 618 30 42# "expl:Integer cast"
         (Unsafe_int32.of_int (0)))); (raise (Return_label_exc ())) end);
       (if
       (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 92 8 23#
       (Unsafe_int32.(>=) 
        (acc  !__anonstruct_Map_24_count_map_3_34 map_3_0 )
        (#"map_c.jc" 622 47 59# "expl:Integer cast"
        (Unsafe_int32.of_int (1))) ))
       then
        begin
        (insertIndex := !foundIndex);
         try
          begin
          (i_0_0 :=
           (Unsafe_int32.(+)  !foundIndex
            (#"map_c.jc" 625 64 76# "expl:Integer cast"
            (Unsafe_int32.of_int (1))) ));
           'LoopEntry:
           begin
           'LoopEntry:
           'Loop_2:
           loop
           invariant
             { (((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 97 27 38#
                 (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 97 27 38#
                 ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 97 27 38#
                  ((<=)
                  (offset_min __anonstruct_Map_24_map_3_34_alloc_table
                  map_3_0) (0)))
                 /\
                 (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 97 27 38#
                 ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 97 27 38#
                  ((>=)
                  (offset_max __anonstruct_Map_24_map_3_34_alloc_table
                  map_3_0) (0)))
                 /\
                 (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 97 27 38#
                 ((=) true true)))))))
                &&
                ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 98 27 70#
                 (if
                  ((<=) (0)
                  (Int.(-)
                  (Int32.to_int
                  (select __anonstruct_Map_24_capacity_map_3_34 map_3_0))
                  (1))) then
                  (((<=)
                   (offset_min voidP_items_70_alloc_table
                   (select !__anonstruct_Map_24_items_map_3_34 map_3_0)) (0))
                  /\
                  (((>=)
                   (offset_max voidP_items_70_alloc_table
                   (select !__anonstruct_Map_24_items_map_3_34 map_3_0))
                   (Int.(-)
                   (Int32.to_int
                   (select __anonstruct_Map_24_capacity_map_3_34 map_3_0))
                   (1)))
                  /\
                  (forall __framac_tmp9 : int.
                   ((((<=) (0) __framac_tmp9) /\
                    ((<=) __framac_tmp9
                    (Int.(-)
                    (Int32.to_int
                    (select __anonstruct_Map_24_capacity_map_3_34 map_3_0))
                    (1)))) ->
                    (((<=)
                     (offset_min __anonstruct_Key_21_items_70_alloc_table
                     (select __anonstruct_Item_23_key_2_items_70
                     (shift
                     (select !__anonstruct_Map_24_items_map_3_34 map_3_0)
                     __framac_tmp9))) (0))
                    /\
                    (((>=)
                     (offset_max __anonstruct_Key_21_items_70_alloc_table
                     (select __anonstruct_Item_23_key_2_items_70
                     (shift
                     (select !__anonstruct_Map_24_items_map_3_34 map_3_0)
                     __framac_tmp9))) (0))
                    /\
                    (((=) true true) /\
                    (((<=)
                     (offset_min __anonstruct_Value_22_items_70_alloc_table
                     (select __anonstruct_Item_23_value_2_items_70
                     (shift
                     (select !__anonstruct_Map_24_items_map_3_34 map_3_0)
                     __framac_tmp9))) (0))
                    /\
                    (((>=)
                     (offset_max __anonstruct_Value_22_items_70_alloc_table
                     (select __anonstruct_Item_23_value_2_items_70
                     (shift
                     (select !__anonstruct_Map_24_items_map_3_34 map_3_0)
                     __framac_tmp9))) (0))
                    /\ ((=) true true)))))))))) else ((=) true true)))
                &&
                ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 99 27 58#
                 (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 99 27 58#
                 ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 99 27 42#
                  (Int32.(<=) (#"map_c.jc" 675 46 58# "expl:Integer cast"
                  (Int32.of_int (0))) !foundIndex))
                 /\
                 (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 99 32 58#
                 (Int32.(<) !foundIndex
                 (select __anonstruct_Map_24_capacity_map_3_34 map_3_0))))))
                &&
                ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 100 27 63#
                 (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 100 27 63#
                 ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 100 27 46#
                  ((<=) (Int.(+) (Int32.to_int !foundIndex) (1))
                  (Int32.to_int !i_0_0)))
                 /\
                 (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 100 45 63#
                 (Int32.(<=) !i_0_0
                 (select __anonstruct_Map_24_capacity_map_3_34 map_3_0))))))
                &&
                ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 101 27 59#
                 (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 101 27 59#
                 ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 101 27 43#
                  (Int32.(<=) (#"map_c.jc" 682 46 58# "expl:Integer cast"
                  (Int32.of_int (0))) !insertIndex))
                 /\
                 (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 101 32 59#
                 (Int32.(<) !insertIndex
                 (select __anonstruct_Map_24_capacity_map_3_34 map_3_0))))))
                &&
                (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 102 27 59#
                (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 102 27 59#
                ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 102 27 42#
                 (Int32.(<=) (#"map_c.jc" 685 46 58# "expl:Integer cast"
                 (Int32.of_int (0)))
                 (select !__anonstruct_Map_24_count_map_3_34 map_3_0)))
                /\
                (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 102 32 59#
                (Int32.(<=)
                (select !__anonstruct_Map_24_count_map_3_34 map_3_0)
                (select __anonstruct_Map_24_capacity_map_3_34 map_3_0)))))))))))
               /\
               (#"map_c.jc" 627 12 8393#
               ((#"map_c.jc" 627 12 8393#
                ((#"map_c.jc" 627 12 8393#
                 ((#"map_c.jc" 627 12 8393#
                  ((#"map_c.jc" 627 12 8393#
                   ((#"map_c.jc" 627 12 8393#
                    ((#"map_c.jc" 627 12 8393#
                     ((#"map_c.jc" 627 12 8393#
                      ((#"map_c.jc" 627 12 8393#
                       ((#"map_c.jc" 627 12 8393#
                        ((#"map_c.jc" 337 10 382# "expl:Assigns clause"
                         (not_assigns
                         __anonstruct_Key_21_items_70_alloc_table
                         __anonstruct_Key_21_items_70_alloc_table (at
                         !__anonstruct_Key_21_a_items_70 'Init)
                         !__anonstruct_Key_21_a_items_70
                         (pset_deref __anonstruct_Item_23_key_2_items_70
                         (pset_range
                         (pset_deref (at !__anonstruct_Map_24_items_map_3_34
                         'Init) (pset_singleton map_3_0)) (0)
                         (Int.(-)
                         (Int32.to_int
                         (select __anonstruct_Map_24_capacity_map_3_34
                         map_3_0)) (1))))))
                        /\
                        (#"map_c.jc" 337 10 382# "expl:Assigns clause"
                        (not_assigns (at
                        !__anonstruct_Key_21_tmp_key_77_alloc_table 'Init)
                        !__anonstruct_Key_21_tmp_key_77_alloc_table (at
                        !__anonstruct_Key_21_a_tmp_key_77 'Init)
                        !__anonstruct_Key_21_a_tmp_key_77 pset_empty))))
                       /\
                       (#"map_c.jc" 337 10 382# "expl:Assigns clause"
                       (not_assigns __anonstruct_Key_21_items_70_alloc_table
                       __anonstruct_Key_21_items_70_alloc_table (at
                       !__anonstruct_Key_21_b_items_70 'Init)
                       !__anonstruct_Key_21_b_items_70
                       (pset_deref __anonstruct_Item_23_key_2_items_70
                       (pset_range
                       (pset_deref (at !__anonstruct_Map_24_items_map_3_34
                       'Init) (pset_singleton map_3_0)) (0)
                       (Int.(-)
                       (Int32.to_int
                       (select __anonstruct_Map_24_capacity_map_3_34 map_3_0))
                       (1))))))))
                      /\
                      (#"map_c.jc" 337 10 382# "expl:Assigns clause"
                      (not_assigns (at
                      !__anonstruct_Key_21_tmp_key_77_alloc_table 'Init)
                      !__anonstruct_Key_21_tmp_key_77_alloc_table (at
                      !__anonstruct_Key_21_b_tmp_key_77 'Init)
                      !__anonstruct_Key_21_b_tmp_key_77 pset_empty))))
                     /\
                     (#"map_c.jc" 337 10 382# "expl:Assigns clause"
                     (not_assigns
                     __anonstruct_Value_22_value_1_36_alloc_table
                     __anonstruct_Value_22_value_1_36_alloc_table (at
                     !__anonstruct_Value_22_c_value_1_36 'Init)
                     !__anonstruct_Value_22_c_value_1_36
                     (pset_singleton value_1)))))
                    /\
                    (#"map_c.jc" 337 10 382# "expl:Assigns clause"
                    (not_assigns __anonstruct_Value_22_items_70_alloc_table
                    __anonstruct_Value_22_items_70_alloc_table (at
                    !__anonstruct_Value_22_c_items_70 'Init)
                    !__anonstruct_Value_22_c_items_70
                    (pset_deref __anonstruct_Item_23_value_2_items_70
                    (pset_range
                    (pset_deref (at !__anonstruct_Map_24_items_map_3_34
                    'Init) (pset_singleton map_3_0)) (0)
                    (Int.(-)
                    (Int32.to_int
                    (select __anonstruct_Map_24_capacity_map_3_34 map_3_0))
                    (1))))))))
                   /\
                   (#"map_c.jc" 337 10 382# "expl:Assigns clause"
                   (not_assigns __anonstruct_Value_22_value_1_36_alloc_table
                   __anonstruct_Value_22_value_1_36_alloc_table (at
                   !__anonstruct_Value_22_d_value_1_36 'Init)
                   !__anonstruct_Value_22_d_value_1_36
                   (pset_singleton value_1)))))
                  /\
                  (#"map_c.jc" 337 10 382# "expl:Assigns clause"
                  (not_assigns __anonstruct_Value_22_items_70_alloc_table
                  __anonstruct_Value_22_items_70_alloc_table (at
                  !__anonstruct_Value_22_d_items_70 'Init)
                  !__anonstruct_Value_22_d_items_70
                  (pset_deref __anonstruct_Item_23_value_2_items_70
                  (pset_range
                  (pset_deref (at !__anonstruct_Map_24_items_map_3_34 'Init)
                  (pset_singleton map_3_0)) (0)
                  (Int.(-)
                  (Int32.to_int
                  (select __anonstruct_Map_24_capacity_map_3_34 map_3_0))
                  (1))))))))
                 /\
                 (#"map_c.jc" 337 10 382# "expl:Assigns clause"
                 (not_assigns voidP_items_70_alloc_table
                 voidP_items_70_alloc_table (at
                 !__anonstruct_Item_23_existent_items_70 'Init)
                 !__anonstruct_Item_23_existent_items_70
                 (pset_range
                 (pset_deref (at !__anonstruct_Map_24_items_map_3_34 'Init)
                 (pset_singleton map_3_0)) (0)
                 (Int.(-)
                 (Int32.to_int
                 (select __anonstruct_Map_24_capacity_map_3_34 map_3_0)) (1)))))))
                /\
                (#"map_c.jc" 337 10 382# "expl:Assigns clause"
                (not_assigns __anonstruct_Map_24_map_3_34_alloc_table
                __anonstruct_Map_24_map_3_34_alloc_table (at
                !__anonstruct_Map_24_items_map_3_34 'Init)
                !__anonstruct_Map_24_items_map_3_34 pset_empty))))
               /\
               (#"map_c.jc" 337 10 382# "expl:Assigns clause"
               (not_assigns __anonstruct_Map_24_map_3_34_alloc_table
               __anonstruct_Map_24_map_3_34_alloc_table (at
               !__anonstruct_Map_24_count_map_3_34 'Init)
               !__anonstruct_Map_24_count_map_3_34 (pset_singleton map_3_0)))))) }
             
            begin
            any unit requires { true } ensures { true } ;
             try
              begin
              'LoopCurrent:
              begin
              'LoopCurrent:
              (if
              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 109 37 54#
              (Unsafe_int32.(<)  !i_0_0
               (acc  __anonstruct_Map_24_capacity_map_3_34 map_3_0 ) ))
              then () else (raise (Goto_while_0_break_0_exc ())));
               (if
               (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 110 16 43#
               (Unsafe_int32.(=) 
                (acc  !__anonstruct_Item_23_existent_items_70
                 (shift_  (acc  !__anonstruct_Map_24_items_map_3_34 map_3_0 )
                  (Unsafe_int32.to_int  !i_0_0 ) ) )
                (#"map_c.jc" 697 37 49# "expl:Integer cast"
                (Unsafe_int32.of_int (1))) ))
               then
                begin
                (let _jessie_104 =
                (acc  !__anonstruct_Key_21_a_items_70
                 (acc  __anonstruct_Item_23_key_2_items_70
                  (shift_ 
                   (acc  !__anonstruct_Map_24_items_map_3_34 map_3_0 )
                   (Unsafe_int32.to_int  !insertIndex ) ) ) ) in
                (let _jessie_105 = !tmp_key in
                (let _jessie_106 = (0) in
                (let _jessie_107 = _jessie_105 in
                (upd  __anonstruct_Key_21_a_tmp_key_77 _jessie_107
                 _jessie_104 )))));
                 begin
                 (let _jessie_109 =
                 (acc  !__anonstruct_Key_21_b_items_70
                  (acc  __anonstruct_Item_23_key_2_items_70
                   (shift_ 
                    (acc  !__anonstruct_Map_24_items_map_3_34 map_3_0 )
                    (Unsafe_int32.to_int  !insertIndex ) ) ) ) in
                 (let _jessie_110 = !tmp_key in
                 (let _jessie_111 = (0) in
                 (let _jessie_112 = _jessie_110 in
                 (upd  __anonstruct_Key_21_b_tmp_key_77 _jessie_112
                  _jessie_109 )))));
                  begin
                  (let _jessie_114 =
                  (acc  !__anonstruct_Key_21_a_items_70
                   (acc  __anonstruct_Item_23_key_2_items_70
                    (shift_ 
                     (acc  !__anonstruct_Map_24_items_map_3_34 map_3_0 )
                     (Unsafe_int32.to_int  !i_0_0 ) ) ) ) in
                  (let _jessie_115 =
                  (acc  __anonstruct_Item_23_key_2_items_70
                   (shift_ 
                    (acc  !__anonstruct_Map_24_items_map_3_34 map_3_0 )
                    (Unsafe_int32.to_int  !insertIndex ) ) ) in
                  (let _jessie_116 = (0) in
                  (let _jessie_117 = _jessie_115 in
                  (upd  __anonstruct_Key_21_a_items_70 _jessie_117
                   _jessie_114 )))));
                   begin
                   (let _jessie_119 =
                   (acc  !__anonstruct_Key_21_b_items_70
                    (acc  __anonstruct_Item_23_key_2_items_70
                     (shift_ 
                      (acc  !__anonstruct_Map_24_items_map_3_34 map_3_0 )
                      (Unsafe_int32.to_int  !i_0_0 ) ) ) ) in
                   (let _jessie_120 =
                   (acc  __anonstruct_Item_23_key_2_items_70
                    (shift_ 
                     (acc  !__anonstruct_Map_24_items_map_3_34 map_3_0 )
                     (Unsafe_int32.to_int  !insertIndex ) ) ) in
                   (let _jessie_121 = (0) in
                   (let _jessie_122 = _jessie_120 in
                   (upd  __anonstruct_Key_21_b_items_70 _jessie_122
                    _jessie_119 )))));
                    begin
                    (let _jessie_124 =
                    (acc  !__anonstruct_Value_22_c_items_70
                     (acc  __anonstruct_Item_23_value_2_items_70
                      (shift_ 
                       (acc  !__anonstruct_Map_24_items_map_3_34 map_3_0 )
                       (Unsafe_int32.to_int  !i_0_0 ) ) ) ) in
                    (let _jessie_125 =
                    (acc  __anonstruct_Item_23_value_2_items_70
                     (shift_ 
                      (acc  !__anonstruct_Map_24_items_map_3_34 map_3_0 )
                      (Unsafe_int32.to_int  !insertIndex ) ) ) in
                    (let _jessie_126 = (0) in
                    (let _jessie_127 = _jessie_125 in
                    (upd  __anonstruct_Value_22_c_items_70 _jessie_127
                     _jessie_124 )))));
                     begin
                     (let _jessie_129 =
                     (acc  !__anonstruct_Value_22_d_items_70
                      (acc  __anonstruct_Item_23_value_2_items_70
                       (shift_ 
                        (acc  !__anonstruct_Map_24_items_map_3_34 map_3_0 )
                        (Unsafe_int32.to_int  !i_0_0 ) ) ) ) in
                     (let _jessie_130 =
                     (acc  __anonstruct_Item_23_value_2_items_70
                      (shift_ 
                       (acc  !__anonstruct_Map_24_items_map_3_34 map_3_0 )
                       (Unsafe_int32.to_int  !insertIndex ) ) ) in
                     (let _jessie_131 = (0) in
                     (let _jessie_132 = _jessie_130 in
                     (upd  __anonstruct_Value_22_d_items_70 _jessie_132
                      _jessie_129 )))));
                      begin
                      (let _jessie_134 =
                      (#"map_c.jc" 723 83 95# "expl:Integer cast"
                      (Unsafe_int32.of_int (1))) in
                      (let _jessie_135 =
                      (acc  !__anonstruct_Map_24_items_map_3_34 map_3_0 ) in
                      (let _jessie_136 = (Unsafe_int32.to_int  !insertIndex )
                      in
                      (let _jessie_137 = (shift_  _jessie_135 _jessie_136 )
                      in
                      (upd  __anonstruct_Item_23_existent_items_70
                       _jessie_137 _jessie_134 )))));
                       begin
                       (let _jessie_139 =
                       (acc  !__anonstruct_Key_21_a_tmp_key_77 !tmp_key ) in
                       (let _jessie_140 =
                       (acc  __anonstruct_Item_23_key_2_items_70
                        (shift_ 
                         (acc  !__anonstruct_Map_24_items_map_3_34 map_3_0 )
                         (Unsafe_int32.to_int  !i_0_0 ) ) ) in
                       (let _jessie_141 = (0) in
                       (let _jessie_142 = _jessie_140 in
                       (upd  __anonstruct_Key_21_a_items_70 _jessie_142
                        _jessie_139 )))));
                        begin
                        (let _jessie_144 =
                        (acc  !__anonstruct_Key_21_b_tmp_key_77 !tmp_key ) in
                        (let _jessie_145 =
                        (acc  __anonstruct_Item_23_key_2_items_70
                         (shift_ 
                          (acc  !__anonstruct_Map_24_items_map_3_34 map_3_0 )
                          (Unsafe_int32.to_int  !i_0_0 ) ) ) in
                        (let _jessie_146 = (0) in
                        (let _jessie_147 = _jessie_145 in
                        (upd  __anonstruct_Key_21_b_items_70 _jessie_147
                         _jessie_144 )))));
                         begin
                         (let _jessie_149 =
                         (#"map_c.jc" 731 75 87# "expl:Integer cast"
                         (Unsafe_int32.of_int (0))) in
                         (let _jessie_150 =
                         (acc  !__anonstruct_Map_24_items_map_3_34 map_3_0 )
                         in
                         (let _jessie_151 = (Unsafe_int32.to_int  !i_0_0 ) in
                         (let _jessie_152 =
                         (shift_  _jessie_150 _jessie_151 ) in
                         (upd  __anonstruct_Item_23_existent_items_70
                          _jessie_152 _jessie_149 )))));
                          (insertIndex :=
                           (Unsafe_int32.(+)  !insertIndex
                            (#"map_c.jc" 734 62 74# "expl:Integer cast"
                            (Unsafe_int32.of_int (1))) )) end end end end end
                    end end end end end else ());
               (i_0_0 :=
                (Unsafe_int32.(+)  !i_0_0
                 (#"map_c.jc" 737 63 75# "expl:Integer cast"
                 (Unsafe_int32.of_int (1))) )) end;
               (raise (Loop_continue_exc ())) end with Loop_continue_exc
              _jessie_7 -> () end end end;
            (raise (Goto_while_0_break_0_exc ())) end end with
          Goto_while_0_break_0_exc _jessie_2 ->
          'While_0_break_0: 'While_0_break_0: () end;
         begin
         (__retres :=
          (#"map_c.jc" 743 34 46# "expl:Integer cast"
          (Unsafe_int32.of_int (1)))); (raise (Return_label_exc ())) end end
       else ());
       begin
       (__retres :=
        (#"map_c.jc" 748 28 40# "expl:Integer cast"
        (Unsafe_int32.of_int (1)))); (raise (Return_label_exc ())) end end
     end with Return_label_exc _jessie_3 ->
     'Return_label:
     'Return_label:
     begin
     (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 93 12 19#
     (safe_free_struct___anonstruct_Key_21  !tmp_key
      __anonstruct_Key_21_tmp_key_77_alloc_table ));
      begin (return := !__retres); (raise Return) end end end)))))); 
     absurd  end with Return ->
    begin
    (assert {
    (#"map_c.jc" 345 12 20# "expl:Allocates clause"
    ((#"map_c.jc" 345 12 20# "expl:Allocates clause"
     (alloc_same_except (at !__anonstruct_Key_21_tmp_key_77_alloc_table
     'Init) !__anonstruct_Key_21_tmp_key_77_alloc_table pset_empty))
    /\
    (#"map_c.jc" 345 12 20# "expl:Allocates clause"
    (tag_extends (at !__anonstruct_Key_21_tmp_key_77_tag_table 'Init)
    !__anonstruct_Key_21_tmp_key_77_tag_table)))) }); !return end end)))))))
  
end

module Function_compareKeys_safe

  use import Root___anonstruct_Key_21 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val compareKeys
  (v_key1 : (pointer __anonstruct_Key_21)) 
   (v_key2 : (pointer __anonstruct_Key_21)) 
    (__anonstruct_Key_21_v_key2_32_alloc_table : (alloc_table
     __anonstruct_Key_21)) 
     (__anonstruct_Key_21_v_key1_31_alloc_table : (alloc_table
      __anonstruct_Key_21)) 
      (__anonstruct_Key_21_b_v_key2_32 : (memory __anonstruct_Key_21
       Int32.t)) 
       (__anonstruct_Key_21_b_v_key1_31 : (memory __anonstruct_Key_21
        Int32.t)) 
        (__anonstruct_Key_21_a_v_key2_32 : (memory __anonstruct_Key_21
         Int32.t)) 
         (__anonstruct_Key_21_a_v_key1_31 : (memory __anonstruct_Key_21
          Int32.t)) : Int32.t requires { (true) } ensures { true }
  
end

module Function_getElement_safety
#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 127 4 48#
"expl:getElement, safety"

  use import core.Voidp 
  
  use import core.Upd_safe 
  
  use import core.Tag_table_type 
  
  use Safe_int32 
  
  use import Root___anonstruct_Value_22 
  
  use import Root___anonstruct_Map_24 
  
  use import Root___anonstruct_Key_21 
  
  use import core.Return 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_valid_map 
  
  use enum.Int32 
  
  use import int.Int 
  
  use Function_compareKeys_safe 
  
  use import Exceptions 
  
  use import core.Alloc_table 
  
  use import core.Acc_safe 
  
  use import core.Acc_offset_safe 
  
  use why3.Bool.Bool 
  
  let getElement
  #"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 127 4 48#
  "expl:Function getElement, safety" =
  fun
   (map_1_0 : (pointer __anonstruct_Map_24)) (key_0_0 : (pointer
   __anonstruct_Key_21)) (value_0 : (pointer __anonstruct_Value_22))
   (__anonstruct_Value_22_c_value_0_39 : ref (memory __anonstruct_Value_22
   Int32.t)) (__anonstruct_Value_22_d_value_0_39 : ref (memory
   __anonstruct_Value_22 Int32.t)) (__anonstruct_Key_21_key_0_38_alloc_table
   : (alloc_table __anonstruct_Key_21))
   (__anonstruct_Key_21_items_80_alloc_table : (alloc_table
   __anonstruct_Key_21)) (__anonstruct_Map_24_map_1_37_alloc_table :
   (alloc_table __anonstruct_Map_24))
   (__anonstruct_Value_22_value_0_39_alloc_table : (alloc_table
   __anonstruct_Value_22)) (__anonstruct_Value_22_items_80_alloc_table :
   (alloc_table __anonstruct_Value_22)) (voidP_items_80_alloc_table :
   (alloc_table voidP)) (voidP_items_80_tag_table : (tag_table voidP))
   (__anonstruct_Key_21_a_key_0_38 : (memory __anonstruct_Key_21 Int32.t))
   (__anonstruct_Key_21_a_items_80 : (memory __anonstruct_Key_21 Int32.t))
   (__anonstruct_Key_21_b_key_0_38 : (memory __anonstruct_Key_21 Int32.t))
   (__anonstruct_Key_21_b_items_80 : (memory __anonstruct_Key_21 Int32.t))
   (__anonstruct_Value_22_c_items_80 : (memory __anonstruct_Value_22
   Int32.t)) (__anonstruct_Value_22_d_items_80 : (memory
   __anonstruct_Value_22 Int32.t)) (__anonstruct_Item_23_key_2_items_80 :
   (memory voidP (pointer __anonstruct_Key_21)))
   (__anonstruct_Item_23_value_2_items_80 : (memory voidP (pointer
   __anonstruct_Value_22))) (__anonstruct_Item_23_existent_items_80 : (memory
   voidP Int32.t)) (__anonstruct_Map_24_items_map_1_37 : (memory
   __anonstruct_Map_24 (pointer voidP)))
   (__anonstruct_Map_24_capacity_map_1_37 : (memory __anonstruct_Map_24
   Int32.t)) (__anonstruct_Map_24_count_map_1_37 : (memory
   __anonstruct_Map_24 Int32.t)) 
   requires {
   (#"map_c.jc" 758 12 763#
   ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 105 13 25#
    (not ((=) map_1_0 null)))
   /\
   (#"map_c.jc" 758 12 763#
   ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 106 13 25#
    (not ((=) key_0_0 null)))
   /\
   (#"map_c.jc" 758 12 763#
   ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 107 13 24#
    (#"map_c.jc" 758 12 763#
    ((#"map_c.jc" 758 12 763#
     ((<=) (offset_min __anonstruct_Key_21_key_0_38_alloc_table key_0_0) (0)))
    /\
    (#"map_c.jc" 758 12 763#
    ((#"map_c.jc" 758 12 763#
     ((>=) (offset_max __anonstruct_Key_21_key_0_38_alloc_table key_0_0) (0)))
    /\ (#"map_c.jc" 758 12 763# ((=) true true)))))))
   /\
   (#"map_c.jc" 758 12 763#
   ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 108 13 26#
    (#"map_c.jc" 758 12 763#
    ((#"map_c.jc" 758 12 763#
     ((<=) (offset_min __anonstruct_Value_22_value_0_39_alloc_table value_0)
     (0)))
    /\
    (#"map_c.jc" 758 12 763#
    ((#"map_c.jc" 758 12 763#
     ((>=) (offset_max __anonstruct_Value_22_value_0_39_alloc_table value_0)
     (0)))
    /\ (#"map_c.jc" 758 12 763# ((=) true true)))))))
   /\
   (#"map_c.jc" 758 12 763#
   ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 109 13 30#
    (is_valid_map map_1_0 voidP_items_80_alloc_table
    __anonstruct_Value_22_items_80_alloc_table
    __anonstruct_Map_24_map_1_37_alloc_table
    __anonstruct_Key_21_items_80_alloc_table
    __anonstruct_Map_24_count_map_1_37 __anonstruct_Map_24_capacity_map_1_37
    __anonstruct_Map_24_items_map_1_37 __anonstruct_Item_23_existent_items_80
    __anonstruct_Item_23_value_2_items_80 __anonstruct_Item_23_key_2_items_80
    __anonstruct_Key_21_b_items_80 __anonstruct_Key_21_a_items_80))
   /\
   (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 110 13 30#
   (Int32.(>) (select __anonstruct_Map_24_capacity_map_1_37 map_1_0)
   (#"map_c.jc" 770 49 61# "expl:Integer cast" (Int32.of_int (0)))))))))))))))
   } ensures { ("expl:Postcondition" true) }  ->
   'Init:
   (let return = ref (Safe_int32.any_  () ) in
   try
    begin
    (let i_0_0_0 = ref (Safe_int32.any_  () ) in
    (let tmp_0 = ref (Safe_int32.any_  () ) in
    (let __retres_0 = ref (Safe_int32.any_  () ) in
    try
     begin
     try
      begin
      (i_0_0_0 :=
       (let _jessie_275 =
       (#"map_c.jc" 810 28 40# "expl:Integer cast" (Safe_int32.of_int (0)))
       in
       begin
       (assert {
       (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 141 13 14#
       "expl:Pointer index bounds" true) }); _jessie_275 end));
       'LoopEntry:
       begin
       'LoopEntry:
       'Loop_6:
       loop
       invariant { (#"map_c.jc" 812 9 5974# true) }
         variant {
           (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 139 21 38#
           (Int.(-)
           (Int32.to_int
           (select __anonstruct_Map_24_capacity_map_1_37 map_1_0))
           (Int32.to_int !i_0_0_0))) }
        begin
        any unit
        requires { true } reads { map_1_0 }
        ensures {
          ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 134 23 57#
           (Int32.(=) (select __anonstruct_Map_24_count_map_1_37 map_1_0)
           (select __anonstruct_Map_24_count_map_1_37 map_1_0)))
          /\
          ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 133 23 63#
           (Int32.(=) (select __anonstruct_Map_24_capacity_map_1_37 map_1_0)
           (select __anonstruct_Map_24_capacity_map_1_37 map_1_0)))
          /\
          ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 132 23 66#
           (if
            ((<=) (0)
            (Int.(-)
            (Int32.to_int
            (select __anonstruct_Map_24_capacity_map_1_37 map_1_0)) (1)))
            then
            (((<=)
             (offset_min voidP_items_80_alloc_table
             (select __anonstruct_Map_24_items_map_1_37 map_1_0)) (0))
            /\
            (((>=)
             (offset_max voidP_items_80_alloc_table
             (select __anonstruct_Map_24_items_map_1_37 map_1_0))
             (Int.(-)
             (Int32.to_int
             (select __anonstruct_Map_24_capacity_map_1_37 map_1_0)) (1)))
            /\
            (forall __framac_tmp18 : int.
             ((((<=) (0) __framac_tmp18) /\
              ((<=) __framac_tmp18
              (Int.(-)
              (Int32.to_int
              (select __anonstruct_Map_24_capacity_map_1_37 map_1_0)) (1))))
              ->
              (((<=)
               (offset_min __anonstruct_Key_21_items_80_alloc_table
               (select __anonstruct_Item_23_key_2_items_80
               (shift (select __anonstruct_Map_24_items_map_1_37 map_1_0)
               __framac_tmp18))) (0))
              /\
              (((>=)
               (offset_max __anonstruct_Key_21_items_80_alloc_table
               (select __anonstruct_Item_23_key_2_items_80
               (shift (select __anonstruct_Map_24_items_map_1_37 map_1_0)
               __framac_tmp18))) (0))
              /\
              (((=) true true) /\
              (((<=)
               (offset_min __anonstruct_Value_22_items_80_alloc_table
               (select __anonstruct_Item_23_value_2_items_80
               (shift (select __anonstruct_Map_24_items_map_1_37 map_1_0)
               __framac_tmp18))) (0))
              /\
              (((>=)
               (offset_max __anonstruct_Value_22_items_80_alloc_table
               (select __anonstruct_Item_23_value_2_items_80
               (shift (select __anonstruct_Map_24_items_map_1_37 map_1_0)
               __framac_tmp18))) (0))
              /\ ((=) true true)))))))))) else ((=) true true)))
          /\
          ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 131 23 40#
           (Int32.(>) (select __anonstruct_Map_24_capacity_map_1_37 map_1_0)
           (#"map_c.jc" 819 49 61# "expl:Integer cast" (Int32.of_int (0)))))
          /\
          ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 130 23 40#
           (is_valid_map map_1_0 voidP_items_80_alloc_table
           __anonstruct_Value_22_items_80_alloc_table
           __anonstruct_Map_24_map_1_37_alloc_table
           __anonstruct_Key_21_items_80_alloc_table
           __anonstruct_Map_24_count_map_1_37
           __anonstruct_Map_24_capacity_map_1_37
           __anonstruct_Map_24_items_map_1_37
           __anonstruct_Item_23_existent_items_80
           __anonstruct_Item_23_value_2_items_80
           __anonstruct_Item_23_key_2_items_80 __anonstruct_Key_21_b_items_80
           __anonstruct_Key_21_a_items_80))
          /\
          (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 129 24 47#
          (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 129 24 47#
          ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 129 24 30#
           (Int32.(<=) (#"map_c.jc" 814 43 55# "expl:Integer cast"
           (Int32.of_int (0))) !i_0_0_0))
          /\
          (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 129 29 47#
          (Int32.(<=) !i_0_0_0
          (select __anonstruct_Map_24_capacity_map_1_37 map_1_0))))))))))) } ;
         try
          begin
          'LoopCurrent:
          begin
          'LoopCurrent:
          (if
          (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 141 20 37#
          (Safe_int32.(<)  !i_0_0_0
           (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 141 24 37#
           "expl:Pointer dereference"
           (acc  __anonstruct_Map_24_map_1_37_alloc_table
            __anonstruct_Map_24_capacity_map_1_37 map_1_0 )) )) then ()
          else (raise (Goto_while_0_break_0_0_exc ())));
           (if
           (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 142 12 34#
           (Safe_int32.(<>) 
            (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 142 12 34#
            "expl:Pointer dereference"
            (acc_offset_typesafe  voidP_items_80_alloc_table
             __anonstruct_Item_23_existent_items_80
             (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 142 12 22#
             "expl:Pointer dereference"
             (acc  __anonstruct_Map_24_map_1_37_alloc_table
              __anonstruct_Map_24_items_map_1_37 map_1_0 ))
             (Safe_int32.to_int  !i_0_0_0 ) ))
            (#"map_c.jc" 873 34 46# "expl:Integer cast"
            (Safe_int32.of_int (0))) ))
           then
            begin
            (tmp_0 :=
             (let _jessie_260 =
             (let _jessie_262 =
             (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 142 38 74#
             "expl:Pointer dereference"
             (acc_offset_typesafe  voidP_items_80_alloc_table
              __anonstruct_Item_23_key_2_items_80
              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 142 50 60#
              "expl:Pointer dereference"
              (acc  __anonstruct_Map_24_map_1_37_alloc_table
               __anonstruct_Map_24_items_map_1_37 map_1_0 ))
              (Safe_int32.to_int  !i_0_0_0 ) )) in
             (let _jessie_261 = key_0_0 in
             (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 142 38 74#
             "expl:Pointer index bounds"
             begin
             (assert {
             (((<=)
              (offset_min __anonstruct_Key_21_key_0_38_alloc_table
              _jessie_261) (0))
             /\
             ((>=)
             (offset_max __anonstruct_Key_21_key_0_38_alloc_table
             _jessie_261) (0))) });
              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 142 38 74#
              "expl:Precondition for compareKeys"
              (Function_compareKeys_safe.compareKeys  _jessie_262 _jessie_261
               __anonstruct_Key_21_key_0_38_alloc_table
               __anonstruct_Key_21_items_80_alloc_table
               __anonstruct_Key_21_b_key_0_38 __anonstruct_Key_21_b_items_80
               __anonstruct_Key_21_a_key_0_38 __anonstruct_Key_21_a_items_80
               )) end))) in
             begin
             (assert {
             (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 142 38 74#
             "expl:Pointer index bounds" true) }); _jessie_260 end));
             (if
             (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 142 38 74#
             (Safe_int32.(<>)  !tmp_0
              (#"map_c.jc" 879 56 68# "expl:Integer cast"
              (Safe_int32.of_int (0))) ))
             then
              begin
              (let _jessie_270 =
              (let _jessie_269 =
              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 143 21 40#
              "expl:Pointer dereference"
              (acc_safe  __anonstruct_Value_22_c_items_80
               (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 143 21 40#
               "expl:Pointer dereference"
               (acc_offset_typesafe  voidP_items_80_alloc_table
                __anonstruct_Item_23_value_2_items_80
                (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 143 21 31#
                "expl:Pointer dereference"
                (acc  __anonstruct_Map_24_map_1_37_alloc_table
                 __anonstruct_Map_24_items_map_1_37 map_1_0 ))
                (Safe_int32.to_int  !i_0_0_0 ) )) )) in
              begin
              (assert {
              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 143 12 40#
              "expl:Pointer index bounds" true) }); _jessie_269 end) in
              (let _jessie_271 = value_0 in
              (let _jessie_272 = (0) in
              (let _jessie_273 = _jessie_271 in
              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 143 12 40#
              "expl:Pointer dereference"
              (upd  __anonstruct_Value_22_value_0_39_alloc_table
               __anonstruct_Value_22_c_value_0_39 _jessie_271 _jessie_270 ))))));
               begin
               (let _jessie_265 =
               (let _jessie_264 =
               (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 143 21 40#
               "expl:Pointer dereference"
               (acc_safe  __anonstruct_Value_22_d_items_80
                (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 143 21 40#
                "expl:Pointer dereference"
                (acc_offset_typesafe  voidP_items_80_alloc_table
                 __anonstruct_Item_23_value_2_items_80
                 (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 143 21 31#
                 "expl:Pointer dereference"
                 (acc  __anonstruct_Map_24_map_1_37_alloc_table
                  __anonstruct_Map_24_items_map_1_37 map_1_0 ))
                 (Safe_int32.to_int  !i_0_0_0 ) )) )) in
               begin
               (assert {
               (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 143 12 40#
               "expl:Pointer index bounds" true) }); _jessie_264 end) in
               (let _jessie_266 = value_0 in
               (let _jessie_267 = (0) in
               (let _jessie_268 = _jessie_266 in
               (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 143 12 40#
               "expl:Pointer dereference"
               (upd  __anonstruct_Value_22_value_0_39_alloc_table
                __anonstruct_Value_22_d_value_0_39 _jessie_266 _jessie_265 ))))));
                begin
                (__retres_0 :=
                 (let _jessie_263 =
                 (#"map_c.jc" 889 51 63# "expl:Integer cast"
                 (Safe_int32.of_int (1))) in
                 begin
                 (assert {
                 (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 144 12 21#
                 "expl:Pointer index bounds" true) }); _jessie_263 end));
                 (raise (Goto_return_label_0_exc ())) end end end else ())
            end else ());
           (i_0_0_0 :=
            (let _jessie_274 =
            (Safe_int32.(+)  !i_0_0_0
             (#"map_c.jc" 896 64 76# "expl:Integer cast"
             (Safe_int32.of_int (1))) ) in
            begin
            (assert {
            (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 141 39 42#
            "expl:Pointer index bounds" true) }); _jessie_274 end)) end;
           (raise (Loop_continue_exc ())) end with Loop_continue_exc
          _jessie_11 -> () end end end;
        (raise (Goto_while_0_break_0_0_exc ())) end end with
      Goto_while_0_break_0_0_exc _jessie_8 ->
      'While_0_break_0_0: 'While_0_break_0_0: () end;
      begin
      (__retres_0 :=
       (let _jessie_276 =
       (#"map_c.jc" 901 30 42# "expl:Integer cast" (Safe_int32.of_int (0)))
       in
       begin
       (assert {
       (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 147 4 13#
       "expl:Pointer index bounds" true) }); _jessie_276 end));
       (raise (Goto_return_label_0_exc ())) end end with
     Goto_return_label_0_exc _jessie_9 ->
     'Return_label_0:
     'Return_label_0:
     begin
     (return :=
      (let _jessie_277 = !__retres_0 in
      begin
      (assert { (#"map_c.jc" 903 7 24# "expl:Pointer index bounds" true) });
       _jessie_277 end)); (raise Return) end end))); absurd  end with Return
    -> !return end)
  
end

module Function_compareKeys

  use import Root___anonstruct_Key_21 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val compareKeys
  (v_key1 : (pointer __anonstruct_Key_21)) 
   (v_key2 : (pointer __anonstruct_Key_21)) 
    (__anonstruct_Key_21_v_key2_32_alloc_table : (alloc_table
     __anonstruct_Key_21)) 
     (__anonstruct_Key_21_v_key1_31_alloc_table : (alloc_table
      __anonstruct_Key_21)) 
      (__anonstruct_Key_21_b_v_key2_32 : (memory __anonstruct_Key_21
       Int32.t)) 
       (__anonstruct_Key_21_b_v_key1_31 : (memory __anonstruct_Key_21
        Int32.t)) 
        (__anonstruct_Key_21_a_v_key2_32 : (memory __anonstruct_Key_21
         Int32.t)) 
         (__anonstruct_Key_21_a_v_key1_31 : (memory __anonstruct_Key_21
          Int32.t)) : Int32.t requires { true } ensures { true }
  
end

module Function_getElement_behaviors
#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 127 4 48#
"expl:getElement, behaviors"

  use import core.Voidp 
  
  use import core.Upd_unsafe 
  
  use Unsafe_int32 
  
  use import core.Tag_table_type 
  
  use import core.Shift_unsafe 
  
  use import Root___anonstruct_Value_22 
  
  use import Root___anonstruct_Map_24 
  
  use import Root___anonstruct_Key_21 
  
  use import core.Return 
  
  use import ref.Ref 
  
  use import core.Pset 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_valid_map 
  
  use import Logic_has_key 
  
  use enum.Int32 
  
  use import int.Int 
  
  use Function_compareKeys 
  
  use import Exceptions 
  
  use import core.Assigns 
  
  use import core.Alloc_table 
  
  use import core.Acc_unsafe 
  
  use why3.Bool.Bool 
  
  let getElement_ensures_default
  #"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 127 4 48#
  "expl:Function getElement, default behavior" =
  fun
   (map_1_0 : (pointer __anonstruct_Map_24)) (key_0_0 : (pointer
   __anonstruct_Key_21)) (value_0 : (pointer __anonstruct_Value_22))
   (__anonstruct_Value_22_c_value_0_39 : ref (memory __anonstruct_Value_22
   Int32.t)) (__anonstruct_Value_22_d_value_0_39 : ref (memory
   __anonstruct_Value_22 Int32.t)) (__anonstruct_Key_21_key_0_38_alloc_table
   : (alloc_table __anonstruct_Key_21))
   (__anonstruct_Key_21_items_80_alloc_table : (alloc_table
   __anonstruct_Key_21)) (__anonstruct_Map_24_map_1_37_alloc_table :
   (alloc_table __anonstruct_Map_24))
   (__anonstruct_Value_22_value_0_39_alloc_table : (alloc_table
   __anonstruct_Value_22)) (__anonstruct_Value_22_items_80_alloc_table :
   (alloc_table __anonstruct_Value_22)) (voidP_items_80_alloc_table :
   (alloc_table voidP)) (voidP_items_80_tag_table : (tag_table voidP))
   (__anonstruct_Key_21_a_key_0_38 : (memory __anonstruct_Key_21 Int32.t))
   (__anonstruct_Key_21_a_items_80 : (memory __anonstruct_Key_21 Int32.t))
   (__anonstruct_Key_21_b_key_0_38 : (memory __anonstruct_Key_21 Int32.t))
   (__anonstruct_Key_21_b_items_80 : (memory __anonstruct_Key_21 Int32.t))
   (__anonstruct_Value_22_c_items_80 : (memory __anonstruct_Value_22
   Int32.t)) (__anonstruct_Value_22_d_items_80 : (memory
   __anonstruct_Value_22 Int32.t)) (__anonstruct_Item_23_key_2_items_80 :
   (memory voidP (pointer __anonstruct_Key_21)))
   (__anonstruct_Item_23_value_2_items_80 : (memory voidP (pointer
   __anonstruct_Value_22))) (__anonstruct_Item_23_existent_items_80 : (memory
   voidP Int32.t)) (__anonstruct_Map_24_items_map_1_37 : (memory
   __anonstruct_Map_24 (pointer voidP)))
   (__anonstruct_Map_24_capacity_map_1_37 : (memory __anonstruct_Map_24
   Int32.t)) (__anonstruct_Map_24_count_map_1_37 : (memory
   __anonstruct_Map_24 Int32.t)) 
   requires {
   (#"map_c.jc" 758 12 763#
   ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 105 13 25#
    (not ((=) map_1_0 null)))
   /\
   (#"map_c.jc" 758 12 763#
   ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 106 13 25#
    (not ((=) key_0_0 null)))
   /\
   (#"map_c.jc" 758 12 763#
   ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 107 13 24#
    (#"map_c.jc" 758 12 763#
    ((#"map_c.jc" 758 12 763#
     ((<=) (offset_min __anonstruct_Key_21_key_0_38_alloc_table key_0_0) (0)))
    /\
    (#"map_c.jc" 758 12 763#
    ((#"map_c.jc" 758 12 763#
     ((>=) (offset_max __anonstruct_Key_21_key_0_38_alloc_table key_0_0) (0)))
    /\ (#"map_c.jc" 758 12 763# ((=) true true)))))))
   /\
   (#"map_c.jc" 758 12 763#
   ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 108 13 26#
    (#"map_c.jc" 758 12 763#
    ((#"map_c.jc" 758 12 763#
     ((<=) (offset_min __anonstruct_Value_22_value_0_39_alloc_table value_0)
     (0)))
    /\
    (#"map_c.jc" 758 12 763#
    ((#"map_c.jc" 758 12 763#
     ((>=) (offset_max __anonstruct_Value_22_value_0_39_alloc_table value_0)
     (0)))
    /\ (#"map_c.jc" 758 12 763# ((=) true true)))))))
   /\
   (#"map_c.jc" 758 12 763#
   ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 109 13 30#
    (is_valid_map map_1_0 voidP_items_80_alloc_table
    __anonstruct_Value_22_items_80_alloc_table
    __anonstruct_Map_24_map_1_37_alloc_table
    __anonstruct_Key_21_items_80_alloc_table
    __anonstruct_Map_24_count_map_1_37 __anonstruct_Map_24_capacity_map_1_37
    __anonstruct_Map_24_items_map_1_37 __anonstruct_Item_23_existent_items_80
    __anonstruct_Item_23_value_2_items_80 __anonstruct_Item_23_key_2_items_80
    __anonstruct_Key_21_b_items_80 __anonstruct_Key_21_a_items_80))
   /\
   (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 110 13 30#
   (Int32.(>) (select __anonstruct_Map_24_capacity_map_1_37 map_1_0)
   (#"map_c.jc" 770 49 61# "expl:Integer cast" (Int32.of_int (0)))))))))))))))
   }
   ensures {
     ("expl:Postcondition"
     (((#"map_c.jc" 772 10 32# "expl:Assigns clause"
       (not_assigns __anonstruct_Value_22_value_0_39_alloc_table
       __anonstruct_Value_22_value_0_39_alloc_table (old
       !__anonstruct_Value_22_c_value_0_39)
       !__anonstruct_Value_22_c_value_0_39 (pset_singleton value_0)))
      /\
      (#"map_c.jc" 772 10 32# "expl:Assigns clause"
      (not_assigns __anonstruct_Value_22_value_0_39_alloc_table
      __anonstruct_Value_22_value_0_39_alloc_table (old
      !__anonstruct_Value_22_d_value_0_39)
      !__anonstruct_Value_22_d_value_0_39 (pset_singleton value_0))))
     /\
     (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 116 12 53#
     "expl:Ensures clause"
     (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 116 12 53#
     "expl:Ensures clause"
     ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 116 12 53#
      "expl:Ensures clause"
      ((has_key map_1_0 key_0_0 __anonstruct_Map_24_capacity_map_1_37
       __anonstruct_Map_24_items_map_1_37
       __anonstruct_Item_23_existent_items_80
       __anonstruct_Item_23_key_2_items_80 __anonstruct_Key_21_b_items_80
       __anonstruct_Key_21_b_key_0_38 __anonstruct_Key_21_a_items_80
       __anonstruct_Key_21_a_key_0_38) ->
       (Int32.(=) result (#"map_c.jc" 776 45 57# "expl:Integer cast"
       (Int32.of_int (1))))))
     /\
     (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 116 12 53#
     "expl:Ensures clause"
     ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 117 12 80#
      "expl:Ensures clause"
      ((not
       (has_key map_1_0 key_0_0 __anonstruct_Map_24_capacity_map_1_37
       __anonstruct_Map_24_items_map_1_37
       __anonstruct_Item_23_existent_items_80
       __anonstruct_Item_23_key_2_items_80 __anonstruct_Key_21_b_items_80
       __anonstruct_Key_21_b_key_0_38 __anonstruct_Key_21_a_items_80
       __anonstruct_Key_21_a_key_0_38)) ->
       ((Int32.(=) result (#"map_c.jc" 779 48 60# "expl:Integer cast"
        (Int32.of_int (0))))
       /\ ((=) value_0 value_0))))
     /\
     (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 116 12 53#
     "expl:Ensures clause"
     ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 118 12 48#
      "expl:Ensures clause"
      (Int32.(=) (select __anonstruct_Map_24_capacity_map_1_37 map_1_0)
      (select __anonstruct_Map_24_capacity_map_1_37 map_1_0)))
     /\
     (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 116 12 53#
     "expl:Ensures clause"
     ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 119 12 42#
      "expl:Ensures clause"
      (Int32.(=) (select __anonstruct_Map_24_count_map_1_37 map_1_0)
      (select __anonstruct_Map_24_count_map_1_37 map_1_0)))
     /\
     (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 116 12 53#
     "expl:Ensures clause"
     ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 120 12 380#
      "expl:Ensures clause"
      (forall i_15_0 : int.
       ((((<=) (0) i_15_0) /\
        ((<) i_15_0
        (Int32.to_int (select __anonstruct_Map_24_capacity_map_1_37 map_1_0))))
        ->
        ((Int32.(=)
         (select __anonstruct_Item_23_existent_items_80
         (shift (select __anonstruct_Map_24_items_map_1_37 map_1_0) i_15_0))
         (select __anonstruct_Item_23_existent_items_80
         (shift (select __anonstruct_Map_24_items_map_1_37 map_1_0) i_15_0)))
        /\
        ((Int32.(=)
         (select __anonstruct_Key_21_a_items_80
         (select __anonstruct_Item_23_key_2_items_80
         (shift (select __anonstruct_Map_24_items_map_1_37 map_1_0) i_15_0)))
         (select __anonstruct_Key_21_a_items_80
         (select __anonstruct_Item_23_key_2_items_80
         (shift (select __anonstruct_Map_24_items_map_1_37 map_1_0) i_15_0))))
        /\
        ((Int32.(=)
         (select __anonstruct_Key_21_b_items_80
         (select __anonstruct_Item_23_key_2_items_80
         (shift (select __anonstruct_Map_24_items_map_1_37 map_1_0) i_15_0)))
         (select __anonstruct_Key_21_b_items_80
         (select __anonstruct_Item_23_key_2_items_80
         (shift (select __anonstruct_Map_24_items_map_1_37 map_1_0) i_15_0))))
        /\
        ((Int32.(=)
         (select __anonstruct_Value_22_c_items_80
         (select __anonstruct_Item_23_value_2_items_80
         (shift (select __anonstruct_Map_24_items_map_1_37 map_1_0) i_15_0)))
         (select __anonstruct_Value_22_c_items_80
         (select __anonstruct_Item_23_value_2_items_80
         (shift (select __anonstruct_Map_24_items_map_1_37 map_1_0) i_15_0))))
        /\
        (Int32.(=)
        (select __anonstruct_Value_22_d_items_80
        (select __anonstruct_Item_23_value_2_items_80
        (shift (select __anonstruct_Map_24_items_map_1_37 map_1_0) i_15_0)))
        (select __anonstruct_Value_22_d_items_80
        (select __anonstruct_Item_23_value_2_items_80
        (shift (select __anonstruct_Map_24_items_map_1_37 map_1_0) i_15_0)))))))))))
     /\
     (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 116 12 53#
     "expl:Ensures clause"
     ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 124 12 28#
      "expl:Ensures clause" ((=) key_0_0 key_0_0))
     /\
     (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 125 12 29#
     "expl:Ensures clause"
     (is_valid_map map_1_0 voidP_items_80_alloc_table
     __anonstruct_Value_22_items_80_alloc_table
     __anonstruct_Map_24_map_1_37_alloc_table
     __anonstruct_Key_21_items_80_alloc_table
     __anonstruct_Map_24_count_map_1_37 __anonstruct_Map_24_capacity_map_1_37
     __anonstruct_Map_24_items_map_1_37
     __anonstruct_Item_23_existent_items_80
     __anonstruct_Item_23_value_2_items_80
     __anonstruct_Item_23_key_2_items_80 __anonstruct_Key_21_b_items_80
     __anonstruct_Key_21_a_items_80))))))))))))))))) } diverges  ->
   'Init:
   (let return = ref (Unsafe_int32.any_  () ) in
   try
    begin
    (let i_0_0_0 = ref (Unsafe_int32.any_  () ) in
    (let tmp_0 = ref (Unsafe_int32.any_  () ) in
    (let __retres_0 = ref (Unsafe_int32.any_  () ) in
    try
     begin
     try
      begin
      (i_0_0_0 :=
       (#"map_c.jc" 810 28 40# "expl:Integer cast" (Unsafe_int32.of_int (0))));
       'LoopEntry:
       begin
       'LoopEntry:
       'Loop_5:
       loop
       invariant
         { (((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 129 24 47#
             (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 129 24 47#
             ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 129 24 30#
              (Int32.(<=) (#"map_c.jc" 814 43 55# "expl:Integer cast"
              (Int32.of_int (0))) !i_0_0_0))
             /\
             (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 129 29 47#
             (Int32.(<=) !i_0_0_0
             (select __anonstruct_Map_24_capacity_map_1_37 map_1_0))))))
            &&
            ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 130 23 40#
             (is_valid_map map_1_0 voidP_items_80_alloc_table
             __anonstruct_Value_22_items_80_alloc_table
             __anonstruct_Map_24_map_1_37_alloc_table
             __anonstruct_Key_21_items_80_alloc_table
             __anonstruct_Map_24_count_map_1_37
             __anonstruct_Map_24_capacity_map_1_37
             __anonstruct_Map_24_items_map_1_37
             __anonstruct_Item_23_existent_items_80
             __anonstruct_Item_23_value_2_items_80
             __anonstruct_Item_23_key_2_items_80
             __anonstruct_Key_21_b_items_80 __anonstruct_Key_21_a_items_80))
            &&
            ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 131 23 40#
             (Int32.(>)
             (select __anonstruct_Map_24_capacity_map_1_37 map_1_0)
             (#"map_c.jc" 819 49 61# "expl:Integer cast" (Int32.of_int (0)))))
            &&
            ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 132 23 66#
             (if
              ((<=) (0)
              (Int.(-)
              (Int32.to_int
              (select __anonstruct_Map_24_capacity_map_1_37 map_1_0)) (1)))
              then
              (((<=)
               (offset_min voidP_items_80_alloc_table
               (select __anonstruct_Map_24_items_map_1_37 map_1_0)) (0))
              /\
              (((>=)
               (offset_max voidP_items_80_alloc_table
               (select __anonstruct_Map_24_items_map_1_37 map_1_0))
               (Int.(-)
               (Int32.to_int
               (select __anonstruct_Map_24_capacity_map_1_37 map_1_0)) (1)))
              /\
              (forall __framac_tmp18 : int.
               ((((<=) (0) __framac_tmp18) /\
                ((<=) __framac_tmp18
                (Int.(-)
                (Int32.to_int
                (select __anonstruct_Map_24_capacity_map_1_37 map_1_0)) (1))))
                ->
                (((<=)
                 (offset_min __anonstruct_Key_21_items_80_alloc_table
                 (select __anonstruct_Item_23_key_2_items_80
                 (shift (select __anonstruct_Map_24_items_map_1_37 map_1_0)
                 __framac_tmp18))) (0))
                /\
                (((>=)
                 (offset_max __anonstruct_Key_21_items_80_alloc_table
                 (select __anonstruct_Item_23_key_2_items_80
                 (shift (select __anonstruct_Map_24_items_map_1_37 map_1_0)
                 __framac_tmp18))) (0))
                /\
                (((=) true true) /\
                (((<=)
                 (offset_min __anonstruct_Value_22_items_80_alloc_table
                 (select __anonstruct_Item_23_value_2_items_80
                 (shift (select __anonstruct_Map_24_items_map_1_37 map_1_0)
                 __framac_tmp18))) (0))
                /\
                (((>=)
                 (offset_max __anonstruct_Value_22_items_80_alloc_table
                 (select __anonstruct_Item_23_value_2_items_80
                 (shift (select __anonstruct_Map_24_items_map_1_37 map_1_0)
                 __framac_tmp18))) (0))
                /\ ((=) true true)))))))))) else ((=) true true)))
            &&
            ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 133 23 63#
             (Int32.(=)
             (select __anonstruct_Map_24_capacity_map_1_37 map_1_0)
             (select __anonstruct_Map_24_capacity_map_1_37 map_1_0)))
            &&
            (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 134 23 57#
            (Int32.(=) (select __anonstruct_Map_24_count_map_1_37 map_1_0)
            (select __anonstruct_Map_24_count_map_1_37 map_1_0))))))))
           /\
           (#"map_c.jc" 812 9 5974#
           ((#"map_c.jc" 772 10 32# "expl:Assigns clause"
            (not_assigns __anonstruct_Value_22_value_0_39_alloc_table
            __anonstruct_Value_22_value_0_39_alloc_table (at
            !__anonstruct_Value_22_c_value_0_39 'Init)
            !__anonstruct_Value_22_c_value_0_39 (pset_singleton value_0)))
           /\
           (#"map_c.jc" 772 10 32# "expl:Assigns clause"
           (not_assigns __anonstruct_Value_22_value_0_39_alloc_table
           __anonstruct_Value_22_value_0_39_alloc_table (at
           !__anonstruct_Value_22_d_value_0_39 'Init)
           !__anonstruct_Value_22_d_value_0_39 (pset_singleton value_0)))))) }
         
        begin
        any unit requires { true } ensures { true } ;
         try
          begin
          'LoopCurrent:
          begin
          'LoopCurrent:
          (if
          (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 141 20 37#
          (Unsafe_int32.(<)  !i_0_0_0
           (acc  __anonstruct_Map_24_capacity_map_1_37 map_1_0 ) )) then ()
          else (raise (Goto_while_0_break_0_0_exc ())));
           (if
           (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 142 12 34#
           (Unsafe_int32.(<>) 
            (acc  __anonstruct_Item_23_existent_items_80
             (shift_  (acc  __anonstruct_Map_24_items_map_1_37 map_1_0 )
              (Unsafe_int32.to_int  !i_0_0_0 ) ) )
            (#"map_c.jc" 873 34 46# "expl:Integer cast"
            (Unsafe_int32.of_int (0))) ))
           then
            begin
            (tmp_0 :=
             (let _jessie_244 =
             (acc  __anonstruct_Item_23_key_2_items_80
              (shift_  (acc  __anonstruct_Map_24_items_map_1_37 map_1_0 )
               (Unsafe_int32.to_int  !i_0_0_0 ) ) ) in
             (let _jessie_243 = key_0_0 in
             (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 142 38 74#
             "expl:Precondition for compareKeys"
             (Function_compareKeys.compareKeys  _jessie_244 _jessie_243
              __anonstruct_Key_21_key_0_38_alloc_table
              __anonstruct_Key_21_items_80_alloc_table
              __anonstruct_Key_21_b_key_0_38 __anonstruct_Key_21_b_items_80
              __anonstruct_Key_21_a_key_0_38 __anonstruct_Key_21_a_items_80 )))));
             (if
             (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.c" 142 38 74#
             (Unsafe_int32.(<>)  !tmp_0
              (#"map_c.jc" 879 56 68# "expl:Integer cast"
              (Unsafe_int32.of_int (0))) ))
             then
              begin
              (let _jessie_252 =
              (acc  __anonstruct_Value_22_c_items_80
               (acc  __anonstruct_Item_23_value_2_items_80
                (shift_  (acc  __anonstruct_Map_24_items_map_1_37 map_1_0 )
                 (Unsafe_int32.to_int  !i_0_0_0 ) ) ) ) in
              (let _jessie_253 = value_0 in
              (let _jessie_254 = (0) in
              (let _jessie_255 = _jessie_253 in
              (upd  __anonstruct_Value_22_c_value_0_39 _jessie_255
               _jessie_252 )))));
               begin
               (let _jessie_247 =
               (acc  __anonstruct_Value_22_d_items_80
                (acc  __anonstruct_Item_23_value_2_items_80
                 (shift_  (acc  __anonstruct_Map_24_items_map_1_37 map_1_0 )
                  (Unsafe_int32.to_int  !i_0_0_0 ) ) ) ) in
               (let _jessie_248 = value_0 in
               (let _jessie_249 = (0) in
               (let _jessie_250 = _jessie_248 in
               (upd  __anonstruct_Value_22_d_value_0_39 _jessie_250
                _jessie_247 )))));
                begin
                (__retres_0 :=
                 (#"map_c.jc" 889 51 63# "expl:Integer cast"
                 (Unsafe_int32.of_int (1))));
                 (raise (Goto_return_label_0_exc ())) end end end else ())
            end else ());
           (i_0_0_0 :=
            (Unsafe_int32.(+)  !i_0_0_0
             (#"map_c.jc" 896 64 76# "expl:Integer cast"
             (Unsafe_int32.of_int (1))) )) end;
           (raise (Loop_continue_exc ())) end with Loop_continue_exc
          _jessie_11 -> () end end end;
        (raise (Goto_while_0_break_0_0_exc ())) end end with
      Goto_while_0_break_0_0_exc _jessie_8 ->
      'While_0_break_0_0: 'While_0_break_0_0: () end;
      begin
      (__retres_0 :=
       (#"map_c.jc" 901 30 42# "expl:Integer cast" (Unsafe_int32.of_int (0))));
       (raise (Goto_return_label_0_exc ())) end end with
     Goto_return_label_0_exc _jessie_9 ->
     'Return_label_0:
     'Return_label_0: begin (return := !__retres_0); (raise Return) end end)));
     absurd  end with Return -> !return end)
  
end

theory Axiomatic_CountLem

  use import core.Voidp 
  
  use import Root___anonstruct_Value_22 
  
  use import Root___anonstruct_Map_24 
  
  use import Root___anonstruct_Key_21 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_valid_map 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import Axiomatic_ItemsCount 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  lemma Lemma1_count_split
  #"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/maptypes.h" 79 24 253#
  "expl:Lemma lemma1_count_split"  :
  (forall voidP_items_175_alloc_table_at_L : (alloc_table voidP).
   (forall __anonstruct_Value_22_items_175_alloc_table_at_L : (alloc_table
    __anonstruct_Value_22).
    (forall __anonstruct_Map_24_map_6_44_alloc_table_at_L : (alloc_table
     __anonstruct_Map_24).
     (forall __anonstruct_Key_21_items_175_alloc_table_at_L : (alloc_table
      __anonstruct_Key_21).
      (forall __anonstruct_Map_24_count_map_6_44_at_L : (memory
       __anonstruct_Map_24 Int32.t).
       (forall __anonstruct_Map_24_capacity_map_6_44_at_L : (memory
        __anonstruct_Map_24 Int32.t).
        (forall __anonstruct_Map_24_items_map_6_44_at_L : (memory
         __anonstruct_Map_24 (pointer voidP)).
         (forall __anonstruct_Item_23_existent_items_175_at_L : (memory voidP
          Int32.t).
          (forall __anonstruct_Item_23_value_2_items_175_at_L : (memory voidP
           (pointer __anonstruct_Value_22)).
           (forall __anonstruct_Item_23_key_2_items_175_at_L : (memory voidP
            (pointer __anonstruct_Key_21)).
            (forall __anonstruct_Key_21_b_items_175_at_L : (memory
             __anonstruct_Key_21 Int32.t).
             (forall __anonstruct_Key_21_a_items_175_at_L : (memory
              __anonstruct_Key_21 Int32.t).
              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/maptypes.h" 81 12 193#
              (forall map_6 : (pointer __anonstruct_Map_24).
               (forall i : int.
                (((is_valid_map map_6 voidP_items_175_alloc_table_at_L
                  __anonstruct_Value_22_items_175_alloc_table_at_L
                  __anonstruct_Map_24_map_6_44_alloc_table_at_L
                  __anonstruct_Key_21_items_175_alloc_table_at_L
                  __anonstruct_Map_24_count_map_6_44_at_L
                  __anonstruct_Map_24_capacity_map_6_44_at_L
                  __anonstruct_Map_24_items_map_6_44_at_L
                  __anonstruct_Item_23_existent_items_175_at_L
                  __anonstruct_Item_23_value_2_items_175_at_L
                  __anonstruct_Item_23_key_2_items_175_at_L
                  __anonstruct_Key_21_b_items_175_at_L
                  __anonstruct_Key_21_a_items_175_at_L)
                 /\
                 (((<) (0) i) /\
                 ((<) i
                 (Int32.to_int
                 (select __anonstruct_Map_24_capacity_map_6_44_at_L map_6)))))
                 ->
                 ((=)
                 (count map_6 (0) i __anonstruct_Map_24_items_map_6_44_at_L
                 __anonstruct_Item_23_existent_items_175_at_L)
                 (Int.(+)
                 (count map_6 (0) (Int.(-) i (1))
                 __anonstruct_Map_24_items_map_6_44_at_L
                 __anonstruct_Item_23_existent_items_175_at_L)
                 (count map_6 (Int.(-) i (1)) i
                 __anonstruct_Map_24_items_map_6_44_at_L
                 __anonstruct_Item_23_existent_items_175_at_L)))))))))))))))))))
  
  lemma Lemma2_count_split
  #"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/maptypes.h" 83 86 322#
  "expl:Lemma lemma2_count_split"  :
  (forall voidP_items_167_alloc_table_at_L : (alloc_table voidP).
   (forall __anonstruct_Value_22_items_167_alloc_table_at_L : (alloc_table
    __anonstruct_Value_22).
    (forall __anonstruct_Map_24_map_7_45_alloc_table_at_L : (alloc_table
     __anonstruct_Map_24).
     (forall __anonstruct_Key_21_items_167_alloc_table_at_L : (alloc_table
      __anonstruct_Key_21).
      (forall __anonstruct_Map_24_count_map_7_45_at_L : (memory
       __anonstruct_Map_24 Int32.t).
       (forall __anonstruct_Map_24_capacity_map_7_45_at_L : (memory
        __anonstruct_Map_24 Int32.t).
        (forall __anonstruct_Map_24_items_map_7_45_at_L : (memory
         __anonstruct_Map_24 (pointer voidP)).
         (forall __anonstruct_Item_23_existent_items_167_at_L : (memory voidP
          Int32.t).
          (forall __anonstruct_Item_23_value_2_items_167_at_L : (memory voidP
           (pointer __anonstruct_Value_22)).
           (forall __anonstruct_Item_23_key_2_items_167_at_L : (memory voidP
            (pointer __anonstruct_Key_21)).
            (forall __anonstruct_Key_21_b_items_167_at_L : (memory
             __anonstruct_Key_21 Int32.t).
             (forall __anonstruct_Key_21_a_items_167_at_L : (memory
              __anonstruct_Key_21 Int32.t).
              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/maptypes.h" 86 12 199#
              (forall map_7 : (pointer __anonstruct_Map_24).
               (forall i_0 : int.
                (forall j : int.
                 (((is_valid_map map_7 voidP_items_167_alloc_table_at_L
                   __anonstruct_Value_22_items_167_alloc_table_at_L
                   __anonstruct_Map_24_map_7_45_alloc_table_at_L
                   __anonstruct_Key_21_items_167_alloc_table_at_L
                   __anonstruct_Map_24_count_map_7_45_at_L
                   __anonstruct_Map_24_capacity_map_7_45_at_L
                   __anonstruct_Map_24_items_map_7_45_at_L
                   __anonstruct_Item_23_existent_items_167_at_L
                   __anonstruct_Item_23_value_2_items_167_at_L
                   __anonstruct_Item_23_key_2_items_167_at_L
                   __anonstruct_Key_21_b_items_167_at_L
                   __anonstruct_Key_21_a_items_167_at_L)
                  /\
                  (((<) (0) i_0) /\
                  (((<) i_0 j) /\
                  ((<) j
                  (Int32.to_int
                  (select __anonstruct_Map_24_capacity_map_7_45_at_L map_7))))))
                  ->
                  ((=)
                  (count map_7 (0) j __anonstruct_Map_24_items_map_7_45_at_L
                  __anonstruct_Item_23_existent_items_167_at_L)
                  (Int.(+)
                  (count map_7 (0) i_0
                  __anonstruct_Map_24_items_map_7_45_at_L
                  __anonstruct_Item_23_existent_items_167_at_L)
                  (count map_7 i_0 j __anonstruct_Map_24_items_map_7_45_at_L
                  __anonstruct_Item_23_existent_items_167_at_L))))))))))))))))))))
  
  lemma Lemma3_count_split
  #"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/maptypes.h" 88 78 286#
  "expl:Lemma lemma3_count_split"  :
  (forall __anonstruct_Map_24_items_map_8_46_at_L : (memory
   __anonstruct_Map_24 (pointer voidP)).
   (forall __anonstruct_Item_23_existent_items_159_at_L : (memory voidP
    Int32.t).
    (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/maptypes.h" 91 12 170#
    (forall map_8 : (pointer __anonstruct_Map_24).
     (forall m_5 : int.
      (forall n_5 : int.
       (forall k_3 : int.
        ((((<=) m_5 n_5) /\ ((<=) n_5 k_3)) ->
         ((count_split_p map_8 m_5 n_5 k_3
          __anonstruct_Map_24_items_map_8_46_at_L
          __anonstruct_Item_23_existent_items_159_at_L)
         /\
         ((=)
         (count map_8 m_5 k_3 __anonstruct_Map_24_items_map_8_46_at_L
         __anonstruct_Item_23_existent_items_159_at_L)
         (Int.(+)
         (count map_8 m_5 n_5 __anonstruct_Map_24_items_map_8_46_at_L
         __anonstruct_Item_23_existent_items_159_at_L)
         (count map_8 n_5 k_3 __anonstruct_Map_24_items_map_8_46_at_L
         __anonstruct_Item_23_existent_items_159_at_L))))))))))))
  
  lemma Lemma_count_one_p
  #"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/maptypes.h" 92 123 354#
  "expl:Lemma lemma_count_one_p"  :
  (forall voidP_items_48_alloc_table_at_L : (alloc_table voidP).
   (forall __anonstruct_Value_22_items_48_alloc_table_at_L : (alloc_table
    __anonstruct_Value_22).
    (forall __anonstruct_Map_24_map_9_47_alloc_table_at_L : (alloc_table
     __anonstruct_Map_24).
     (forall __anonstruct_Key_21_items_48_alloc_table_at_L : (alloc_table
      __anonstruct_Key_21).
      (forall __anonstruct_Map_24_count_map_9_47_at_L : (memory
       __anonstruct_Map_24 Int32.t).
       (forall __anonstruct_Map_24_capacity_map_9_47_at_L : (memory
        __anonstruct_Map_24 Int32.t).
        (forall __anonstruct_Map_24_items_map_9_47_at_L : (memory
         __anonstruct_Map_24 (pointer voidP)).
         (forall __anonstruct_Item_23_existent_items_48_at_L : (memory voidP
          Int32.t).
          (forall __anonstruct_Item_23_value_2_items_48_at_L : (memory voidP
           (pointer __anonstruct_Value_22)).
           (forall __anonstruct_Item_23_key_2_items_48_at_L : (memory voidP
            (pointer __anonstruct_Key_21)).
            (forall __anonstruct_Key_21_b_items_48_at_L : (memory
             __anonstruct_Key_21 Int32.t).
             (forall __anonstruct_Key_21_a_items_48_at_L : (memory
              __anonstruct_Key_21 Int32.t).
              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/maptypes.h" 95 12 187#
              (forall map_9 : (pointer __anonstruct_Map_24).
               (forall i_1 : int.
                ((is_valid_map map_9 voidP_items_48_alloc_table_at_L
                 __anonstruct_Value_22_items_48_alloc_table_at_L
                 __anonstruct_Map_24_map_9_47_alloc_table_at_L
                 __anonstruct_Key_21_items_48_alloc_table_at_L
                 __anonstruct_Map_24_count_map_9_47_at_L
                 __anonstruct_Map_24_capacity_map_9_47_at_L
                 __anonstruct_Map_24_items_map_9_47_at_L
                 __anonstruct_Item_23_existent_items_48_at_L
                 __anonstruct_Item_23_value_2_items_48_at_L
                 __anonstruct_Item_23_key_2_items_48_at_L
                 __anonstruct_Key_21_b_items_48_at_L
                 __anonstruct_Key_21_a_items_48_at_L) ->
                 ((count_one_p map_9 i_1
                  __anonstruct_Map_24_items_map_9_47_at_L
                  __anonstruct_Item_23_existent_items_48_at_L)
                 /\
                 ((=)
                 (count map_9 i_1 (Int.(+) i_1 (1))
                 __anonstruct_Map_24_items_map_9_47_at_L
                 __anonstruct_Item_23_existent_items_48_at_L)
                 (if
                  ((<>)
                  (Int32.to_int
                  (select __anonstruct_Item_23_existent_items_48_at_L
                  (shift
                  (select __anonstruct_Map_24_items_map_9_47_at_L map_9) i_1)))
                  (0)) then (1) else (0))))))))))))))))))))
  
  lemma Lemma1_count_positive
  #"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/maptypes.h" 97 109 301#
  "expl:Lemma lemma1_count_positive"  :
  (forall __anonstruct_Map_24_items_map_10_49_at_L : (memory
   __anonstruct_Map_24 (pointer voidP)).
   (forall __anonstruct_Item_23_existent_items_50_at_L : (memory voidP
    Int32.t).
    (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/maptypes.h" 100 12 150#
    (forall map_10 : (pointer __anonstruct_Map_24).
     (forall i_2 : int.
      (((Int32.(=)
        (select __anonstruct_Item_23_existent_items_50_at_L
        (shift (select __anonstruct_Map_24_items_map_10_49_at_L map_10) i_2))
        (#"map_c.jc" 123 50 62# "expl:Integer cast" (Int32.of_int (0))))
       \/
       (Int32.(=)
       (select __anonstruct_Item_23_existent_items_50_at_L
       (shift (select __anonstruct_Map_24_items_map_10_49_at_L map_10) i_2))
       (#"map_c.jc" 124 51 63# "expl:Integer cast" (Int32.of_int (1))))) ->
       ((>=)
       (count map_10 i_2 (Int.(+) i_2 (1))
       __anonstruct_Map_24_items_map_10_49_at_L
       __anonstruct_Item_23_existent_items_50_at_L) (0))))))))
  
  lemma Lemma2_count_positive
  #"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/maptypes.h" 101 109 258#
  "expl:Lemma lemma2_count_positive"  :
  (forall voidP_items_147_alloc_table_at_L : (alloc_table voidP).
   (forall __anonstruct_Value_22_items_147_alloc_table_at_L : (alloc_table
    __anonstruct_Value_22).
    (forall __anonstruct_Map_24_map_11_51_alloc_table_at_L : (alloc_table
     __anonstruct_Map_24).
     (forall __anonstruct_Key_21_items_147_alloc_table_at_L : (alloc_table
      __anonstruct_Key_21).
      (forall __anonstruct_Map_24_count_map_11_51_at_L : (memory
       __anonstruct_Map_24 Int32.t).
       (forall __anonstruct_Map_24_capacity_map_11_51_at_L : (memory
        __anonstruct_Map_24 Int32.t).
        (forall __anonstruct_Map_24_items_map_11_51_at_L : (memory
         __anonstruct_Map_24 (pointer voidP)).
         (forall __anonstruct_Item_23_existent_items_147_at_L : (memory voidP
          Int32.t).
          (forall __anonstruct_Item_23_value_2_items_147_at_L : (memory voidP
           (pointer __anonstruct_Value_22)).
           (forall __anonstruct_Item_23_key_2_items_147_at_L : (memory voidP
            (pointer __anonstruct_Key_21)).
            (forall __anonstruct_Key_21_b_items_147_at_L : (memory
             __anonstruct_Key_21 Int32.t).
             (forall __anonstruct_Key_21_a_items_147_at_L : (memory
              __anonstruct_Key_21 Int32.t).
              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/maptypes.h" 104 12 101#
              (forall map_11 : (pointer __anonstruct_Map_24).
               ((is_valid_map map_11 voidP_items_147_alloc_table_at_L
                __anonstruct_Value_22_items_147_alloc_table_at_L
                __anonstruct_Map_24_map_11_51_alloc_table_at_L
                __anonstruct_Key_21_items_147_alloc_table_at_L
                __anonstruct_Map_24_count_map_11_51_at_L
                __anonstruct_Map_24_capacity_map_11_51_at_L
                __anonstruct_Map_24_items_map_11_51_at_L
                __anonstruct_Item_23_existent_items_147_at_L
                __anonstruct_Item_23_value_2_items_147_at_L
                __anonstruct_Item_23_key_2_items_147_at_L
                __anonstruct_Key_21_b_items_147_at_L
                __anonstruct_Key_21_a_items_147_at_L) ->
                ((>=)
                (count map_11 (0)
                (Int32.to_int
                (select __anonstruct_Map_24_capacity_map_11_51_at_L map_11))
                __anonstruct_Map_24_items_map_11_51_at_L
                __anonstruct_Item_23_existent_items_147_at_L) (0)))))))))))))))))
  
  lemma Lemma3_count_positive
  #"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/maptypes.h" 105 72 234#
  "expl:Lemma lemma3_count_positive"  :
  (forall voidP_items_143_alloc_table_at_L : (alloc_table voidP).
   (forall __anonstruct_Value_22_items_143_alloc_table_at_L : (alloc_table
    __anonstruct_Value_22).
    (forall __anonstruct_Map_24_map_12_52_alloc_table_at_L : (alloc_table
     __anonstruct_Map_24).
     (forall __anonstruct_Key_21_items_143_alloc_table_at_L : (alloc_table
      __anonstruct_Key_21).
      (forall __anonstruct_Map_24_count_map_12_52_at_L : (memory
       __anonstruct_Map_24 Int32.t).
       (forall __anonstruct_Map_24_capacity_map_12_52_at_L : (memory
        __anonstruct_Map_24 Int32.t).
        (forall __anonstruct_Map_24_items_map_12_52_at_L : (memory
         __anonstruct_Map_24 (pointer voidP)).
         (forall __anonstruct_Item_23_existent_items_143_at_L : (memory voidP
          Int32.t).
          (forall __anonstruct_Item_23_value_2_items_143_at_L : (memory voidP
           (pointer __anonstruct_Value_22)).
           (forall __anonstruct_Item_23_key_2_items_143_at_L : (memory voidP
            (pointer __anonstruct_Key_21)).
            (forall __anonstruct_Key_21_b_items_143_at_L : (memory
             __anonstruct_Key_21 Int32.t).
             (forall __anonstruct_Key_21_a_items_143_at_L : (memory
              __anonstruct_Key_21 Int32.t).
              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/maptypes.h" 108 12 122#
              (forall map_12 : (pointer __anonstruct_Map_24).
               (((is_valid_map map_12 voidP_items_143_alloc_table_at_L
                 __anonstruct_Value_22_items_143_alloc_table_at_L
                 __anonstruct_Map_24_map_12_52_alloc_table_at_L
                 __anonstruct_Key_21_items_143_alloc_table_at_L
                 __anonstruct_Map_24_count_map_12_52_at_L
                 __anonstruct_Map_24_capacity_map_12_52_at_L
                 __anonstruct_Map_24_items_map_12_52_at_L
                 __anonstruct_Item_23_existent_items_143_at_L
                 __anonstruct_Item_23_value_2_items_143_at_L
                 __anonstruct_Item_23_key_2_items_143_at_L
                 __anonstruct_Key_21_b_items_143_at_L
                 __anonstruct_Key_21_a_items_143_at_L)
                /\
                ((>=)
                (count map_12 (0)
                (Int32.to_int
                (select __anonstruct_Map_24_capacity_map_12_52_at_L map_12))
                __anonstruct_Map_24_items_map_12_52_at_L
                __anonstruct_Item_23_existent_items_143_at_L) (0))) ->
                (Int32.(>=)
                (select __anonstruct_Map_24_count_map_12_52_at_L map_12)
                (#"map_c.jc" 136 32 44# "expl:Integer cast" (Int32.of_int
                (0)))))))))))))))))))
  
end

theory Logic_type_padding

  use why3.Bool.Bool 
  
  type padding 
  
end

theory Struct___anonstruct_Map_24

  use import core.Tag_table_type 
  
  use import core.Tag_table 
  
  use import core.Tag_id 
  
  use import core.Tag 
  
  use import Root___anonstruct_Map_24 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use import core.Alloc 
  
  use why3.Bool.Bool 
  
  function __anonstruct_Map_24_tag  : (tag_id
  __anonstruct_Map_24)
  
  axiom U___anonstruct_Map_24_parenttag_bottom  :
  (parenttag __anonstruct_Map_24_tag bottom_tag)
  
  axiom U___anonstruct_Map_24_is_final  :
  (forall __anonstruct_Map_24_tag_table : (tag_table __anonstruct_Map_24).
   (forall p : (pointer __anonstruct_Map_24).
    ((instanceof __anonstruct_Map_24_tag_table p __anonstruct_Map_24_tag) ->
     ((=) (typeof __anonstruct_Map_24_tag_table p) __anonstruct_Map_24_tag))))
  
  predicate frame_tag_struct___anonstruct_Map_24 (p : (pointer
  __anonstruct_Map_24)) (old___anonstruct_Map_24_tag_table : (tag_table
  __anonstruct_Map_24)) (__anonstruct_Map_24_tag_table : (tag_table
  __anonstruct_Map_24))
  =
     ((tag_extends old___anonstruct_Map_24_tag_table
      __anonstruct_Map_24_tag_table)
     /\
     (alloc_tag_block old___anonstruct_Map_24_tag_table
     __anonstruct_Map_24_tag_table p))
  
  predicate frame_free_struct___anonstruct_Map_24 (p : (pointer
  __anonstruct_Map_24)) (old___anonstruct_Map_24_alloc_table : (alloc_table
  __anonstruct_Map_24)) (__anonstruct_Map_24_alloc_table : (alloc_table
  __anonstruct_Map_24))
  =
     ((free_extends old___anonstruct_Map_24_alloc_table
      __anonstruct_Map_24_alloc_table)
     /\
     (free_block old___anonstruct_Map_24_alloc_table
     __anonstruct_Map_24_alloc_table p))
  
  predicate frame_alloc_struct___anonstruct_Map_24 (p : (pointer
  __anonstruct_Map_24)) (n : int) (old___anonstruct_Map_24_alloc_table :
  (alloc_table __anonstruct_Map_24)) (__anonstruct_Map_24_alloc_table :
  (alloc_table __anonstruct_Map_24))
  =
     ((alloc_extends old___anonstruct_Map_24_alloc_table
      __anonstruct_Map_24_alloc_table)
     /\
     (alloc_block old___anonstruct_Map_24_alloc_table
     __anonstruct_Map_24_alloc_table p n))
  
  predicate fresh_tag_struct___anonstruct_Map_24 (p : (pointer
  __anonstruct_Map_24)) (n : int) (__anonstruct_Map_24_tag_table : (tag_table
  __anonstruct_Map_24))
  = (tag_fresh __anonstruct_Map_24_tag_table p)
  
  predicate fresh_alloc_struct___anonstruct_Map_24 (p : (pointer
  __anonstruct_Map_24)) (n : int) (__anonstruct_Map_24_alloc_table :
  (alloc_table __anonstruct_Map_24))
  = (alloc_fresh __anonstruct_Map_24_alloc_table p)
  
  predicate container_of_singleton_struct___anonstruct_Map_24 (p : (pointer
  __anonstruct_Map_24)) (__anonstruct_Map_24_tag_table : (tag_table
  __anonstruct_Map_24)) = true
  
  predicate container_of_struct___anonstruct_Map_24 (p : (pointer
  __anonstruct_Map_24)) (l : int) (r : int) (__anonstruct_Map_24_tag_table :
  (tag_table __anonstruct_Map_24)) = true
  
  predicate typeof_singleton_struct___anonstruct_Map_24 (p : (pointer
  __anonstruct_Map_24)) (__anonstruct_Map_24_tag_table : (tag_table
  __anonstruct_Map_24))
  = ((=) (typeof __anonstruct_Map_24_tag_table p) __anonstruct_Map_24_tag)
  
  predicate typeof_struct___anonstruct_Map_24 (p : (pointer
  __anonstruct_Map_24)) (l : int) (r : int) (__anonstruct_Map_24_tag_table :
  (tag_table __anonstruct_Map_24))
  =
     (((=) (typeof __anonstruct_Map_24_tag_table p) __anonstruct_Map_24_tag)
     /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       ((=) (typeof __anonstruct_Map_24_tag_table (shift p i))
       __anonstruct_Map_24_tag))))
  
  predicate instanceof_singleton_struct___anonstruct_Map_24 (p : (pointer
  __anonstruct_Map_24)) (__anonstruct_Map_24_tag_table : (tag_table
  __anonstruct_Map_24))
  = (instanceof __anonstruct_Map_24_tag_table p __anonstruct_Map_24_tag)
  
  predicate instanceof_struct___anonstruct_Map_24 (p : (pointer
  __anonstruct_Map_24)) (l : int) (r : int) (__anonstruct_Map_24_tag_table :
  (tag_table __anonstruct_Map_24))
  =
     ((instanceof __anonstruct_Map_24_tag_table p __anonstruct_Map_24_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       (instanceof __anonstruct_Map_24_tag_table (shift p i)
       __anonstruct_Map_24_tag))))
  
  predicate right_valid_struct___anonstruct_Map_24 (p : (pointer
  __anonstruct_Map_24)) (b : int) (__anonstruct_Map_24_alloc_table :
  (alloc_table __anonstruct_Map_24))
  = ((>=) (offset_max __anonstruct_Map_24_alloc_table p) b)
  
  predicate left_valid_struct___anonstruct_Map_24 (p : (pointer
  __anonstruct_Map_24)) (a : int) (__anonstruct_Map_24_alloc_table :
  (alloc_table __anonstruct_Map_24))
  = ((<=) (offset_min __anonstruct_Map_24_alloc_table p) a)
  
  predicate strict_left_valid_struct___anonstruct_Map_24 (p : (pointer
  __anonstruct_Map_24)) (a : int) (__anonstruct_Map_24_alloc_table :
  (alloc_table __anonstruct_Map_24))
  = ((=) (offset_min __anonstruct_Map_24_alloc_table p) a)
  
  predicate valid_struct___anonstruct_Map_24 (p : (pointer
  __anonstruct_Map_24)) (a : int) (b : int) (__anonstruct_Map_24_alloc_table
  : (alloc_table __anonstruct_Map_24))
  =
     (((<=) (offset_min __anonstruct_Map_24_alloc_table p) a) /\
     ((>=) (offset_max __anonstruct_Map_24_alloc_table p) b))
  
  predicate strict_valid_struct___anonstruct_Map_24 (p : (pointer
  __anonstruct_Map_24)) (a : int) (b : int) (__anonstruct_Map_24_alloc_table
  : (alloc_table __anonstruct_Map_24))
  =
     (((=) (offset_min __anonstruct_Map_24_alloc_table p) a) /\
     ((=) (offset_max __anonstruct_Map_24_alloc_table p) b))
  
  axiom U___anonstruct_Map_24_int  :
  ((=) (int_of_tag __anonstruct_Map_24_tag) (6))
  
end

module Struct___anonstruct_Map_24_unsafe

  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Map_24 
  
  use import Root___anonstruct_Map_24 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val free_struct___anonstruct_Map_24
  (p : (pointer __anonstruct_Map_24)) 
   (__anonstruct_Map_24_alloc_table : ref (alloc_table
    __anonstruct_Map_24)) : unit
    requires {
      (("expl:Deallocation" ((=) p null)) \/
      (freeable !__anonstruct_Map_24_alloc_table p)) }
    writes { __anonstruct_Map_24_alloc_table }
    ensures {
      ((((=) p null) /\
       ((=) !__anonstruct_Map_24_alloc_table (old
       !__anonstruct_Map_24_alloc_table)))
      \/
      ((frame_free_struct___anonstruct_Map_24 p (old
       !__anonstruct_Map_24_alloc_table) !__anonstruct_Map_24_alloc_table)
      /\
      (fresh_alloc_struct___anonstruct_Map_24 p
      (offset_max (old !__anonstruct_Map_24_alloc_table) p)
      !__anonstruct_Map_24_alloc_table))) }
  
  val allocate_struct___anonstruct_Map_24_requires
  (n : int) 
   (__anonstruct_Map_24_alloc_table : ref (alloc_table __anonstruct_Map_24)) 
    (__anonstruct_Map_24_tag_table : ref (tag_table __anonstruct_Map_24)) :
     (pointer __anonstruct_Map_24)
     requires { ((>=) n (0)) } writes { __anonstruct_Map_24_alloc_table,
     __anonstruct_Map_24_tag_table }
     ensures {
       ((strict_valid_struct___anonstruct_Map_24 result (0) (Int.(-) n (1))
        !__anonstruct_Map_24_alloc_table)
       /\
       ((frame_alloc_struct___anonstruct_Map_24 result n (old
        !__anonstruct_Map_24_alloc_table) !__anonstruct_Map_24_alloc_table)
       /\
       ((frame_tag_struct___anonstruct_Map_24 result (old
        !__anonstruct_Map_24_tag_table) !__anonstruct_Map_24_tag_table)
       /\
       ((fresh_alloc_struct___anonstruct_Map_24 result (Int.(-) n (1)) (old
        !__anonstruct_Map_24_alloc_table))
       /\
       ((fresh_tag_struct___anonstruct_Map_24 result (Int.(-) n (1)) (old
        !__anonstruct_Map_24_tag_table))
       /\
       ((typeof_struct___anonstruct_Map_24 result (0) n
        !__anonstruct_Map_24_tag_table)
       /\
       (container_of_struct___anonstruct_Map_24 result (0) n
       !__anonstruct_Map_24_tag_table))))))) }
  
end

module Struct___anonstruct_Map_24_safe

  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Map_24 
  
  use import Root___anonstruct_Map_24 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val safe_free_struct___anonstruct_Map_24
  (p : (pointer __anonstruct_Map_24)) 
   (__anonstruct_Map_24_alloc_table : ref (alloc_table
    __anonstruct_Map_24)) : unit
    requires { true } writes { __anonstruct_Map_24_alloc_table }
    ensures {
      ((((=) p null) /\
       ((=) !__anonstruct_Map_24_alloc_table (old
       !__anonstruct_Map_24_alloc_table)))
      \/
      ((frame_free_struct___anonstruct_Map_24 p (old
       !__anonstruct_Map_24_alloc_table) !__anonstruct_Map_24_alloc_table)
      /\
      (fresh_alloc_struct___anonstruct_Map_24 p
      (offset_max (old !__anonstruct_Map_24_alloc_table) p)
      !__anonstruct_Map_24_alloc_table))) }
  
  val allocate_struct___anonstruct_Map_24
  (n : int) 
   (__anonstruct_Map_24_alloc_table : ref (alloc_table __anonstruct_Map_24)) 
    (__anonstruct_Map_24_tag_table : ref (tag_table __anonstruct_Map_24)) :
     (pointer __anonstruct_Map_24)
     requires { true } writes { __anonstruct_Map_24_alloc_table,
     __anonstruct_Map_24_tag_table }
     ensures {
       ((strict_valid_struct___anonstruct_Map_24 result (0) (Int.(-) n (1))
        !__anonstruct_Map_24_alloc_table)
       /\
       ((frame_alloc_struct___anonstruct_Map_24 result n (old
        !__anonstruct_Map_24_alloc_table) !__anonstruct_Map_24_alloc_table)
       /\
       ((frame_tag_struct___anonstruct_Map_24 result (old
        !__anonstruct_Map_24_tag_table) !__anonstruct_Map_24_tag_table)
       /\
       ((fresh_alloc_struct___anonstruct_Map_24 result (Int.(-) n (1)) (old
        !__anonstruct_Map_24_alloc_table))
       /\
       ((fresh_tag_struct___anonstruct_Map_24 result (Int.(-) n (1)) (old
        !__anonstruct_Map_24_tag_table))
       /\
       ((typeof_struct___anonstruct_Map_24 result (0) n
        !__anonstruct_Map_24_tag_table)
       /\
       (container_of_struct___anonstruct_Map_24 result (0) n
       !__anonstruct_Map_24_tag_table))))))) }
  
  val allocate_singleton_struct___anonstruct_Map_24
  (__anonstruct_Map_24_alloc_table : ref (alloc_table __anonstruct_Map_24)) 
   (__anonstruct_Map_24_tag_table : ref (tag_table __anonstruct_Map_24)) :
    (pointer __anonstruct_Map_24)
    requires { true } writes { __anonstruct_Map_24_alloc_table,
    __anonstruct_Map_24_tag_table }
    ensures {
      ((strict_valid_struct___anonstruct_Map_24 result (0) (0)
       !__anonstruct_Map_24_alloc_table)
      /\
      ((frame_alloc_struct___anonstruct_Map_24 result (1) (old
       !__anonstruct_Map_24_alloc_table) !__anonstruct_Map_24_alloc_table)
      /\
      ((frame_tag_struct___anonstruct_Map_24 result (old
       !__anonstruct_Map_24_tag_table) !__anonstruct_Map_24_tag_table)
      /\
      ((fresh_alloc_struct___anonstruct_Map_24 result (0) (old
       !__anonstruct_Map_24_alloc_table))
      /\
      ((fresh_tag_struct___anonstruct_Map_24 result (0) (old
       !__anonstruct_Map_24_tag_table))
      /\
      ((typeof_singleton_struct___anonstruct_Map_24 result
       !__anonstruct_Map_24_tag_table)
      /\
      (container_of_singleton_struct___anonstruct_Map_24 result
      !__anonstruct_Map_24_tag_table))))))) }
  
end

module Struct___anonstruct_Value_22_unsafe

  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Value_22 
  
  use import Root___anonstruct_Value_22 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val free_struct___anonstruct_Value_22
  (p : (pointer __anonstruct_Value_22)) 
   (__anonstruct_Value_22_alloc_table : ref (alloc_table
    __anonstruct_Value_22)) : unit
    requires {
      (("expl:Deallocation" ((=) p null)) \/
      (freeable !__anonstruct_Value_22_alloc_table p)) }
    writes { __anonstruct_Value_22_alloc_table }
    ensures {
      ((((=) p null) /\
       ((=) !__anonstruct_Value_22_alloc_table (old
       !__anonstruct_Value_22_alloc_table)))
      \/
      ((frame_free_struct___anonstruct_Value_22 p (old
       !__anonstruct_Value_22_alloc_table)
       !__anonstruct_Value_22_alloc_table)
      /\
      (fresh_alloc_struct___anonstruct_Value_22 p
      (offset_max (old !__anonstruct_Value_22_alloc_table) p)
      !__anonstruct_Value_22_alloc_table))) }
  
  val allocate_struct___anonstruct_Value_22_requires
  (n : int) 
   (__anonstruct_Value_22_alloc_table : ref (alloc_table
    __anonstruct_Value_22)) 
    (__anonstruct_Value_22_tag_table : ref (tag_table
     __anonstruct_Value_22)) : (pointer __anonstruct_Value_22)
     requires { ((>=) n (0)) } writes { __anonstruct_Value_22_alloc_table,
     __anonstruct_Value_22_tag_table }
     ensures {
       ((strict_valid_struct___anonstruct_Value_22 result (0) (Int.(-) n (1))
        !__anonstruct_Value_22_alloc_table)
       /\
       ((frame_alloc_struct___anonstruct_Value_22 result n (old
        !__anonstruct_Value_22_alloc_table)
        !__anonstruct_Value_22_alloc_table)
       /\
       ((frame_tag_struct___anonstruct_Value_22 result (old
        !__anonstruct_Value_22_tag_table) !__anonstruct_Value_22_tag_table)
       /\
       ((fresh_alloc_struct___anonstruct_Value_22 result (Int.(-) n (1)) (old
        !__anonstruct_Value_22_alloc_table))
       /\
       ((fresh_tag_struct___anonstruct_Value_22 result (Int.(-) n (1)) (old
        !__anonstruct_Value_22_tag_table))
       /\
       ((typeof_struct___anonstruct_Value_22 result (0) n
        !__anonstruct_Value_22_tag_table)
       /\
       (container_of_struct___anonstruct_Value_22 result (0) n
       !__anonstruct_Value_22_tag_table))))))) }
  
end

module Struct___anonstruct_Value_22_safe

  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Value_22 
  
  use import Root___anonstruct_Value_22 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val safe_free_struct___anonstruct_Value_22
  (p : (pointer __anonstruct_Value_22)) 
   (__anonstruct_Value_22_alloc_table : ref (alloc_table
    __anonstruct_Value_22)) : unit
    requires { true } writes { __anonstruct_Value_22_alloc_table }
    ensures {
      ((((=) p null) /\
       ((=) !__anonstruct_Value_22_alloc_table (old
       !__anonstruct_Value_22_alloc_table)))
      \/
      ((frame_free_struct___anonstruct_Value_22 p (old
       !__anonstruct_Value_22_alloc_table)
       !__anonstruct_Value_22_alloc_table)
      /\
      (fresh_alloc_struct___anonstruct_Value_22 p
      (offset_max (old !__anonstruct_Value_22_alloc_table) p)
      !__anonstruct_Value_22_alloc_table))) }
  
  val allocate_struct___anonstruct_Value_22
  (n : int) 
   (__anonstruct_Value_22_alloc_table : ref (alloc_table
    __anonstruct_Value_22)) 
    (__anonstruct_Value_22_tag_table : ref (tag_table
     __anonstruct_Value_22)) : (pointer __anonstruct_Value_22)
     requires { true } writes { __anonstruct_Value_22_alloc_table,
     __anonstruct_Value_22_tag_table }
     ensures {
       ((strict_valid_struct___anonstruct_Value_22 result (0) (Int.(-) n (1))
        !__anonstruct_Value_22_alloc_table)
       /\
       ((frame_alloc_struct___anonstruct_Value_22 result n (old
        !__anonstruct_Value_22_alloc_table)
        !__anonstruct_Value_22_alloc_table)
       /\
       ((frame_tag_struct___anonstruct_Value_22 result (old
        !__anonstruct_Value_22_tag_table) !__anonstruct_Value_22_tag_table)
       /\
       ((fresh_alloc_struct___anonstruct_Value_22 result (Int.(-) n (1)) (old
        !__anonstruct_Value_22_alloc_table))
       /\
       ((fresh_tag_struct___anonstruct_Value_22 result (Int.(-) n (1)) (old
        !__anonstruct_Value_22_tag_table))
       /\
       ((typeof_struct___anonstruct_Value_22 result (0) n
        !__anonstruct_Value_22_tag_table)
       /\
       (container_of_struct___anonstruct_Value_22 result (0) n
       !__anonstruct_Value_22_tag_table))))))) }
  
  val allocate_singleton_struct___anonstruct_Value_22
  (__anonstruct_Value_22_alloc_table : ref (alloc_table
   __anonstruct_Value_22)) 
   (__anonstruct_Value_22_tag_table : ref (tag_table
    __anonstruct_Value_22)) : (pointer __anonstruct_Value_22)
    requires { true } writes { __anonstruct_Value_22_alloc_table,
    __anonstruct_Value_22_tag_table }
    ensures {
      ((strict_valid_struct___anonstruct_Value_22 result (0) (0)
       !__anonstruct_Value_22_alloc_table)
      /\
      ((frame_alloc_struct___anonstruct_Value_22 result (1) (old
       !__anonstruct_Value_22_alloc_table)
       !__anonstruct_Value_22_alloc_table)
      /\
      ((frame_tag_struct___anonstruct_Value_22 result (old
       !__anonstruct_Value_22_tag_table) !__anonstruct_Value_22_tag_table)
      /\
      ((fresh_alloc_struct___anonstruct_Value_22 result (0) (old
       !__anonstruct_Value_22_alloc_table))
      /\
      ((fresh_tag_struct___anonstruct_Value_22 result (0) (old
       !__anonstruct_Value_22_tag_table))
      /\
      ((typeof_singleton_struct___anonstruct_Value_22 result
       !__anonstruct_Value_22_tag_table)
      /\
      (container_of_singleton_struct___anonstruct_Value_22 result
      !__anonstruct_Value_22_tag_table))))))) }
  
end

theory Struct_charP

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import core.Tag_table 
  
  use import Struct_voidP 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Alloc_table 
  
  use import core.Alloc 
  
  use why3.Bool.Bool 
  
  use import core.Charp_tag_id 
  
  predicate frame_tag_struct_charP (p : (pointer voidP)) (old_voidP_tag_table
  : (tag_table voidP)) (voidP_tag_table : (tag_table voidP))
  =
     ((tag_extends old_voidP_tag_table voidP_tag_table) /\
     (alloc_tag_block old_voidP_tag_table voidP_tag_table p))
  
  predicate frame_free_struct_charP (p : (pointer voidP))
  (old_voidP_alloc_table : (alloc_table voidP)) (voidP_alloc_table :
  (alloc_table voidP))
  =
     ((free_extends old_voidP_alloc_table voidP_alloc_table) /\
     (free_block old_voidP_alloc_table voidP_alloc_table p))
  
  predicate frame_alloc_struct_charP (p : (pointer voidP)) (n : int)
  (old_voidP_alloc_table : (alloc_table voidP)) (voidP_alloc_table :
  (alloc_table voidP))
  =
     ((alloc_extends old_voidP_alloc_table voidP_alloc_table) /\
     (alloc_block old_voidP_alloc_table voidP_alloc_table p n))
  
  predicate fresh_tag_struct_charP (p : (pointer voidP)) (n : int)
  (voidP_tag_table : (tag_table voidP))
  = (fresh_tag_struct_voidP p n voidP_tag_table)
  
  predicate fresh_alloc_struct_charP (p : (pointer voidP)) (n : int)
  (voidP_alloc_table : (alloc_table voidP))
  = (fresh_alloc_struct_voidP p n voidP_alloc_table)
  
  predicate container_of_singleton_struct_charP (p : (pointer voidP))
  (voidP_tag_table : (tag_table voidP)) = true
  
  predicate container_of_struct_charP (p : (pointer voidP)) (l : int) (r :
  int) (voidP_tag_table : (tag_table voidP)) = true
  
  predicate typeof_singleton_struct_charP (p : (pointer voidP))
  (voidP_tag_table : (tag_table voidP))
  = ((=) (typeof voidP_tag_table p) charP_tag)
  
  predicate typeof_struct_charP (p : (pointer voidP)) (l : int) (r : int)
  (voidP_tag_table : (tag_table voidP))
  =
     (((=) (typeof voidP_tag_table p) charP_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       ((=) (typeof voidP_tag_table (shift p i)) charP_tag))))
  
  predicate instanceof_singleton_struct_charP (p : (pointer voidP))
  (voidP_tag_table : (tag_table voidP))
  = (instanceof voidP_tag_table p charP_tag)
  
  predicate instanceof_struct_charP (p : (pointer voidP)) (l : int) (r : int)
  (voidP_tag_table : (tag_table voidP))
  =
     ((instanceof voidP_tag_table p charP_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       (instanceof voidP_tag_table (shift p i) charP_tag))))
  
  predicate right_valid_struct_charP (p : (pointer voidP)) (b : int)
  (voidP_alloc_table : (alloc_table voidP))
  = (right_valid_struct_voidP p b voidP_alloc_table)
  
  predicate left_valid_struct_charP (p : (pointer voidP)) (a : int)
  (voidP_alloc_table : (alloc_table voidP))
  = (left_valid_struct_voidP p a voidP_alloc_table)
  
  predicate strict_left_valid_struct_charP (p : (pointer voidP)) (a : int)
  (voidP_alloc_table : (alloc_table voidP))
  = (strict_left_valid_struct_voidP p a voidP_alloc_table)
  
  predicate valid_struct_charP (p : (pointer voidP)) (a : int) (b : int)
  (voidP_alloc_table : (alloc_table voidP))
  = (valid_struct_voidP p a b voidP_alloc_table)
  
  predicate strict_valid_struct_charP (p : (pointer voidP)) (a : int) (b :
  int) (voidP_alloc_table : (alloc_table voidP))
  = (strict_valid_struct_voidP p a b voidP_alloc_table)
  
end

module Struct_charP_unsafe

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import Struct_charP 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val free_struct_charP
  (p : (pointer voidP)) 
   (voidP_alloc_table : ref (alloc_table voidP)) : unit
    requires {
      (("expl:Deallocation" ((=) p null)) \/ (freeable !voidP_alloc_table p))
      }
    writes { voidP_alloc_table }
    ensures {
      ((((=) p null) /\ ((=) !voidP_alloc_table (old !voidP_alloc_table))) \/
      ((frame_free_struct_charP p (old !voidP_alloc_table)
       !voidP_alloc_table)
      /\
      (fresh_alloc_struct_charP p (offset_max (old !voidP_alloc_table) p)
      !voidP_alloc_table))) }
  
  val allocate_struct_charP_requires
  (n : int) 
   (voidP_alloc_table : ref (alloc_table voidP)) 
    (voidP_tag_table : ref (tag_table voidP)) : (pointer voidP)
     requires { ((>=) n (0)) } writes { voidP_alloc_table, voidP_tag_table }
     ensures {
       ((strict_valid_struct_charP result (0) (Int.(-) n (1))
        !voidP_alloc_table)
       /\
       ((frame_alloc_struct_charP result n (old !voidP_alloc_table)
        !voidP_alloc_table)
       /\
       ((frame_tag_struct_charP result (old !voidP_tag_table)
        !voidP_tag_table)
       /\
       ((fresh_alloc_struct_charP result (Int.(-) n (1)) (old
        !voidP_alloc_table))
       /\
       ((fresh_tag_struct_charP result (Int.(-) n (1)) (old
        !voidP_tag_table))
       /\
       ((typeof_struct_charP result (0) n !voidP_tag_table) /\
       (container_of_struct_charP result (0) n !voidP_tag_table))))))) }
  
end

module Struct_charP_safe

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import Struct_charP 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val safe_free_struct_charP
  (p : (pointer voidP)) 
   (voidP_alloc_table : ref (alloc_table voidP)) : unit
    requires { true } writes { voidP_alloc_table }
    ensures {
      ((((=) p null) /\ ((=) !voidP_alloc_table (old !voidP_alloc_table))) \/
      ((frame_free_struct_charP p (old !voidP_alloc_table)
       !voidP_alloc_table)
      /\
      (fresh_alloc_struct_charP p (offset_max (old !voidP_alloc_table) p)
      !voidP_alloc_table))) }
  
  val allocate_struct_charP
  (n : int) 
   (voidP_alloc_table : ref (alloc_table voidP)) 
    (voidP_tag_table : ref (tag_table voidP)) : (pointer voidP)
     requires { true } writes { voidP_alloc_table, voidP_tag_table }
     ensures {
       ((strict_valid_struct_charP result (0) (Int.(-) n (1))
        !voidP_alloc_table)
       /\
       ((frame_alloc_struct_charP result n (old !voidP_alloc_table)
        !voidP_alloc_table)
       /\
       ((frame_tag_struct_charP result (old !voidP_tag_table)
        !voidP_tag_table)
       /\
       ((fresh_alloc_struct_charP result (Int.(-) n (1)) (old
        !voidP_alloc_table))
       /\
       ((fresh_tag_struct_charP result (Int.(-) n (1)) (old
        !voidP_tag_table))
       /\
       ((typeof_struct_charP result (0) n !voidP_tag_table) /\
       (container_of_struct_charP result (0) n !voidP_tag_table))))))) }
  
  val allocate_singleton_struct_charP
  (voidP_alloc_table : ref (alloc_table voidP)) 
   (voidP_tag_table : ref (tag_table voidP)) : (pointer voidP)
    requires { true } writes { voidP_alloc_table, voidP_tag_table }
    ensures {
      ((strict_valid_struct_charP result (0) (0) !voidP_alloc_table) /\
      ((frame_alloc_struct_charP result (1) (old !voidP_alloc_table)
       !voidP_alloc_table)
      /\
      ((frame_tag_struct_charP result (old !voidP_tag_table)
       !voidP_tag_table)
      /\
      ((fresh_alloc_struct_charP result (0) (old !voidP_alloc_table)) /\
      ((fresh_tag_struct_charP result (0) (old !voidP_tag_table)) /\
      ((typeof_singleton_struct_charP result !voidP_tag_table) /\
      (container_of_singleton_struct_charP result !voidP_tag_table))))))) }
  
end

module Struct_voidP_unsafe

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import Struct_voidP 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val free_struct_voidP
  (p : (pointer voidP)) 
   (voidP_alloc_table : ref (alloc_table voidP)) : unit
    requires {
      (("expl:Deallocation" ((=) p null)) \/ (freeable !voidP_alloc_table p))
      }
    writes { voidP_alloc_table }
    ensures {
      ((((=) p null) /\ ((=) !voidP_alloc_table (old !voidP_alloc_table))) \/
      ((frame_free_struct_voidP p (old !voidP_alloc_table)
       !voidP_alloc_table)
      /\
      (fresh_alloc_struct_voidP p (offset_max (old !voidP_alloc_table) p)
      !voidP_alloc_table))) }
  
  val allocate_struct_voidP_requires
  (n : int) 
   (voidP_alloc_table : ref (alloc_table voidP)) 
    (voidP_tag_table : ref (tag_table voidP)) : (pointer voidP)
     requires { ((>=) n (0)) } writes { voidP_alloc_table, voidP_tag_table }
     ensures {
       ((strict_valid_struct_voidP result (0) (Int.(-) n (1))
        !voidP_alloc_table)
       /\
       ((frame_alloc_struct_voidP result n (old !voidP_alloc_table)
        !voidP_alloc_table)
       /\
       ((frame_tag_struct_voidP result (old !voidP_tag_table)
        !voidP_tag_table)
       /\
       ((fresh_alloc_struct_voidP result (Int.(-) n (1)) (old
        !voidP_alloc_table))
       /\
       ((fresh_tag_struct_voidP result (Int.(-) n (1)) (old
        !voidP_tag_table))
       /\
       ((typeof_struct_voidP result (0) n !voidP_tag_table) /\
       (container_of_struct_voidP result (0) n !voidP_tag_table))))))) }
  
end

module Struct_voidP_safe

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import Struct_voidP 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val safe_free_struct_voidP
  (p : (pointer voidP)) 
   (voidP_alloc_table : ref (alloc_table voidP)) : unit
    requires { true } writes { voidP_alloc_table }
    ensures {
      ((((=) p null) /\ ((=) !voidP_alloc_table (old !voidP_alloc_table))) \/
      ((frame_free_struct_voidP p (old !voidP_alloc_table)
       !voidP_alloc_table)
      /\
      (fresh_alloc_struct_voidP p (offset_max (old !voidP_alloc_table) p)
      !voidP_alloc_table))) }
  
  val allocate_struct_voidP
  (n : int) 
   (voidP_alloc_table : ref (alloc_table voidP)) 
    (voidP_tag_table : ref (tag_table voidP)) : (pointer voidP)
     requires { true } writes { voidP_alloc_table, voidP_tag_table }
     ensures {
       ((strict_valid_struct_voidP result (0) (Int.(-) n (1))
        !voidP_alloc_table)
       /\
       ((frame_alloc_struct_voidP result n (old !voidP_alloc_table)
        !voidP_alloc_table)
       /\
       ((frame_tag_struct_voidP result (old !voidP_tag_table)
        !voidP_tag_table)
       /\
       ((fresh_alloc_struct_voidP result (Int.(-) n (1)) (old
        !voidP_alloc_table))
       /\
       ((fresh_tag_struct_voidP result (Int.(-) n (1)) (old
        !voidP_tag_table))
       /\
       ((typeof_struct_voidP result (0) n !voidP_tag_table) /\
       (container_of_struct_voidP result (0) n !voidP_tag_table))))))) }
  
  val allocate_singleton_struct_voidP
  (voidP_alloc_table : ref (alloc_table voidP)) 
   (voidP_tag_table : ref (tag_table voidP)) : (pointer voidP)
    requires { true } writes { voidP_alloc_table, voidP_tag_table }
    ensures {
      ((strict_valid_struct_voidP result (0) (0) !voidP_alloc_table) /\
      ((frame_alloc_struct_voidP result (1) (old !voidP_alloc_table)
       !voidP_alloc_table)
      /\
      ((frame_tag_struct_voidP result (old !voidP_tag_table)
       !voidP_tag_table)
      /\
      ((fresh_alloc_struct_voidP result (0) (old !voidP_alloc_table)) /\
      ((fresh_tag_struct_voidP result (0) (old !voidP_tag_table)) /\
      ((typeof_singleton_struct_voidP result !voidP_tag_table) /\
      (container_of_singleton_struct_voidP result !voidP_tag_table))))))) }
  
end

module Safe_bit_uint64_of_Safe_bit_uint8

  use enum.Uint8 
  
  use enum.Uint64 
  
  use Bit_uint64_of_Bit_uint8 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_uint8.cast_modulo n))) }
  
end

module Unsafe_bit_uint64_of_Unsafe_bit_uint8

  use enum.Uint8 
  
  use enum.Uint64 
  
  use Bit_uint64_of_Bit_uint8 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_uint8.cast_modulo n))) }
  
end

module Safe_uint64_of_Safe_uint8

  use enum.Uint8 
  
  use enum.Uint64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Uint8.to_int n)) }
  
end

module Unsafe_uint64_of_Unsafe_uint8

  use enum.Uint8 
  
  use enum.Uint64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Uint8.to_int n)) }
  
end

module Safe_bit_uint32_of_Safe_bit_uint8

  use enum.Uint8 
  
  use enum.Uint32 
  
  use Bit_uint32_of_Bit_uint8 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_uint8.cast_modulo n))) }
  
end

module Unsafe_bit_uint32_of_Unsafe_bit_uint8

  use enum.Uint8 
  
  use enum.Uint32 
  
  use Bit_uint32_of_Bit_uint8 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_uint8.cast_modulo n))) }
  
end

module Safe_uint32_of_Safe_uint8

  use enum.Uint8 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Uint8.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_uint8

  use enum.Uint8 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Uint8.to_int n)) }
  
end

module Safe_bit_uint16_of_Safe_bit_uint8

  use enum.Uint8 
  
  use enum.Uint16 
  
  use Bit_uint16_of_Bit_uint8 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_uint8.cast_modulo n))) }
  
end

module Unsafe_bit_uint16_of_Unsafe_bit_uint8

  use enum.Uint8 
  
  use enum.Uint16 
  
  use Bit_uint16_of_Bit_uint8 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_uint8.cast_modulo n))) }
  
end

module Safe_uint16_of_Safe_uint8

  use enum.Uint8 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Uint8.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_uint8

  use enum.Uint8 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Uint8.to_int n)) }
  
end

module Safe_bit_int8_of_Safe_bit_uint8

  use enum.Uint8 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint8 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int8.t
   requires {
     ((Bit_int8.in_bounds (Uint8.to_int n)) \/
     (Bit_int8_of_Bit_uint8.is_safe n)) }
   ensures {
     (((=) (Int8.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint8.cast_modulo n))) }
  
end

module Unsafe_bit_int8_of_Unsafe_bit_uint8

  use enum.Uint8 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint8 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint8.cast_modulo n))) }
  
end

module Safe_int8_of_Safe_uint8

  use enum.Uint8 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int8.t
   requires { (Int8.in_bounds (Uint8.to_int n)) }
   ensures { ((=) (Int8.to_int result) (Uint8.to_int n)) }
  
end

module Unsafe_int8_of_Unsafe_uint8

  use enum.Uint8 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int8.t
   requires { true } ensures { ((=) (Int8.to_int result) (Uint8.to_int n)) }
  
end

module Safe_bit_int64_of_Safe_bit_uint8

  use enum.Uint8 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint8 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint8.cast_modulo n))) }
  
end

module Unsafe_bit_int64_of_Unsafe_bit_uint8

  use enum.Uint8 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint8 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint8.cast_modulo n))) }
  
end

module Safe_int64_of_Safe_uint8

  use enum.Uint8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Uint8.to_int n)) }
  
end

module Unsafe_int64_of_Unsafe_uint8

  use enum.Uint8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Uint8.to_int n)) }
  
end

module Safe_bit_int32_of_Safe_bit_uint8

  use enum.Uint8 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint8 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint8.cast_modulo n))) }
  
end

module Unsafe_bit_int32_of_Unsafe_bit_uint8

  use enum.Uint8 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint8 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint8.cast_modulo n))) }
  
end

module Safe_int32_of_Safe_uint8

  use enum.Uint8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int32.t
   requires { true } ensures { ((=) (Int32.to_int result) (Uint8.to_int n)) }
  
end

module Unsafe_int32_of_Unsafe_uint8

  use enum.Uint8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int32.t
   requires { true } ensures { ((=) (Int32.to_int result) (Uint8.to_int n)) }
  
end

module Safe_bit_int16_of_Safe_bit_uint8

  use enum.Uint8 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint8 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint8.cast_modulo n))) }
  
end

module Unsafe_bit_int16_of_Unsafe_bit_uint8

  use enum.Uint8 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint8 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint8.cast_modulo n))) }
  
end

module Safe_int16_of_Safe_uint8

  use enum.Uint8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int16.t
   requires { true } ensures { ((=) (Int16.to_int result) (Uint8.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_uint8

  use enum.Uint8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int16.t
   requires { true } ensures { ((=) (Int16.to_int result) (Uint8.to_int n)) }
  
end

module Safe_bit_uint32_of_Safe_bit_uint64

  use enum.Uint64 
  
  use enum.Uint32 
  
  use Bit_uint32_of_Bit_uint64 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Uint64.to_int n)))
     /\ ((=) result (Bit_uint32_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Uint32.t
   requires {
     ((Bit_uint32.in_bounds (Uint64.to_int n)) \/
     (Bit_uint32_of_Bit_uint64.is_safe n)) }
   ensures {
     (((=) (Uint32.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_uint64.cast_modulo n))) }
  
end

module Unsafe_bit_uint32_of_Unsafe_bit_uint64

  use enum.Uint64 
  
  use enum.Uint32 
  
  use Bit_uint32_of_Bit_uint64 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Uint64.to_int n)))
     /\ ((=) result (Bit_uint32_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_uint64.cast_modulo n))) }
  
end

module Safe_uint32_of_Safe_uint64

  use enum.Uint64 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Uint32.t
   requires { (Uint32.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Uint32.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_uint64

  use enum.Uint64 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Uint64.to_int n)) }
  
end

module Safe_bit_uint16_of_Safe_bit_uint64

  use enum.Uint64 
  
  use enum.Uint16 
  
  use Bit_uint16_of_Bit_uint64 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Uint64.to_int n)))
     /\ ((=) result (Bit_uint16_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Uint16.t
   requires {
     ((Bit_uint16.in_bounds (Uint64.to_int n)) \/
     (Bit_uint16_of_Bit_uint64.is_safe n)) }
   ensures {
     (((=) (Uint16.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_uint64.cast_modulo n))) }
  
end

module Unsafe_bit_uint16_of_Unsafe_bit_uint64

  use enum.Uint64 
  
  use enum.Uint16 
  
  use Bit_uint16_of_Bit_uint64 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Uint64.to_int n)))
     /\ ((=) result (Bit_uint16_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_uint64.cast_modulo n))) }
  
end

module Safe_uint16_of_Safe_uint64

  use enum.Uint64 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Uint16.t
   requires { (Uint16.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Uint16.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_uint64

  use enum.Uint64 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Uint64.to_int n)) }
  
end

module Safe_bit_int8_of_Safe_bit_uint64

  use enum.Uint64 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint64 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int8.t
   requires {
     ((Bit_int8.in_bounds (Uint64.to_int n)) \/
     (Bit_int8_of_Bit_uint64.is_safe n)) }
   ensures {
     (((=) (Int8.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint64.cast_modulo n))) }
  
end

module Unsafe_bit_int8_of_Unsafe_bit_uint64

  use enum.Uint64 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint64 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint64.cast_modulo n))) }
  
end

module Safe_int8_of_Safe_uint64

  use enum.Uint64 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int8.t
   requires { (Int8.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Int8.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_int8_of_Unsafe_uint64

  use enum.Uint64 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int8.t
   requires { true } ensures { ((=) (Int8.to_int result) (Uint64.to_int n)) }
  
end

module Safe_bit_int64_of_Safe_bit_uint64

  use enum.Uint64 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint64 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int64.t
   requires {
     ((Bit_int64.in_bounds (Uint64.to_int n)) \/
     (Bit_int64_of_Bit_uint64.is_safe n)) }
   ensures {
     (((=) (Int64.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint64.cast_modulo n))) }
  
end

module Unsafe_bit_int64_of_Unsafe_bit_uint64

  use enum.Uint64 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint64 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint64.cast_modulo n))) }
  
end

module Safe_int64_of_Safe_uint64

  use enum.Uint64 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int64.t
   requires { (Int64.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Int64.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_int64_of_Unsafe_uint64

  use enum.Uint64 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int64.t
   requires { true }
   ensures { ((=) (Int64.to_int result) (Uint64.to_int n)) }
  
end

module Safe_bit_int32_of_Safe_bit_uint64

  use enum.Uint64 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint64 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int32.t
   requires {
     ((Bit_int32.in_bounds (Uint64.to_int n)) \/
     (Bit_int32_of_Bit_uint64.is_safe n)) }
   ensures {
     (((=) (Int32.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint64.cast_modulo n))) }
  
end

module Unsafe_bit_int32_of_Unsafe_bit_uint64

  use enum.Uint64 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint64 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint64.cast_modulo n))) }
  
end

module Safe_int32_of_Safe_uint64

  use enum.Uint64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int32.t
   requires { (Int32.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Int32.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_int32_of_Unsafe_uint64

  use enum.Uint64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int32.t
   requires { true }
   ensures { ((=) (Int32.to_int result) (Uint64.to_int n)) }
  
end

module Safe_bit_int16_of_Safe_bit_uint64

  use enum.Uint64 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint64 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int16.t
   requires {
     ((Bit_int16.in_bounds (Uint64.to_int n)) \/
     (Bit_int16_of_Bit_uint64.is_safe n)) }
   ensures {
     (((=) (Int16.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint64.cast_modulo n))) }
  
end

module Unsafe_bit_int16_of_Unsafe_bit_uint64

  use enum.Uint64 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint64 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint64.cast_modulo n))) }
  
end

module Safe_int16_of_Safe_uint64

  use enum.Uint64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int16.t
   requires { (Int16.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Int16.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_uint64

  use enum.Uint64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int16.t
   requires { true }
   ensures { ((=) (Int16.to_int result) (Uint64.to_int n)) }
  
end

module Safe_bit_uint16_of_Safe_bit_uint32

  use enum.Uint32 
  
  use enum.Uint16 
  
  use Bit_uint16_of_Bit_uint32 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Uint32.to_int n)))
     /\ ((=) result (Bit_uint16_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Uint16.t
   requires {
     ((Bit_uint16.in_bounds (Uint32.to_int n)) \/
     (Bit_uint16_of_Bit_uint32.is_safe n)) }
   ensures {
     (((=) (Uint16.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_uint32.cast_modulo n))) }
  
end

module Unsafe_bit_uint16_of_Unsafe_bit_uint32

  use enum.Uint32 
  
  use enum.Uint16 
  
  use Bit_uint16_of_Bit_uint32 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Uint32.to_int n)))
     /\ ((=) result (Bit_uint16_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_uint32.cast_modulo n))) }
  
end

module Safe_uint16_of_Safe_uint32

  use enum.Uint32 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Uint16.t
   requires { (Uint16.in_bounds (Uint32.to_int n)) }
   ensures { ((=) (Uint16.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_uint32

  use enum.Uint32 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Uint32.to_int n)) }
  
end

module Safe_bit_int8_of_Safe_bit_uint32

  use enum.Uint32 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint32 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int8.t
   requires {
     ((Bit_int8.in_bounds (Uint32.to_int n)) \/
     (Bit_int8_of_Bit_uint32.is_safe n)) }
   ensures {
     (((=) (Int8.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint32.cast_modulo n))) }
  
end

module Unsafe_bit_int8_of_Unsafe_bit_uint32

  use enum.Uint32 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint32 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint32.cast_modulo n))) }
  
end

module Safe_int8_of_Safe_uint32

  use enum.Uint32 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int8.t
   requires { (Int8.in_bounds (Uint32.to_int n)) }
   ensures { ((=) (Int8.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_int8_of_Unsafe_uint32

  use enum.Uint32 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int8.t
   requires { true } ensures { ((=) (Int8.to_int result) (Uint32.to_int n)) }
  
end

module Safe_bit_int64_of_Safe_bit_uint32

  use enum.Uint32 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint32 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint32.cast_modulo n))) }
  
end

module Unsafe_bit_int64_of_Unsafe_bit_uint32

  use enum.Uint32 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint32 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint32.cast_modulo n))) }
  
end

module Safe_int64_of_Safe_uint32

  use enum.Uint32 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int64.t
   requires { true }
   ensures { ((=) (Int64.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_int64_of_Unsafe_uint32

  use enum.Uint32 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int64.t
   requires { true }
   ensures { ((=) (Int64.to_int result) (Uint32.to_int n)) }
  
end

module Safe_bit_int32_of_Safe_bit_uint32

  use enum.Uint32 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint32 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int32.t
   requires {
     ((Bit_int32.in_bounds (Uint32.to_int n)) \/
     (Bit_int32_of_Bit_uint32.is_safe n)) }
   ensures {
     (((=) (Int32.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint32.cast_modulo n))) }
  
end

module Unsafe_bit_int32_of_Unsafe_bit_uint32

  use enum.Uint32 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint32 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint32.cast_modulo n))) }
  
end

module Safe_int32_of_Safe_uint32

  use enum.Uint32 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int32.t
   requires { (Int32.in_bounds (Uint32.to_int n)) }
   ensures { ((=) (Int32.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_int32_of_Unsafe_uint32

  use enum.Uint32 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int32.t
   requires { true }
   ensures { ((=) (Int32.to_int result) (Uint32.to_int n)) }
  
end

module Safe_bit_int16_of_Safe_bit_uint32

  use enum.Uint32 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint32 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int16.t
   requires {
     ((Bit_int16.in_bounds (Uint32.to_int n)) \/
     (Bit_int16_of_Bit_uint32.is_safe n)) }
   ensures {
     (((=) (Int16.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint32.cast_modulo n))) }
  
end

module Unsafe_bit_int16_of_Unsafe_bit_uint32

  use enum.Uint32 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint32 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint32.cast_modulo n))) }
  
end

module Safe_int16_of_Safe_uint32

  use enum.Uint32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int16.t
   requires { (Int16.in_bounds (Uint32.to_int n)) }
   ensures { ((=) (Int16.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_uint32

  use enum.Uint32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int16.t
   requires { true }
   ensures { ((=) (Int16.to_int result) (Uint32.to_int n)) }
  
end

module Safe_bit_int8_of_Safe_bit_uint16

  use enum.Uint16 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint16 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int8.t
   requires {
     ((Bit_int8.in_bounds (Uint16.to_int n)) \/
     (Bit_int8_of_Bit_uint16.is_safe n)) }
   ensures {
     (((=) (Int8.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint16.cast_modulo n))) }
  
end

module Unsafe_bit_int8_of_Unsafe_bit_uint16

  use enum.Uint16 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint16 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint16.cast_modulo n))) }
  
end

module Safe_int8_of_Safe_uint16

  use enum.Uint16 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int8.t
   requires { (Int8.in_bounds (Uint16.to_int n)) }
   ensures { ((=) (Int8.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_int8_of_Unsafe_uint16

  use enum.Uint16 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int8.t
   requires { true } ensures { ((=) (Int8.to_int result) (Uint16.to_int n)) }
  
end

module Safe_bit_int64_of_Safe_bit_uint16

  use enum.Uint16 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint16 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint16.cast_modulo n))) }
  
end

module Unsafe_bit_int64_of_Unsafe_bit_uint16

  use enum.Uint16 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint16 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint16.cast_modulo n))) }
  
end

module Safe_int64_of_Safe_uint16

  use enum.Uint16 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int64.t
   requires { true }
   ensures { ((=) (Int64.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_int64_of_Unsafe_uint16

  use enum.Uint16 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int64.t
   requires { true }
   ensures { ((=) (Int64.to_int result) (Uint16.to_int n)) }
  
end

module Safe_bit_int32_of_Safe_bit_uint16

  use enum.Uint16 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint16 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint16.cast_modulo n))) }
  
end

module Unsafe_bit_int32_of_Unsafe_bit_uint16

  use enum.Uint16 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint16 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint16.cast_modulo n))) }
  
end

module Safe_int32_of_Safe_uint16

  use enum.Uint16 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int32.t
   requires { true }
   ensures { ((=) (Int32.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_int32_of_Unsafe_uint16

  use enum.Uint16 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int32.t
   requires { true }
   ensures { ((=) (Int32.to_int result) (Uint16.to_int n)) }
  
end

module Safe_bit_int16_of_Safe_bit_uint16

  use enum.Uint16 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint16 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int16.t
   requires {
     ((Bit_int16.in_bounds (Uint16.to_int n)) \/
     (Bit_int16_of_Bit_uint16.is_safe n)) }
   ensures {
     (((=) (Int16.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint16.cast_modulo n))) }
  
end

module Unsafe_bit_int16_of_Unsafe_bit_uint16

  use enum.Uint16 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint16 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint16.cast_modulo n))) }
  
end

module Safe_int16_of_Safe_uint16

  use enum.Uint16 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int16.t
   requires { (Int16.in_bounds (Uint16.to_int n)) }
   ensures { ((=) (Int16.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_uint16

  use enum.Uint16 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int16.t
   requires { true }
   ensures { ((=) (Int16.to_int result) (Uint16.to_int n)) }
  
end

module Safe_bit_int64_of_Safe_bit_int8

  use enum.Int8 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_int8 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Int8.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_int8.cast_modulo n))) }
  
end

module Unsafe_bit_int64_of_Unsafe_bit_int8

  use enum.Int8 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_int8 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Int8.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_int8.cast_modulo n))) }
  
end

module Safe_int64_of_Safe_int8

  use enum.Int8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_int64_of_Unsafe_int8

  use enum.Int8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Int8.to_int n)) }
  
end

module Safe_bit_int32_of_Safe_bit_int8

  use enum.Int8 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_int8 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Int8.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_int8.cast_modulo n))) }
  
end

module Unsafe_bit_int32_of_Unsafe_bit_int8

  use enum.Int8 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_int8 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Int8.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_int8.cast_modulo n))) }
  
end

module Safe_int32_of_Safe_int8

  use enum.Int8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Int32.t
   requires { true } ensures { ((=) (Int32.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_int32_of_Unsafe_int8

  use enum.Int8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Int32.t
   requires { true } ensures { ((=) (Int32.to_int result) (Int8.to_int n)) }
  
end

module Safe_bit_int16_of_Safe_bit_int8

  use enum.Int8 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_int8 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Int8.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_int8.cast_modulo n))) }
  
end

module Unsafe_bit_int16_of_Unsafe_bit_int8

  use enum.Int8 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_int8 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Int8.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_int8.cast_modulo n))) }
  
end

module Safe_int16_of_Safe_int8

  use enum.Int8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Int16.t
   requires { true } ensures { ((=) (Int16.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_int8

  use enum.Int8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Int16.t
   requires { true } ensures { ((=) (Int16.to_int result) (Int8.to_int n)) }
  
end

module Safe_bit_int32_of_Safe_bit_int64

  use enum.Int64 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_int64 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Int64.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Int32.t
   requires {
     ((Bit_int32.in_bounds (Int64.to_int n)) \/
     (Bit_int32_of_Bit_int64.is_safe n)) }
   ensures {
     (((=) (Int32.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_int64.cast_modulo n))) }
  
end

module Unsafe_bit_int32_of_Unsafe_bit_int64

  use enum.Int64 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_int64 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Int64.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_int64.cast_modulo n))) }
  
end

module Safe_int32_of_Safe_int64

  use enum.Int64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Int32.t
   requires { (Int32.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Int32.to_int result) (Int64.to_int n)) }
  
end

module Unsafe_int32_of_Unsafe_int64

  use enum.Int64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Int32.t
   requires { true } ensures { ((=) (Int32.to_int result) (Int64.to_int n)) }
  
end

module Safe_bit_int16_of_Safe_bit_int64

  use enum.Int64 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_int64 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Int64.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Int16.t
   requires {
     ((Bit_int16.in_bounds (Int64.to_int n)) \/
     (Bit_int16_of_Bit_int64.is_safe n)) }
   ensures {
     (((=) (Int16.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_int64.cast_modulo n))) }
  
end

module Unsafe_bit_int16_of_Unsafe_bit_int64

  use enum.Int64 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_int64 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Int64.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_int64.cast_modulo n))) }
  
end

module Safe_int16_of_Safe_int64

  use enum.Int64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Int16.t
   requires { (Int16.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Int16.to_int result) (Int64.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_int64

  use enum.Int64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Int16.t
   requires { true } ensures { ((=) (Int16.to_int result) (Int64.to_int n)) }
  
end

module Safe_bit_int16_of_Safe_bit_int32

  use enum.Int32 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_int32 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Int32.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Int16.t
   requires {
     ((Bit_int16.in_bounds (Int32.to_int n)) \/
     (Bit_int16_of_Bit_int32.is_safe n)) }
   ensures {
     (((=) (Int16.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_int32.cast_modulo n))) }
  
end

module Unsafe_bit_int16_of_Unsafe_bit_int32

  use enum.Int32 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_int32 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Int32.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_int32.cast_modulo n))) }
  
end

module Safe_int16_of_Safe_int32

  use enum.Int32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Int16.t
   requires { (Int16.in_bounds (Int32.to_int n)) }
   ensures { ((=) (Int16.to_int result) (Int32.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_int32

  use enum.Int32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Int16.t
   requires { true } ensures { ((=) (Int16.to_int result) (Int32.to_int n)) }
  
end

module Safe_bit_uint8_of_Safe_bit_uint64

  use enum.Uint8 
  
  use enum.Uint64 
  
  use Bit_uint8_of_Bit_uint64 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Uint8.t
   requires {
     ((Bit_uint8.in_bounds (Uint64.to_int n)) \/
     (Bit_uint8_of_Bit_uint64.is_safe n)) }
   ensures {
     (((=) (Uint8.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_uint64.cast_modulo n))) }
  
end

module Unsafe_bit_uint8_of_Unsafe_bit_uint64

  use enum.Uint8 
  
  use enum.Uint64 
  
  use Bit_uint8_of_Bit_uint64 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_uint64.cast_modulo n))) }
  
end

module Safe_uint8_of_Safe_uint64

  use enum.Uint8 
  
  use enum.Uint64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Uint8.t
   requires { (Uint8.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Uint8.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_uint8_of_Unsafe_uint64

  use enum.Uint8 
  
  use enum.Uint64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Uint8.t
   requires { true }
   ensures { ((=) (Uint8.to_int result) (Uint64.to_int n)) }
  
end

module Safe_bit_uint8_of_Safe_bit_uint32

  use enum.Uint8 
  
  use enum.Uint32 
  
  use Bit_uint8_of_Bit_uint32 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Uint8.t
   requires {
     ((Bit_uint8.in_bounds (Uint32.to_int n)) \/
     (Bit_uint8_of_Bit_uint32.is_safe n)) }
   ensures {
     (((=) (Uint8.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_uint32.cast_modulo n))) }
  
end

module Unsafe_bit_uint8_of_Unsafe_bit_uint32

  use enum.Uint8 
  
  use enum.Uint32 
  
  use Bit_uint8_of_Bit_uint32 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_uint32.cast_modulo n))) }
  
end

module Safe_uint8_of_Safe_uint32

  use enum.Uint8 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Uint8.t
   requires { (Uint8.in_bounds (Uint32.to_int n)) }
   ensures { ((=) (Uint8.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_uint8_of_Unsafe_uint32

  use enum.Uint8 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Uint8.t
   requires { true }
   ensures { ((=) (Uint8.to_int result) (Uint32.to_int n)) }
  
end

module Safe_bit_uint8_of_Safe_bit_uint16

  use enum.Uint8 
  
  use enum.Uint16 
  
  use Bit_uint8_of_Bit_uint16 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Uint8.t
   requires {
     ((Bit_uint8.in_bounds (Uint16.to_int n)) \/
     (Bit_uint8_of_Bit_uint16.is_safe n)) }
   ensures {
     (((=) (Uint8.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_uint16.cast_modulo n))) }
  
end

module Unsafe_bit_uint8_of_Unsafe_bit_uint16

  use enum.Uint8 
  
  use enum.Uint16 
  
  use Bit_uint8_of_Bit_uint16 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_uint16.cast_modulo n))) }
  
end

module Safe_uint8_of_Safe_uint16

  use enum.Uint8 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Uint8.t
   requires { (Uint8.in_bounds (Uint16.to_int n)) }
   ensures { ((=) (Uint8.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_uint8_of_Unsafe_uint16

  use enum.Uint8 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Uint8.t
   requires { true }
   ensures { ((=) (Uint8.to_int result) (Uint16.to_int n)) }
  
end

module Safe_bit_uint8_of_Safe_bit_int8

  use enum.Uint8 
  
  use enum.Int8 
  
  use Bit_uint8_of_Bit_int8 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint8.t
   requires {
     ((Bit_uint8.in_bounds (Int8.to_int n)) \/
     (Bit_uint8_of_Bit_int8.is_safe n)) }
   ensures {
     (((=) (Uint8.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int8.cast_modulo n))) }
  
end

module Unsafe_bit_uint8_of_Unsafe_bit_int8

  use enum.Uint8 
  
  use enum.Int8 
  
  use Bit_uint8_of_Bit_int8 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int8.cast_modulo n))) }
  
end

module Safe_uint8_of_Safe_int8

  use enum.Uint8 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint8.t
   requires { (Uint8.in_bounds (Int8.to_int n)) }
   ensures { ((=) (Uint8.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_uint8_of_Unsafe_int8

  use enum.Uint8 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint8.t
   requires { true } ensures { ((=) (Uint8.to_int result) (Int8.to_int n)) }
  
end

module Safe_bit_uint8_of_Safe_bit_int64

  use enum.Uint8 
  
  use enum.Int64 
  
  use Bit_uint8_of_Bit_int64 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint8.t
   requires {
     ((Bit_uint8.in_bounds (Int64.to_int n)) \/
     (Bit_uint8_of_Bit_int64.is_safe n)) }
   ensures {
     (((=) (Uint8.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int64.cast_modulo n))) }
  
end

module Unsafe_bit_uint8_of_Unsafe_bit_int64

  use enum.Uint8 
  
  use enum.Int64 
  
  use Bit_uint8_of_Bit_int64 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int64.cast_modulo n))) }
  
end

module Safe_uint8_of_Safe_int64

  use enum.Uint8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint8.t
   requires { (Uint8.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Uint8.to_int result) (Int64.to_int n)) }
  
end

module Unsafe_uint8_of_Unsafe_int64

  use enum.Uint8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint8.t
   requires { true } ensures { ((=) (Uint8.to_int result) (Int64.to_int n)) }
  
end

module Safe_bit_uint8_of_Safe_bit_int32

  use enum.Uint8 
  
  use enum.Int32 
  
  use Bit_uint8_of_Bit_int32 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint8.t
   requires {
     ((Bit_uint8.in_bounds (Int32.to_int n)) \/
     (Bit_uint8_of_Bit_int32.is_safe n)) }
   ensures {
     (((=) (Uint8.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int32.cast_modulo n))) }
  
end

module Unsafe_bit_uint8_of_Unsafe_bit_int32

  use enum.Uint8 
  
  use enum.Int32 
  
  use Bit_uint8_of_Bit_int32 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int32.cast_modulo n))) }
  
end

module Safe_uint8_of_Safe_int32

  use enum.Uint8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint8.t
   requires { (Uint8.in_bounds (Int32.to_int n)) }
   ensures { ((=) (Uint8.to_int result) (Int32.to_int n)) }
  
end

module Unsafe_uint8_of_Unsafe_int32

  use enum.Uint8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint8.t
   requires { true } ensures { ((=) (Uint8.to_int result) (Int32.to_int n)) }
  
end

module Safe_bit_uint8_of_Safe_bit_int16

  use enum.Uint8 
  
  use enum.Int16 
  
  use Bit_uint8_of_Bit_int16 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint8.t
   requires {
     ((Bit_uint8.in_bounds (Int16.to_int n)) \/
     (Bit_uint8_of_Bit_int16.is_safe n)) }
   ensures {
     (((=) (Uint8.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int16.cast_modulo n))) }
  
end

module Unsafe_bit_uint8_of_Unsafe_bit_int16

  use enum.Uint8 
  
  use enum.Int16 
  
  use Bit_uint8_of_Bit_int16 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int16.cast_modulo n))) }
  
end

module Safe_uint8_of_Safe_int16

  use enum.Uint8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint8.t
   requires { (Uint8.in_bounds (Int16.to_int n)) }
   ensures { ((=) (Uint8.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_uint8_of_Unsafe_int16

  use enum.Uint8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint8.t
   requires { true } ensures { ((=) (Uint8.to_int result) (Int16.to_int n)) }
  
end

module Safe_bit_uint64_of_Safe_bit_uint32

  use enum.Uint64 
  
  use enum.Uint32 
  
  use Bit_uint64_of_Bit_uint32 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Uint32.to_int n)))
     /\ ((=) result (Bit_uint64_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_uint32.cast_modulo n))) }
  
end

module Unsafe_bit_uint64_of_Unsafe_bit_uint32

  use enum.Uint64 
  
  use enum.Uint32 
  
  use Bit_uint64_of_Bit_uint32 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Uint32.to_int n)))
     /\ ((=) result (Bit_uint64_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_uint32.cast_modulo n))) }
  
end

module Safe_uint64_of_Safe_uint32

  use enum.Uint64 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_uint64_of_Unsafe_uint32

  use enum.Uint64 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Uint32.to_int n)) }
  
end

module Safe_bit_uint64_of_Safe_bit_uint16

  use enum.Uint64 
  
  use enum.Uint16 
  
  use Bit_uint64_of_Bit_uint16 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Uint16.to_int n)))
     /\ ((=) result (Bit_uint64_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_uint16.cast_modulo n))) }
  
end

module Unsafe_bit_uint64_of_Unsafe_bit_uint16

  use enum.Uint64 
  
  use enum.Uint16 
  
  use Bit_uint64_of_Bit_uint16 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Uint16.to_int n)))
     /\ ((=) result (Bit_uint64_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_uint16.cast_modulo n))) }
  
end

module Safe_uint64_of_Safe_uint16

  use enum.Uint64 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_uint64_of_Unsafe_uint16

  use enum.Uint64 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Uint16.to_int n)) }
  
end

module Safe_bit_uint64_of_Safe_bit_int8

  use enum.Uint64 
  
  use enum.Int8 
  
  use Bit_uint64_of_Bit_int8 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint64.t
   requires {
     ((Bit_uint64.in_bounds (Int8.to_int n)) \/
     (Bit_uint64_of_Bit_int8.is_safe n)) }
   ensures {
     (((=) (Uint64.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int8.cast_modulo n))) }
  
end

module Unsafe_bit_uint64_of_Unsafe_bit_int8

  use enum.Uint64 
  
  use enum.Int8 
  
  use Bit_uint64_of_Bit_int8 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int8.cast_modulo n))) }
  
end

module Safe_uint64_of_Safe_int8

  use enum.Uint64 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint64.t
   requires { (Uint64.in_bounds (Int8.to_int n)) }
   ensures { ((=) (Uint64.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_uint64_of_Unsafe_int8

  use enum.Uint64 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint64.t
   requires { true } ensures { ((=) (Uint64.to_int result) (Int8.to_int n)) }
  
end

module Safe_bit_uint64_of_Safe_bit_int64

  use enum.Uint64 
  
  use enum.Int64 
  
  use Bit_uint64_of_Bit_int64 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint64.t
   requires {
     ((Bit_uint64.in_bounds (Int64.to_int n)) \/
     (Bit_uint64_of_Bit_int64.is_safe n)) }
   ensures {
     (((=) (Uint64.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int64.cast_modulo n))) }
  
end

module Unsafe_bit_uint64_of_Unsafe_bit_int64

  use enum.Uint64 
  
  use enum.Int64 
  
  use Bit_uint64_of_Bit_int64 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int64.cast_modulo n))) }
  
end

module Safe_uint64_of_Safe_int64

  use enum.Uint64 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint64.t
   requires { (Uint64.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Uint64.to_int result) (Int64.to_int n)) }
  
end

module Unsafe_uint64_of_Unsafe_int64

  use enum.Uint64 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Int64.to_int n)) }
  
end

module Safe_bit_uint64_of_Safe_bit_int32

  use enum.Uint64 
  
  use enum.Int32 
  
  use Bit_uint64_of_Bit_int32 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint64.t
   requires {
     ((Bit_uint64.in_bounds (Int32.to_int n)) \/
     (Bit_uint64_of_Bit_int32.is_safe n)) }
   ensures {
     (((=) (Uint64.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int32.cast_modulo n))) }
  
end

module Unsafe_bit_uint64_of_Unsafe_bit_int32

  use enum.Uint64 
  
  use enum.Int32 
  
  use Bit_uint64_of_Bit_int32 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int32.cast_modulo n))) }
  
end

module Safe_uint64_of_Safe_int32

  use enum.Uint64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint64.t
   requires { (Uint64.in_bounds (Int32.to_int n)) }
   ensures { ((=) (Uint64.to_int result) (Int32.to_int n)) }
  
end

module Unsafe_uint64_of_Unsafe_int32

  use enum.Uint64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Int32.to_int n)) }
  
end

module Safe_bit_uint64_of_Safe_bit_int16

  use enum.Uint64 
  
  use enum.Int16 
  
  use Bit_uint64_of_Bit_int16 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint64.t
   requires {
     ((Bit_uint64.in_bounds (Int16.to_int n)) \/
     (Bit_uint64_of_Bit_int16.is_safe n)) }
   ensures {
     (((=) (Uint64.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int16.cast_modulo n))) }
  
end

module Unsafe_bit_uint64_of_Unsafe_bit_int16

  use enum.Uint64 
  
  use enum.Int16 
  
  use Bit_uint64_of_Bit_int16 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int16.cast_modulo n))) }
  
end

module Safe_uint64_of_Safe_int16

  use enum.Uint64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint64.t
   requires { (Uint64.in_bounds (Int16.to_int n)) }
   ensures { ((=) (Uint64.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_uint64_of_Unsafe_int16

  use enum.Uint64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Int16.to_int n)) }
  
end

module Safe_bit_uint32_of_Safe_bit_uint16

  use enum.Uint32 
  
  use enum.Uint16 
  
  use Bit_uint32_of_Bit_uint16 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Uint16.to_int n)))
     /\ ((=) result (Bit_uint32_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_uint16.cast_modulo n))) }
  
end

module Unsafe_bit_uint32_of_Unsafe_bit_uint16

  use enum.Uint32 
  
  use enum.Uint16 
  
  use Bit_uint32_of_Bit_uint16 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Uint16.to_int n)))
     /\ ((=) result (Bit_uint32_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_uint16.cast_modulo n))) }
  
end

module Safe_uint32_of_Safe_uint16

  use enum.Uint32 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_uint16

  use enum.Uint32 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Uint16.to_int n)) }
  
end

module Safe_bit_uint32_of_Safe_bit_int8

  use enum.Uint32 
  
  use enum.Int8 
  
  use Bit_uint32_of_Bit_int8 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint32.t
   requires {
     ((Bit_uint32.in_bounds (Int8.to_int n)) \/
     (Bit_uint32_of_Bit_int8.is_safe n)) }
   ensures {
     (((=) (Uint32.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int8.cast_modulo n))) }
  
end

module Unsafe_bit_uint32_of_Unsafe_bit_int8

  use enum.Uint32 
  
  use enum.Int8 
  
  use Bit_uint32_of_Bit_int8 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int8.cast_modulo n))) }
  
end

module Safe_uint32_of_Safe_int8

  use enum.Uint32 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint32.t
   requires { (Uint32.in_bounds (Int8.to_int n)) }
   ensures { ((=) (Uint32.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_int8

  use enum.Uint32 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint32.t
   requires { true } ensures { ((=) (Uint32.to_int result) (Int8.to_int n)) }
  
end

module Safe_bit_uint32_of_Safe_bit_int64

  use enum.Uint32 
  
  use enum.Int64 
  
  use Bit_uint32_of_Bit_int64 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint32.t
   requires {
     ((Bit_uint32.in_bounds (Int64.to_int n)) \/
     (Bit_uint32_of_Bit_int64.is_safe n)) }
   ensures {
     (((=) (Uint32.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int64.cast_modulo n))) }
  
end

module Unsafe_bit_uint32_of_Unsafe_bit_int64

  use enum.Uint32 
  
  use enum.Int64 
  
  use Bit_uint32_of_Bit_int64 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int64.cast_modulo n))) }
  
end

module Safe_uint32_of_Safe_int64

  use enum.Uint32 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint32.t
   requires { (Uint32.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Uint32.to_int result) (Int64.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_int64

  use enum.Uint32 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Int64.to_int n)) }
  
end

module Safe_bit_uint32_of_Safe_bit_int32

  use enum.Uint32 
  
  use enum.Int32 
  
  use Bit_uint32_of_Bit_int32 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint32.t
   requires {
     ((Bit_uint32.in_bounds (Int32.to_int n)) \/
     (Bit_uint32_of_Bit_int32.is_safe n)) }
   ensures {
     (((=) (Uint32.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int32.cast_modulo n))) }
  
end

module Unsafe_bit_uint32_of_Unsafe_bit_int32

  use enum.Uint32 
  
  use enum.Int32 
  
  use Bit_uint32_of_Bit_int32 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int32.cast_modulo n))) }
  
end

module Safe_uint32_of_Safe_int32

  use enum.Uint32 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint32.t
   requires { (Uint32.in_bounds (Int32.to_int n)) }
   ensures { ((=) (Uint32.to_int result) (Int32.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_int32

  use enum.Uint32 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Int32.to_int n)) }
  
end

module Safe_bit_uint32_of_Safe_bit_int16

  use enum.Uint32 
  
  use enum.Int16 
  
  use Bit_uint32_of_Bit_int16 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint32.t
   requires {
     ((Bit_uint32.in_bounds (Int16.to_int n)) \/
     (Bit_uint32_of_Bit_int16.is_safe n)) }
   ensures {
     (((=) (Uint32.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int16.cast_modulo n))) }
  
end

module Unsafe_bit_uint32_of_Unsafe_bit_int16

  use enum.Uint32 
  
  use enum.Int16 
  
  use Bit_uint32_of_Bit_int16 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int16.cast_modulo n))) }
  
end

module Safe_uint32_of_Safe_int16

  use enum.Uint32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint32.t
   requires { (Uint32.in_bounds (Int16.to_int n)) }
   ensures { ((=) (Uint32.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_int16

  use enum.Uint32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Int16.to_int n)) }
  
end

module Safe_bit_uint16_of_Safe_bit_int8

  use enum.Uint16 
  
  use enum.Int8 
  
  use Bit_uint16_of_Bit_int8 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint16.t
   requires {
     ((Bit_uint16.in_bounds (Int8.to_int n)) \/
     (Bit_uint16_of_Bit_int8.is_safe n)) }
   ensures {
     (((=) (Uint16.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int8.cast_modulo n))) }
  
end

module Unsafe_bit_uint16_of_Unsafe_bit_int8

  use enum.Uint16 
  
  use enum.Int8 
  
  use Bit_uint16_of_Bit_int8 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int8.cast_modulo n))) }
  
end

module Safe_uint16_of_Safe_int8

  use enum.Uint16 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint16.t
   requires { (Uint16.in_bounds (Int8.to_int n)) }
   ensures { ((=) (Uint16.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_int8

  use enum.Uint16 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint16.t
   requires { true } ensures { ((=) (Uint16.to_int result) (Int8.to_int n)) }
  
end

module Safe_bit_uint16_of_Safe_bit_int64

  use enum.Uint16 
  
  use enum.Int64 
  
  use Bit_uint16_of_Bit_int64 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint16.t
   requires {
     ((Bit_uint16.in_bounds (Int64.to_int n)) \/
     (Bit_uint16_of_Bit_int64.is_safe n)) }
   ensures {
     (((=) (Uint16.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int64.cast_modulo n))) }
  
end

module Unsafe_bit_uint16_of_Unsafe_bit_int64

  use enum.Uint16 
  
  use enum.Int64 
  
  use Bit_uint16_of_Bit_int64 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int64.cast_modulo n))) }
  
end

module Safe_uint16_of_Safe_int64

  use enum.Uint16 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint16.t
   requires { (Uint16.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Uint16.to_int result) (Int64.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_int64

  use enum.Uint16 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Int64.to_int n)) }
  
end

module Safe_bit_uint16_of_Safe_bit_int32

  use enum.Uint16 
  
  use enum.Int32 
  
  use Bit_uint16_of_Bit_int32 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint16.t
   requires {
     ((Bit_uint16.in_bounds (Int32.to_int n)) \/
     (Bit_uint16_of_Bit_int32.is_safe n)) }
   ensures {
     (((=) (Uint16.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int32.cast_modulo n))) }
  
end

module Unsafe_bit_uint16_of_Unsafe_bit_int32

  use enum.Uint16 
  
  use enum.Int32 
  
  use Bit_uint16_of_Bit_int32 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int32.cast_modulo n))) }
  
end

module Safe_uint16_of_Safe_int32

  use enum.Uint16 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint16.t
   requires { (Uint16.in_bounds (Int32.to_int n)) }
   ensures { ((=) (Uint16.to_int result) (Int32.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_int32

  use enum.Uint16 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Int32.to_int n)) }
  
end

module Safe_bit_uint16_of_Safe_bit_int16

  use enum.Uint16 
  
  use enum.Int16 
  
  use Bit_uint16_of_Bit_int16 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint16.t
   requires {
     ((Bit_uint16.in_bounds (Int16.to_int n)) \/
     (Bit_uint16_of_Bit_int16.is_safe n)) }
   ensures {
     (((=) (Uint16.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int16.cast_modulo n))) }
  
end

module Unsafe_bit_uint16_of_Unsafe_bit_int16

  use enum.Uint16 
  
  use enum.Int16 
  
  use Bit_uint16_of_Bit_int16 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int16.cast_modulo n))) }
  
end

module Safe_uint16_of_Safe_int16

  use enum.Uint16 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint16.t
   requires { (Uint16.in_bounds (Int16.to_int n)) }
   ensures { ((=) (Uint16.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_int16

  use enum.Uint16 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Int16.to_int n)) }
  
end

module Safe_bit_int8_of_Safe_bit_int64

  use enum.Int8 
  
  use enum.Int64 
  
  use Bit_int8_of_Bit_int64 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Int64.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Int8.t
   requires {
     ((Bit_int8.in_bounds (Int64.to_int n)) \/
     (Bit_int8_of_Bit_int64.is_safe n)) }
   ensures {
     (((=) (Int8.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_int64.cast_modulo n))) }
  
end

module Unsafe_bit_int8_of_Unsafe_bit_int64

  use enum.Int8 
  
  use enum.Int64 
  
  use Bit_int8_of_Bit_int64 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Int64.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_int64.cast_modulo n))) }
  
end

module Safe_int8_of_Safe_int64

  use enum.Int8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Int8.t
   requires { (Int8.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Int8.to_int result) (Int64.to_int n)) }
  
end

module Unsafe_int8_of_Unsafe_int64

  use enum.Int8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Int8.t
   requires { true } ensures { ((=) (Int8.to_int result) (Int64.to_int n)) }
  
end

module Safe_bit_int8_of_Safe_bit_int32

  use enum.Int8 
  
  use enum.Int32 
  
  use Bit_int8_of_Bit_int32 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Int32.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Int8.t
   requires {
     ((Bit_int8.in_bounds (Int32.to_int n)) \/
     (Bit_int8_of_Bit_int32.is_safe n)) }
   ensures {
     (((=) (Int8.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_int32.cast_modulo n))) }
  
end

module Unsafe_bit_int8_of_Unsafe_bit_int32

  use enum.Int8 
  
  use enum.Int32 
  
  use Bit_int8_of_Bit_int32 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Int32.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_int32.cast_modulo n))) }
  
end

module Safe_int8_of_Safe_int32

  use enum.Int8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Int8.t
   requires { (Int8.in_bounds (Int32.to_int n)) }
   ensures { ((=) (Int8.to_int result) (Int32.to_int n)) }
  
end

module Unsafe_int8_of_Unsafe_int32

  use enum.Int8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Int8.t
   requires { true } ensures { ((=) (Int8.to_int result) (Int32.to_int n)) }
  
end

module Safe_bit_int8_of_Safe_bit_int16

  use enum.Int8 
  
  use enum.Int16 
  
  use Bit_int8_of_Bit_int16 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Int16.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Int8.t
   requires {
     ((Bit_int8.in_bounds (Int16.to_int n)) \/
     (Bit_int8_of_Bit_int16.is_safe n)) }
   ensures {
     (((=) (Int8.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_int16.cast_modulo n))) }
  
end

module Unsafe_bit_int8_of_Unsafe_bit_int16

  use enum.Int8 
  
  use enum.Int16 
  
  use Bit_int8_of_Bit_int16 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Int16.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_int16.cast_modulo n))) }
  
end

module Safe_int8_of_Safe_int16

  use enum.Int8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Int8.t
   requires { (Int8.in_bounds (Int16.to_int n)) }
   ensures { ((=) (Int8.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_int8_of_Unsafe_int16

  use enum.Int8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Int8.t
   requires { true } ensures { ((=) (Int8.to_int result) (Int16.to_int n)) }
  
end

module Safe_bit_int64_of_Safe_bit_int32

  use enum.Int64 
  
  use enum.Int32 
  
  use Bit_int64_of_Bit_int32 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Int32.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_int32.cast_modulo n))) }
  
end

module Unsafe_bit_int64_of_Unsafe_bit_int32

  use enum.Int64 
  
  use enum.Int32 
  
  use Bit_int64_of_Bit_int32 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Int32.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_int32.cast_modulo n))) }
  
end

module Safe_int64_of_Safe_int32

  use enum.Int64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Int32.to_int n)) }
  
end

module Unsafe_int64_of_Unsafe_int32

  use enum.Int64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Int32.to_int n)) }
  
end

module Safe_bit_int64_of_Safe_bit_int16

  use enum.Int64 
  
  use enum.Int16 
  
  use Bit_int64_of_Bit_int16 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Int16.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_int16.cast_modulo n))) }
  
end

module Unsafe_bit_int64_of_Unsafe_bit_int16

  use enum.Int64 
  
  use enum.Int16 
  
  use Bit_int64_of_Bit_int16 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Int16.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_int16.cast_modulo n))) }
  
end

module Safe_int64_of_Safe_int16

  use enum.Int64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_int64_of_Unsafe_int16

  use enum.Int64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Int16.to_int n)) }
  
end

module Safe_bit_int32_of_Safe_bit_int16

  use enum.Int32 
  
  use enum.Int16 
  
  use Bit_int32_of_Bit_int16 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Int16.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_int16.cast_modulo n))) }
  
end

module Unsafe_bit_int32_of_Unsafe_bit_int16

  use enum.Int32 
  
  use enum.Int16 
  
  use Bit_int32_of_Bit_int16 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Int16.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_int16.cast_modulo n))) }
  
end

module Safe_int32_of_Safe_int16

  use enum.Int32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Int32.t
   requires { true } ensures { ((=) (Int32.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_int32_of_Unsafe_int16

  use enum.Int32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Int32.t
   requires { true } ensures { ((=) (Int32.to_int result) (Int16.to_int n)) }
  
end

theory Logic_empty_map

  use import core.Voidp 
  
  use import Root___anonstruct_Map_24 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  predicate empty_map (map_24 : (pointer __anonstruct_Map_24))
  (__anonstruct_Map_24_count_map_24_17_at_L : (memory __anonstruct_Map_24
  Int32.t)) (__anonstruct_Map_24_capacity_map_24_17_at_L : (memory
  __anonstruct_Map_24 Int32.t)) (__anonstruct_Map_24_items_map_24_17_at_L :
  (memory __anonstruct_Map_24 (pointer voidP)))
  (__anonstruct_Item_23_existent_items_60_at_L : (memory voidP Int32.t))
  =
     ((Int32.(=) (select __anonstruct_Map_24_count_map_24_17_at_L map_24)
      (#"map_c.jc" 237 22 34# "expl:Integer cast" (Int32.of_int (0))))
     /\
     (forall i_9 : int.
      ((((<=) (0) i_9) /\
       ((<) i_9
       (Int32.to_int
       (select __anonstruct_Map_24_capacity_map_24_17_at_L map_24)))) ->
       (Int32.(=)
       (select __anonstruct_Item_23_existent_items_60_at_L
       (shift (select __anonstruct_Map_24_items_map_24_17_at_L map_24) i_9))
       (#"map_c.jc" 240 44 56# "expl:Integer cast" (Int32.of_int (0)))))))
  
  
end

theory Logic_full

  use import Root___anonstruct_Map_24 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  predicate full (map_25 : (pointer __anonstruct_Map_24))
  (__anonstruct_Map_24_count_map_25_18_at_L : (memory __anonstruct_Map_24
  Int32.t)) (__anonstruct_Map_24_capacity_map_25_18_at_L : (memory
  __anonstruct_Map_24 Int32.t))
  =
     (Int32.(=) (select __anonstruct_Map_24_capacity_map_25_18_at_L map_25)
     (select __anonstruct_Map_24_count_map_25_18_at_L map_25))
  
  
end

theory Logic_has_item

  use import core.Voidp 
  
  use import Root___anonstruct_Value_22 
  
  use import Root___anonstruct_Map_24 
  
  use import Root___anonstruct_Key_21 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  predicate has_item (map_27 : (pointer __anonstruct_Map_24)) (key_0 :
  (pointer __anonstruct_Key_21)) (value : (pointer __anonstruct_Value_22))
  (__anonstruct_Map_24_capacity_map_27_21_at_L1 : (memory __anonstruct_Map_24
  Int32.t)) (__anonstruct_Map_24_items_map_27_21_at_L1 : (memory
  __anonstruct_Map_24 (pointer voidP)))
  (__anonstruct_Item_23_existent_items_62_at_L1 : (memory voidP Int32.t))
  (__anonstruct_Item_23_value_2_items_62_at_L1 : (memory voidP (pointer
  __anonstruct_Value_22))) (__anonstruct_Item_23_key_2_items_62_at_L1 :
  (memory voidP (pointer __anonstruct_Key_21)))
  (__anonstruct_Value_22_d_items_62_at_L1 : (memory __anonstruct_Value_22
  Int32.t)) (__anonstruct_Value_22_d_value_23_at_L2 : (memory
  __anonstruct_Value_22 Int32.t)) (__anonstruct_Value_22_c_items_62_at_L1 :
  (memory __anonstruct_Value_22 Int32.t))
  (__anonstruct_Value_22_c_value_23_at_L2 : (memory __anonstruct_Value_22
  Int32.t)) (__anonstruct_Key_21_b_items_62_at_L1 : (memory
  __anonstruct_Key_21 Int32.t)) (__anonstruct_Key_21_b_key_0_22_at_L2 :
  (memory __anonstruct_Key_21 Int32.t)) (__anonstruct_Key_21_a_items_62_at_L1
  : (memory __anonstruct_Key_21 Int32.t))
  (__anonstruct_Key_21_a_key_0_22_at_L2 : (memory __anonstruct_Key_21
  Int32.t))
  =
     (exists i_11 : int.
      (((<=) (0) i_11) /\
      (((<) i_11
       (Int32.to_int
       (select __anonstruct_Map_24_capacity_map_27_21_at_L1 map_27)))
      /\
      ((not
       (Int32.(=)
       (select __anonstruct_Item_23_existent_items_62_at_L1
       (shift (select __anonstruct_Map_24_items_map_27_21_at_L1 map_27) i_11))
       (#"map_c.jc" 258 54 66# "expl:Integer cast" (Int32.of_int (0)))))
      /\
      ((Int32.(=)
       (select __anonstruct_Key_21_a_items_62_at_L1
       (select __anonstruct_Item_23_key_2_items_62_at_L1
       (shift (select __anonstruct_Map_24_items_map_27_21_at_L1 map_27) i_11)))
       (select __anonstruct_Key_21_a_key_0_22_at_L2 key_0))
      /\
      ((Int32.(=)
       (select __anonstruct_Key_21_b_items_62_at_L1
       (select __anonstruct_Item_23_key_2_items_62_at_L1
       (shift (select __anonstruct_Map_24_items_map_27_21_at_L1 map_27) i_11)))
       (select __anonstruct_Key_21_b_key_0_22_at_L2 key_0))
      /\
      ((Int32.(=)
       (select __anonstruct_Value_22_c_items_62_at_L1
       (select __anonstruct_Item_23_value_2_items_62_at_L1
       (shift (select __anonstruct_Map_24_items_map_27_21_at_L1 map_27) i_11)))
       (select __anonstruct_Value_22_c_value_23_at_L2 value))
      /\
      (Int32.(=)
      (select __anonstruct_Value_22_d_items_62_at_L1
      (select __anonstruct_Item_23_value_2_items_62_at_L1
      (shift (select __anonstruct_Map_24_items_map_27_21_at_L1 map_27) i_11)))
      (select __anonstruct_Value_22_d_value_23_at_L2 value)))))))))
  
  
end

theory Logic_item_exists_t

  use import core.Voidp 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  predicate item_exists_t (it : (pointer voidP))
  (__anonstruct_Item_23_existent_it_24_at_L : (memory voidP Int32.t))
  =
     (Int32.(=) (select __anonstruct_Item_23_existent_it_24_at_L it)
     (#"map_c.jc" 265 23 35# "expl:Integer cast" (Int32.of_int (1))))
  
  
end

theory Logic_get_key_t

  use import core.Voidp 
  
  use import Root___anonstruct_Key_21 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use why3.Bool.Bool 
  
  function get_key_t (it_0 : (pointer voidP))
  (__anonstruct_Item_23_key_2_it_0_25_at_L : (memory voidP (pointer
  __anonstruct_Key_21))) : (pointer __anonstruct_Key_21)
  = (select __anonstruct_Item_23_key_2_it_0_25_at_L it_0)
  
  
end

theory Logic_get_value_t

  use import core.Voidp 
  
  use import Root___anonstruct_Value_22 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use why3.Bool.Bool 
  
  function get_value_t (it_1 : (pointer voidP))
  (__anonstruct_Item_23_value_2_it_1_27_at_L : (memory voidP (pointer
  __anonstruct_Value_22))) : (pointer __anonstruct_Value_22)
  = (select __anonstruct_Item_23_value_2_it_1_27_at_L it_1)
  
  
end

theory Logic_get_item_t

  use import core.Voidp 
  
  use import Root___anonstruct_Map_24 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use why3.Bool.Bool 
  
  function get_item_t (map_28 : (pointer __anonstruct_Map_24)) (idx_0 : int)
  (__anonstruct_Map_24_items_map_28_29_at_L : (memory __anonstruct_Map_24
  (pointer voidP))) : (pointer voidP)
  = (shift (select __anonstruct_Map_24_items_map_28_29_at_L map_28) idx_0)
  
  
end

module Function_finalizeMap

  use import core.Voidp 
  
  use import Struct___anonstruct_Item_23 
  
  use import Root___anonstruct_Value_22 
  
  use import Root___anonstruct_Map_24 
  
  use import Root___anonstruct_Key_21 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val finalizeMap
  (map_0 : (pointer __anonstruct_Map_24)) 
   (voidP_items_68_alloc_table : ref (alloc_table voidP)) 
    (__anonstruct_Value_22_items_68_alloc_table : ref (alloc_table
     __anonstruct_Value_22)) 
     (__anonstruct_Key_21_items_68_alloc_table : ref (alloc_table
      __anonstruct_Key_21)) 
      (__anonstruct_Map_24_items_map_0_33 : ref (memory __anonstruct_Map_24
       (pointer voidP))) 
       (__anonstruct_Map_24_map_0_33_alloc_table : (alloc_table
        __anonstruct_Map_24)) 
        (__anonstruct_Map_24_count_map_0_33 : (memory __anonstruct_Map_24
         Int32.t)) 
         (__anonstruct_Map_24_capacity_map_0_33 : (memory __anonstruct_Map_24
          Int32.t)) 
          (__anonstruct_Item_23_existent_items_68 : (memory voidP Int32.t)) 
           (__anonstruct_Item_23_value_2_items_68 : (memory voidP (pointer
            __anonstruct_Value_22))) 
            (__anonstruct_Item_23_key_2_items_68 : (memory voidP (pointer
             __anonstruct_Key_21))) 
             (__anonstruct_Key_21_b_items_68 : (memory __anonstruct_Key_21
              Int32.t)) 
              (__anonstruct_Key_21_a_items_68 : (memory __anonstruct_Key_21
               Int32.t)) : unit
               requires { true } reads {
               __anonstruct_Key_21_items_68_alloc_table,
               __anonstruct_Map_24_items_map_0_33,
               __anonstruct_Value_22_items_68_alloc_table,
               voidP_items_68_alloc_table } writes {
               __anonstruct_Key_21_items_68_alloc_table,
               __anonstruct_Map_24_items_map_0_33,
               __anonstruct_Value_22_items_68_alloc_table,
               voidP_items_68_alloc_table }
               ensures {
                 (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 43 12 40#
                 "expl:Ensures clause"
                 (fresh_alloc_struct___anonstruct_Item_23
                 (select (old !__anonstruct_Map_24_items_map_0_33) map_0) (0)
                 !__anonstruct_Key_21_items_68_alloc_table
                 !__anonstruct_Value_22_items_68_alloc_table
                 !voidP_items_68_alloc_table
                 __anonstruct_Item_23_key_2_items_68
                 __anonstruct_Item_23_value_2_items_68)) }
  
end

module Function_finalizeMap_safe

  use import core.Voidp 
  
  use import Struct___anonstruct_Item_23 
  
  use import Root___anonstruct_Value_22 
  
  use import Root___anonstruct_Map_24 
  
  use import Root___anonstruct_Key_21 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_valid_map 
  
  use enum.Int32 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val finalizeMap
  (map_0 : (pointer __anonstruct_Map_24)) 
   (voidP_items_68_alloc_table : ref (alloc_table voidP)) 
    (__anonstruct_Value_22_items_68_alloc_table : ref (alloc_table
     __anonstruct_Value_22)) 
     (__anonstruct_Key_21_items_68_alloc_table : ref (alloc_table
      __anonstruct_Key_21)) 
      (__anonstruct_Map_24_items_map_0_33 : ref (memory __anonstruct_Map_24
       (pointer voidP))) 
       (__anonstruct_Map_24_map_0_33_alloc_table : (alloc_table
        __anonstruct_Map_24)) 
        (__anonstruct_Map_24_count_map_0_33 : (memory __anonstruct_Map_24
         Int32.t)) 
         (__anonstruct_Map_24_capacity_map_0_33 : (memory __anonstruct_Map_24
          Int32.t)) 
          (__anonstruct_Item_23_existent_items_68 : (memory voidP Int32.t)) 
           (__anonstruct_Item_23_value_2_items_68 : (memory voidP (pointer
            __anonstruct_Value_22))) 
            (__anonstruct_Item_23_key_2_items_68 : (memory voidP (pointer
             __anonstruct_Key_21))) 
             (__anonstruct_Key_21_b_items_68 : (memory __anonstruct_Key_21
              Int32.t)) 
              (__anonstruct_Key_21_a_items_68 : (memory __anonstruct_Key_21
               Int32.t)) : unit
               requires {
                 ("expl:Internal"
                 (#"map_c.jc" 308 12 102# "expl:Requires clause"
                 ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 41 13 30#
                  "expl:Requires clause"
                  (is_valid_map map_0 !voidP_items_68_alloc_table
                  !__anonstruct_Value_22_items_68_alloc_table
                  __anonstruct_Map_24_map_0_33_alloc_table
                  !__anonstruct_Key_21_items_68_alloc_table
                  __anonstruct_Map_24_count_map_0_33
                  __anonstruct_Map_24_capacity_map_0_33
                  !__anonstruct_Map_24_items_map_0_33
                  __anonstruct_Item_23_existent_items_68
                  __anonstruct_Item_23_value_2_items_68
                  __anonstruct_Item_23_key_2_items_68
                  __anonstruct_Key_21_b_items_68
                  __anonstruct_Key_21_a_items_68))
                 /\
                 (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 42 13 34#
                 "expl:Requires clause"
                 (#"map_c.jc" 308 12 102# "expl:Requires clause"
                 ((#"map_c.jc" 308 12 102# "expl:Requires clause"
                  (strict_left_valid_struct___anonstruct_Item_23
                  (select !__anonstruct_Map_24_items_map_0_33 map_0) (0)
                  !__anonstruct_Key_21_items_68_alloc_table
                  !__anonstruct_Value_22_items_68_alloc_table
                  !voidP_items_68_alloc_table
                  __anonstruct_Item_23_key_2_items_68
                  __anonstruct_Item_23_value_2_items_68))
                 /\
                 (#"map_c.jc" 308 12 102# "expl:Requires clause"
                 (right_valid_struct___anonstruct_Item_23
                 (select !__anonstruct_Map_24_items_map_0_33 map_0)
                 (Int.(-_) 1) !__anonstruct_Key_21_items_68_alloc_table
                 !__anonstruct_Value_22_items_68_alloc_table
                 !voidP_items_68_alloc_table
                 __anonstruct_Item_23_key_2_items_68
                 __anonstruct_Item_23_value_2_items_68)))))))) }
               reads { __anonstruct_Key_21_items_68_alloc_table,
               __anonstruct_Map_24_items_map_0_33,
               __anonstruct_Value_22_items_68_alloc_table,
               voidP_items_68_alloc_table } writes {
               __anonstruct_Key_21_items_68_alloc_table,
               __anonstruct_Map_24_items_map_0_33,
               __anonstruct_Value_22_items_68_alloc_table,
               voidP_items_68_alloc_table }
               ensures {
                 (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 43 12 40#
                 "expl:Ensures clause"
                 (fresh_alloc_struct___anonstruct_Item_23
                 (select (old !__anonstruct_Map_24_items_map_0_33) map_0) (0)
                 !__anonstruct_Key_21_items_68_alloc_table
                 !__anonstruct_Value_22_items_68_alloc_table
                 !voidP_items_68_alloc_table
                 __anonstruct_Item_23_key_2_items_68
                 __anonstruct_Item_23_value_2_items_68)) }
  
end

module Function_removeElement

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import Root___anonstruct_Value_22 
  
  use import Root___anonstruct_Map_24 
  
  use import Root___anonstruct_Key_21 
  
  use import ref.Ref 
  
  use import core.Pset_range 
  
  use import core.Pset_deref 
  
  use import core.Pset 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_valid_map 
  
  use import Logic_has_key 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import Axiomatic_ItemsCount 
  
  use import core.Assigns 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val removeElement
  (map_3_0 : (pointer __anonstruct_Map_24)) 
   (key_1 : (pointer __anonstruct_Key_21)) 
    (value_1 : (pointer __anonstruct_Value_22)) 
     (__anonstruct_Map_24_count_map_3_34 : ref (memory __anonstruct_Map_24
      Int32.t)) 
      (__anonstruct_Map_24_items_map_3_34 : ref (memory __anonstruct_Map_24
       (pointer voidP))) 
       (__anonstruct_Item_23_existent_items_70 : ref (memory voidP Int32.t)) 
        (__anonstruct_Value_22_d_items_70 : ref (memory __anonstruct_Value_22
         Int32.t)) 
         (__anonstruct_Value_22_d_value_1_36 : ref (memory
          __anonstruct_Value_22 Int32.t)) 
          (__anonstruct_Value_22_c_items_70 : ref (memory
           __anonstruct_Value_22 Int32.t)) 
           (__anonstruct_Value_22_c_value_1_36 : ref (memory
            __anonstruct_Value_22 Int32.t)) 
            (__anonstruct_Key_21_b_items_70 : ref (memory __anonstruct_Key_21
             Int32.t)) 
             (__anonstruct_Key_21_a_items_70 : ref (memory
              __anonstruct_Key_21 Int32.t)) 
              (voidP_items_70_alloc_table : (alloc_table voidP)) 
               (__anonstruct_Value_22_items_70_alloc_table : (alloc_table
                __anonstruct_Value_22)) 
                (__anonstruct_Value_22_value_1_36_alloc_table : (alloc_table
                 __anonstruct_Value_22)) 
                 (__anonstruct_Map_24_map_3_34_alloc_table : (alloc_table
                  __anonstruct_Map_24)) 
                  (__anonstruct_Key_21_items_70_alloc_table : (alloc_table
                   __anonstruct_Key_21)) 
                   (__anonstruct_Key_21_key_1_35_alloc_table : (alloc_table
                    __anonstruct_Key_21)) 
                    (voidP_items_70_tag_table : (tag_table voidP)) 
                     (__anonstruct_Map_24_capacity_map_3_34 : (memory
                      __anonstruct_Map_24 Int32.t)) 
                      (__anonstruct_Item_23_value_2_items_70 : (memory voidP
                       (pointer __anonstruct_Value_22))) 
                       (__anonstruct_Item_23_key_2_items_70 : (memory voidP
                        (pointer __anonstruct_Key_21))) 
                        (__anonstruct_Key_21_b_key_1_35 : (memory
                         __anonstruct_Key_21 Int32.t)) 
                         (__anonstruct_Key_21_a_key_1_35 : (memory
                          __anonstruct_Key_21 Int32.t)) : Int32.t
                          requires { true } reads {
                          __anonstruct_Item_23_existent_items_70,
                          __anonstruct_Key_21_a_items_70,
                          __anonstruct_Key_21_b_items_70,
                          __anonstruct_Map_24_count_map_3_34,
                          __anonstruct_Map_24_items_map_3_34,
                          __anonstruct_Value_22_c_items_70,
                          __anonstruct_Value_22_c_value_1_36,
                          __anonstruct_Value_22_d_items_70,
                          __anonstruct_Value_22_d_value_1_36 } writes {
                          __anonstruct_Item_23_existent_items_70,
                          __anonstruct_Key_21_a_items_70,
                          __anonstruct_Key_21_b_items_70,
                          __anonstruct_Map_24_count_map_3_34,
                          __anonstruct_Map_24_items_map_3_34,
                          __anonstruct_Value_22_c_items_70,
                          __anonstruct_Value_22_c_value_1_36,
                          __anonstruct_Value_22_d_items_70,
                          __anonstruct_Value_22_d_value_1_36 }
                          ensures {
                            ((((((((((#"map_c.jc" 337 10 382#
                                     "expl:Assigns clause"
                                     (not_assigns
                                     __anonstruct_Key_21_items_70_alloc_table
                                     __anonstruct_Key_21_items_70_alloc_table
                                     (old !__anonstruct_Key_21_a_items_70)
                                     !__anonstruct_Key_21_a_items_70
                                     (pset_deref
                                     __anonstruct_Item_23_key_2_items_70
                                     (pset_range
                                     (pset_deref (old
                                     !__anonstruct_Map_24_items_map_3_34)
                                     (pset_singleton map_3_0)) (0)
                                     (Int.(-)
                                     (Int32.to_int
                                     (select
                                     __anonstruct_Map_24_capacity_map_3_34
                                     map_3_0)) (1))))))
                                    /\
                                    (#"map_c.jc" 337 10 382#
                                    "expl:Assigns clause"
                                    (not_assigns
                                    __anonstruct_Key_21_items_70_alloc_table
                                    __anonstruct_Key_21_items_70_alloc_table
                                    (old !__anonstruct_Key_21_b_items_70)
                                    !__anonstruct_Key_21_b_items_70
                                    (pset_deref
                                    __anonstruct_Item_23_key_2_items_70
                                    (pset_range
                                    (pset_deref (old
                                    !__anonstruct_Map_24_items_map_3_34)
                                    (pset_singleton map_3_0)) (0)
                                    (Int.(-)
                                    (Int32.to_int
                                    (select
                                    __anonstruct_Map_24_capacity_map_3_34
                                    map_3_0)) (1)))))))
                                   /\
                                   (#"map_c.jc" 337 10 382#
                                   "expl:Assigns clause"
                                   (not_assigns
                                   __anonstruct_Value_22_value_1_36_alloc_table
                                   __anonstruct_Value_22_value_1_36_alloc_table
                                   (old !__anonstruct_Value_22_c_value_1_36)
                                   !__anonstruct_Value_22_c_value_1_36
                                   (pset_singleton value_1))))
                                  /\
                                  (#"map_c.jc" 337 10 382#
                                  "expl:Assigns clause"
                                  (not_assigns
                                  __anonstruct_Value_22_items_70_alloc_table
                                  __anonstruct_Value_22_items_70_alloc_table
                                  (old !__anonstruct_Value_22_c_items_70)
                                  !__anonstruct_Value_22_c_items_70
                                  (pset_deref
                                  __anonstruct_Item_23_value_2_items_70
                                  (pset_range
                                  (pset_deref (old
                                  !__anonstruct_Map_24_items_map_3_34)
                                  (pset_singleton map_3_0)) (0)
                                  (Int.(-)
                                  (Int32.to_int
                                  (select
                                  __anonstruct_Map_24_capacity_map_3_34
                                  map_3_0)) (1)))))))
                                 /\
                                 (#"map_c.jc" 337 10 382#
                                 "expl:Assigns clause"
                                 (not_assigns
                                 __anonstruct_Value_22_value_1_36_alloc_table
                                 __anonstruct_Value_22_value_1_36_alloc_table
                                 (old !__anonstruct_Value_22_d_value_1_36)
                                 !__anonstruct_Value_22_d_value_1_36
                                 (pset_singleton value_1))))
                                /\
                                (#"map_c.jc" 337 10 382#
                                "expl:Assigns clause"
                                (not_assigns
                                __anonstruct_Value_22_items_70_alloc_table
                                __anonstruct_Value_22_items_70_alloc_table
                                (old !__anonstruct_Value_22_d_items_70)
                                !__anonstruct_Value_22_d_items_70
                                (pset_deref
                                __anonstruct_Item_23_value_2_items_70
                                (pset_range
                                (pset_deref (old
                                !__anonstruct_Map_24_items_map_3_34)
                                (pset_singleton map_3_0)) (0)
                                (Int.(-)
                                (Int32.to_int
                                (select __anonstruct_Map_24_capacity_map_3_34
                                map_3_0)) (1)))))))
                               /\
                               (#"map_c.jc" 337 10 382# "expl:Assigns clause"
                               (not_assigns voidP_items_70_alloc_table
                               voidP_items_70_alloc_table (old
                               !__anonstruct_Item_23_existent_items_70)
                               !__anonstruct_Item_23_existent_items_70
                               (pset_range
                               (pset_deref (old
                               !__anonstruct_Map_24_items_map_3_34)
                               (pset_singleton map_3_0)) (0)
                               (Int.(-)
                               (Int32.to_int
                               (select __anonstruct_Map_24_capacity_map_3_34
                               map_3_0)) (1))))))
                              /\
                              (#"map_c.jc" 337 10 382# "expl:Assigns clause"
                              (not_assigns
                              __anonstruct_Map_24_map_3_34_alloc_table
                              __anonstruct_Map_24_map_3_34_alloc_table (old
                              !__anonstruct_Map_24_items_map_3_34)
                              !__anonstruct_Map_24_items_map_3_34 pset_empty)))
                             /\
                             (#"map_c.jc" 337 10 382# "expl:Assigns clause"
                             (not_assigns
                             __anonstruct_Map_24_map_3_34_alloc_table
                             __anonstruct_Map_24_map_3_34_alloc_table (old
                             !__anonstruct_Map_24_count_map_3_34)
                             !__anonstruct_Map_24_count_map_3_34
                             (pset_singleton map_3_0))))
                            /\
                            (exists __anonstruct_Key_21_b_key_1_72 : (memory
                             __anonstruct_Key_21 Int32.t).
                             (exists __anonstruct_Key_21_a_key_1_72 : (memory
                              __anonstruct_Key_21 Int32.t).
                              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                              "expl:Ensures clause"
                              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                              "expl:Ensures clause"
                              ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                               "expl:Ensures clause"
                               (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                               "expl:Ensures clause"
                               ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                                "expl:Ensures clause"
                                ((<=)
                                (offset_min
                                __anonstruct_Key_21_key_1_35_alloc_table
                                key_1) (0)))
                               /\
                               (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                               "expl:Ensures clause"
                               ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                                "expl:Ensures clause"
                                ((>=)
                                (offset_max
                                __anonstruct_Key_21_key_1_35_alloc_table
                                key_1) (0)))
                               /\
                               (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                               "expl:Ensures clause" ((=) true true)))))))
                              /\
                              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                              "expl:Ensures clause"
                              ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 73 12 23#
                               "expl:Ensures clause"
                               (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                               "expl:Ensures clause"
                               ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                                "expl:Ensures clause"
                                ((<=)
                                (offset_min
                                __anonstruct_Map_24_map_3_34_alloc_table
                                map_3_0) (0)))
                               /\
                               (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                               "expl:Ensures clause"
                               ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                                "expl:Ensures clause"
                                ((>=)
                                (offset_max
                                __anonstruct_Map_24_map_3_34_alloc_table
                                map_3_0) (0)))
                               /\
                               (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                               "expl:Ensures clause" ((=) true true)))))))
                              /\
                              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                              "expl:Ensures clause"
                              ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 74 12 29#
                               "expl:Ensures clause"
                               (is_valid_map map_3_0
                               voidP_items_70_alloc_table
                               __anonstruct_Value_22_items_70_alloc_table
                               __anonstruct_Map_24_map_3_34_alloc_table
                               __anonstruct_Key_21_items_70_alloc_table
                               !__anonstruct_Map_24_count_map_3_34
                               __anonstruct_Map_24_capacity_map_3_34
                               !__anonstruct_Map_24_items_map_3_34
                               !__anonstruct_Item_23_existent_items_70
                               __anonstruct_Item_23_value_2_items_70
                               __anonstruct_Item_23_key_2_items_70
                               !__anonstruct_Key_21_b_items_70
                               !__anonstruct_Key_21_a_items_70))
                              /\
                              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                              "expl:Ensures clause"
                              ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 75 12 45#
                               "expl:Ensures clause"
                               ((((<=)
                                 (offset_min
                                 __anonstruct_Value_22_value_1_36_alloc_table
                                 value_1) (0))
                                /\
                                (((>=)
                                 (offset_max
                                 __anonstruct_Value_22_value_1_36_alloc_table
                                 value_1) (0))
                                /\ ((=) true true)))
                               \/ ((=) value_1 null)))
                              /\
                              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                              "expl:Ensures clause"
                              ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 76 13 49#
                               "expl:Ensures clause"
                               (Int32.(=)
                               (select __anonstruct_Map_24_capacity_map_3_34
                               map_3_0)
                               (select __anonstruct_Map_24_capacity_map_3_34
                               map_3_0)))
                              /\
                              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                              "expl:Ensures clause"
                              ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 77 12 169#
                               "expl:Ensures clause"
                               ((not
                                (has_key map_3_0 key_1
                                __anonstruct_Map_24_capacity_map_3_34 (old
                                !__anonstruct_Map_24_items_map_3_34) (old
                                !__anonstruct_Item_23_existent_items_70)
                                __anonstruct_Item_23_key_2_items_70 (old
                                !__anonstruct_Key_21_b_items_70)
                                __anonstruct_Key_21_b_key_1_35 (old
                                !__anonstruct_Key_21_a_items_70)
                                __anonstruct_Key_21_a_key_1_35)) ->
                                ((Int32.(=) result (#"map_c.jc" 367 56 68#
                                 "expl:Integer cast" (Int32.of_int (0)))) ->
                                 ((Int32.(=)
                                  (select (old
                                  !__anonstruct_Map_24_count_map_3_34)
                                  map_3_0)
                                  (select !__anonstruct_Map_24_count_map_3_34
                                  map_3_0))
                                 /\
                                 ((=)
                                 (count map_3_0 (0)
                                 (Int32.to_int
                                 (select
                                 __anonstruct_Map_24_capacity_map_3_34
                                 map_3_0))
                                 !__anonstruct_Map_24_items_map_3_34
                                 !__anonstruct_Item_23_existent_items_70)
                                 (count map_3_0 (0)
                                 (Int32.to_int
                                 (select
                                 __anonstruct_Map_24_capacity_map_3_34
                                 map_3_0))
                                 !__anonstruct_Map_24_items_map_3_34
                                 !__anonstruct_Item_23_existent_items_70))))))
                              /\
                              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                              "expl:Ensures clause"
                              ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 78 12 176#
                               "expl:Ensures clause"
                               ((has_key map_3_0 key_1
                                __anonstruct_Map_24_capacity_map_3_34 (old
                                !__anonstruct_Map_24_items_map_3_34) (old
                                !__anonstruct_Item_23_existent_items_70)
                                __anonstruct_Item_23_key_2_items_70 (old
                                !__anonstruct_Key_21_b_items_70)
                                __anonstruct_Key_21_b_key_1_35 (old
                                !__anonstruct_Key_21_a_items_70)
                                __anonstruct_Key_21_a_key_1_35) ->
                                ((Int32.(=) result (#"map_c.jc" 378 58 70#
                                 "expl:Integer cast" (Int32.of_int (1)))) ->
                                 (((=)
                                  (Int32.to_int
                                  (select (old
                                  !__anonstruct_Map_24_count_map_3_34)
                                  map_3_0))
                                  (Int.(+)
                                  (Int32.to_int
                                  (select !__anonstruct_Map_24_count_map_3_34
                                  map_3_0)) (1)))
                                 /\
                                 ((=)
                                 (count map_3_0 (0)
                                 (Int32.to_int
                                 (select
                                 __anonstruct_Map_24_capacity_map_3_34
                                 map_3_0))
                                 !__anonstruct_Map_24_items_map_3_34
                                 !__anonstruct_Item_23_existent_items_70)
                                 (Int.(+)
                                 (count map_3_0 (0)
                                 (Int32.to_int
                                 (select
                                 __anonstruct_Map_24_capacity_map_3_34
                                 map_3_0))
                                 !__anonstruct_Map_24_items_map_3_34
                                 !__anonstruct_Item_23_existent_items_70)
                                 (1)))))))
                              /\
                              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                              "expl:Ensures clause"
                              ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 79 12 432#
                               "expl:Ensures clause"
                               ((has_key map_3_0 key_1
                                __anonstruct_Map_24_capacity_map_3_34 (old
                                !__anonstruct_Map_24_items_map_3_34) (old
                                !__anonstruct_Item_23_existent_items_70)
                                __anonstruct_Item_23_key_2_items_70 (old
                                !__anonstruct_Key_21_b_items_70)
                                __anonstruct_Key_21_b_key_1_35 (old
                                !__anonstruct_Key_21_a_items_70)
                                __anonstruct_Key_21_a_key_1_35) ->
                                ((Int32.(=) result (#"map_c.jc" 391 60 72#
                                 "expl:Integer cast" (Int32.of_int (1)))) ->
                                 (exists i_12 : int.
                                  (((<=) (0) i_12) /\
                                  (((<) i_12
                                   (Int32.to_int
                                   (select
                                   __anonstruct_Map_24_capacity_map_3_34
                                   map_3_0)))
                                  /\
                                  ((Int32.(=)
                                   (select (old
                                   !__anonstruct_Key_21_a_items_70)
                                   (select
                                   __anonstruct_Item_23_key_2_items_70
                                   (shift
                                   (select (old
                                   !__anonstruct_Map_24_items_map_3_34)
                                   map_3_0) i_12)))
                                   (select __anonstruct_Key_21_a_key_1_35
                                   key_1))
                                  /\
                                  ((Int32.(=)
                                   (select (old
                                   !__anonstruct_Key_21_b_items_70)
                                   (select
                                   __anonstruct_Item_23_key_2_items_70
                                   (shift
                                   (select (old
                                   !__anonstruct_Map_24_items_map_3_34)
                                   map_3_0) i_12)))
                                   (select __anonstruct_Key_21_b_key_1_35
                                   key_1))
                                  /\
                                  ((Int32.(=)
                                   (select (old
                                   !__anonstruct_Item_23_existent_items_70)
                                   (shift
                                   (select (old
                                   !__anonstruct_Map_24_items_map_3_34)
                                   map_3_0) i_12)) (#"map_c.jc" 404 56 68#
                                   "expl:Integer cast" (Int32.of_int (1))))
                                  /\
                                  (exists j_2 : int.
                                   (((<=) (0) j_2) /\
                                   (((<) j_2
                                    (Int32.to_int
                                    (select
                                    __anonstruct_Map_24_capacity_map_3_34
                                    map_3_0)))
                                   /\
                                   ((Int32.(=)
                                    (select
                                    !__anonstruct_Item_23_existent_items_70
                                    (shift
                                    (select
                                    !__anonstruct_Map_24_items_map_3_34
                                    map_3_0) j_2)) (#"map_c.jc" 411 61 73#
                                    "expl:Integer cast" (Int32.of_int (0))))
                                   /\
                                   ((Int32.(=)
                                    (select !__anonstruct_Key_21_a_items_70
                                    (select
                                    __anonstruct_Item_23_key_2_items_70
                                    (shift
                                    (select
                                    !__anonstruct_Map_24_items_map_3_34
                                    map_3_0) j_2)))
                                    (select __anonstruct_Key_21_a_key_1_35
                                    key_1))
                                   /\
                                   (Int32.(=)
                                   (select !__anonstruct_Key_21_b_items_70
                                   (select
                                   __anonstruct_Item_23_key_2_items_70
                                   (shift
                                   (select
                                   !__anonstruct_Map_24_items_map_3_34
                                   map_3_0) j_2)))
                                   (select __anonstruct_Key_21_b_key_1_35
                                   key_1))))))))))))))))
                              /\
                              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                              "expl:Ensures clause"
                              ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 84 12 432#
                               "expl:Ensures clause"
                               (forall i_13 : int.
                                (((<=) (0) i_13) /\
                                (((<) i_13
                                 (Int32.to_int
                                 (select
                                 __anonstruct_Map_24_capacity_map_3_34
                                 map_3_0)))
                                /\
                                (((not
                                  (Int32.(=)
                                  (select (old
                                  !__anonstruct_Key_21_a_items_70)
                                  (select __anonstruct_Item_23_key_2_items_70
                                  (shift
                                  (select (old
                                  !__anonstruct_Map_24_items_map_3_34)
                                  map_3_0) i_13)))
                                  (select __anonstruct_Key_21_a_key_1_35
                                  key_1)))
                                 \/
                                 (not
                                 (Int32.(=)
                                 (select (old
                                 !__anonstruct_Key_21_b_items_70)
                                 (select __anonstruct_Item_23_key_2_items_70
                                 (shift
                                 (select (old
                                 !__anonstruct_Map_24_items_map_3_34)
                                 map_3_0) i_13)))
                                 (select __anonstruct_Key_21_b_key_1_35
                                 key_1))))
                                /\
                                ((Int32.(=)
                                 (select (old
                                 !__anonstruct_Item_23_existent_items_70)
                                 (shift
                                 (select (old
                                 !__anonstruct_Map_24_items_map_3_34)
                                 map_3_0) i_13)) (#"map_c.jc" 429 54 66#
                                 "expl:Integer cast" (Int32.of_int (1))))
                                /\
                                (exists j_3 : int.
                                 (((<=) (0) j_3) /\
                                 (((<) j_3
                                  (Int32.to_int
                                  (select
                                  __anonstruct_Map_24_capacity_map_3_34
                                  map_3_0)))
                                 /\
                                 ((Int32.(=)
                                  (select (old
                                  !__anonstruct_Key_21_a_items_70)
                                  (select __anonstruct_Item_23_key_2_items_70
                                  (shift
                                  (select (old
                                  !__anonstruct_Map_24_items_map_3_34)
                                  map_3_0) i_13)))
                                  (select !__anonstruct_Key_21_a_items_70
                                  (select __anonstruct_Item_23_key_2_items_70
                                  (shift
                                  (select !__anonstruct_Map_24_items_map_3_34
                                  map_3_0) j_3))))
                                 /\
                                 ((Int32.(=)
                                  (select (old
                                  !__anonstruct_Key_21_b_items_70)
                                  (select __anonstruct_Item_23_key_2_items_70
                                  (shift
                                  (select (old
                                  !__anonstruct_Map_24_items_map_3_34)
                                  map_3_0) i_13)))
                                  (select !__anonstruct_Key_21_b_items_70
                                  (select __anonstruct_Item_23_key_2_items_70
                                  (shift
                                  (select !__anonstruct_Map_24_items_map_3_34
                                  map_3_0) j_3))))
                                 /\
                                 (Int32.(=)
                                 (select (old
                                 !__anonstruct_Item_23_existent_items_70)
                                 (shift
                                 (select (old
                                 !__anonstruct_Map_24_items_map_3_34)
                                 map_3_0) i_13))
                                 (select
                                 !__anonstruct_Item_23_existent_items_70
                                 (shift
                                 (select !__anonstruct_Map_24_items_map_3_34
                                 map_3_0) j_3))))))))))))))
                              /\
                              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                              "expl:Ensures clause"
                              ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 88 12 90#
                               "expl:Ensures clause"
                               (forall key_1_0 : (pointer
                                __anonstruct_Key_21).
                                ((not
                                 (has_key map_3_0 key_1_0
                                 __anonstruct_Map_24_capacity_map_3_34 (old
                                 !__anonstruct_Map_24_items_map_3_34) (old
                                 !__anonstruct_Item_23_existent_items_70)
                                 __anonstruct_Item_23_key_2_items_70 (old
                                 !__anonstruct_Key_21_b_items_70)
                                 __anonstruct_Key_21_b_key_1_72 (old
                                 !__anonstruct_Key_21_a_items_70)
                                 __anonstruct_Key_21_a_key_1_72)) ->
                                 (not
                                 (has_key map_3_0 key_1_0
                                 __anonstruct_Map_24_capacity_map_3_34
                                 !__anonstruct_Map_24_items_map_3_34
                                 !__anonstruct_Item_23_existent_items_70
                                 __anonstruct_Item_23_key_2_items_70
                                 !__anonstruct_Key_21_b_items_70
                                 __anonstruct_Key_21_b_key_1_72
                                 !__anonstruct_Key_21_a_items_70
                                 __anonstruct_Key_21_a_key_1_72)))))
                              /\
                              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                              "expl:Ensures clause"
                              ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 90 12 53#
                               "expl:Ensures clause"
                               ((Int32.(=) result (#"map_c.jc" 451 64 76#
                                "expl:Integer cast" (Int32.of_int (0)))) ->
                                ((=) value_1 value_1)))
                              /\
                              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                              "expl:Ensures clause"
                              ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 91 12 81#
                               "expl:Ensures clause"
                               (((Int32.(=) result (#"map_c.jc" 455 57 69#
                                 "expl:Integer cast" (Int32.of_int (1))))
                                /\ ((=) value_1 null)) ->
                                ((Int32.(=)
                                 (select !__anonstruct_Value_22_c_value_1_36
                                 value_1)
                                 (select (old
                                 !__anonstruct_Value_22_c_value_1_36)
                                 value_1))
                                /\
                                (Int32.(=)
                                (select !__anonstruct_Value_22_d_value_1_36
                                value_1)
                                (select (old
                                !__anonstruct_Value_22_d_value_1_36) value_1)))))
                              /\
                              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 92 12 220#
                              "expl:Ensures clause"
                              (((Int32.(=) result (#"map_c.jc" 463 58 70#
                                "expl:Integer cast" (Int32.of_int (1))))
                               /\ (not ((=) value_1 null))) ->
                               (exists i_14 : int.
                                (((<=) (0) i_14) /\
                                (((<) i_14
                                 (Int32.to_int
                                 (select
                                 __anonstruct_Map_24_capacity_map_3_34
                                 map_3_0)))
                                /\
                                ((Int32.(=)
                                 (select (old
                                 !__anonstruct_Value_22_c_items_70)
                                 (select
                                 __anonstruct_Item_23_value_2_items_70
                                 (shift
                                 (select (old
                                 !__anonstruct_Map_24_items_map_3_34)
                                 map_3_0) i_14)))
                                 (select !__anonstruct_Value_22_c_value_1_36
                                 value_1))
                                /\
                                (Int32.(=)
                                (select (old
                                !__anonstruct_Value_22_d_items_70)
                                (select __anonstruct_Item_23_value_2_items_70
                                (shift
                                (select (old
                                !__anonstruct_Map_24_items_map_3_34) map_3_0)
                                i_14)))
                                (select !__anonstruct_Value_22_d_value_1_36
                                value_1)))))))))))))))))))))))))))))))))))) }
  
end

module Function_removeElement_safe

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import Root___anonstruct_Value_22 
  
  use import Root___anonstruct_Map_24 
  
  use import Root___anonstruct_Key_21 
  
  use import ref.Ref 
  
  use import core.Pset_range 
  
  use import core.Pset_deref 
  
  use import core.Pset 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_valid_map 
  
  use import Logic_has_key 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import Axiomatic_ItemsCount 
  
  use import core.Assigns 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val removeElement
  (map_3_0 : (pointer __anonstruct_Map_24)) 
   (key_1 : (pointer __anonstruct_Key_21)) 
    (value_1 : (pointer __anonstruct_Value_22)) 
     (__anonstruct_Map_24_count_map_3_34 : ref (memory __anonstruct_Map_24
      Int32.t)) 
      (__anonstruct_Map_24_items_map_3_34 : ref (memory __anonstruct_Map_24
       (pointer voidP))) 
       (__anonstruct_Item_23_existent_items_70 : ref (memory voidP Int32.t)) 
        (__anonstruct_Value_22_d_items_70 : ref (memory __anonstruct_Value_22
         Int32.t)) 
         (__anonstruct_Value_22_d_value_1_36 : ref (memory
          __anonstruct_Value_22 Int32.t)) 
          (__anonstruct_Value_22_c_items_70 : ref (memory
           __anonstruct_Value_22 Int32.t)) 
           (__anonstruct_Value_22_c_value_1_36 : ref (memory
            __anonstruct_Value_22 Int32.t)) 
            (__anonstruct_Key_21_b_items_70 : ref (memory __anonstruct_Key_21
             Int32.t)) 
             (__anonstruct_Key_21_a_items_70 : ref (memory
              __anonstruct_Key_21 Int32.t)) 
              (voidP_items_70_alloc_table : (alloc_table voidP)) 
               (__anonstruct_Value_22_items_70_alloc_table : (alloc_table
                __anonstruct_Value_22)) 
                (__anonstruct_Value_22_value_1_36_alloc_table : (alloc_table
                 __anonstruct_Value_22)) 
                 (__anonstruct_Map_24_map_3_34_alloc_table : (alloc_table
                  __anonstruct_Map_24)) 
                  (__anonstruct_Key_21_items_70_alloc_table : (alloc_table
                   __anonstruct_Key_21)) 
                   (__anonstruct_Key_21_key_1_35_alloc_table : (alloc_table
                    __anonstruct_Key_21)) 
                    (voidP_items_70_tag_table : (tag_table voidP)) 
                     (__anonstruct_Map_24_capacity_map_3_34 : (memory
                      __anonstruct_Map_24 Int32.t)) 
                      (__anonstruct_Item_23_value_2_items_70 : (memory voidP
                       (pointer __anonstruct_Value_22))) 
                       (__anonstruct_Item_23_key_2_items_70 : (memory voidP
                        (pointer __anonstruct_Key_21))) 
                        (__anonstruct_Key_21_b_key_1_35 : (memory
                         __anonstruct_Key_21 Int32.t)) 
                         (__anonstruct_Key_21_a_key_1_35 : (memory
                          __anonstruct_Key_21 Int32.t)) : Int32.t
                          requires {
                            ("expl:Internal"
                            (#"map_c.jc" 323 12 763# "expl:Requires clause"
                            ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 57 13 25#
                             "expl:Requires clause" (not ((=) map_3_0 null)))
                            /\
                            (#"map_c.jc" 323 12 763# "expl:Requires clause"
                            ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 58 13 25#
                             "expl:Requires clause" (not ((=) key_1 null)))
                            /\
                            (#"map_c.jc" 323 12 763# "expl:Requires clause"
                            ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 59 13 24#
                             "expl:Requires clause"
                             (#"map_c.jc" 323 12 763# "expl:Requires clause"
                             ((#"map_c.jc" 323 12 763# "expl:Requires clause"
                              ((<=)
                              (offset_min
                              __anonstruct_Key_21_key_1_35_alloc_table key_1)
                              (0)))
                             /\
                             (#"map_c.jc" 323 12 763# "expl:Requires clause"
                             ((#"map_c.jc" 323 12 763# "expl:Requires clause"
                              ((>=)
                              (offset_max
                              __anonstruct_Key_21_key_1_35_alloc_table key_1)
                              (0)))
                             /\
                             (#"map_c.jc" 323 12 763# "expl:Requires clause"
                             ((=) true true)))))))
                            /\
                            (#"map_c.jc" 323 12 763# "expl:Requires clause"
                            ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 60 13 26#
                             "expl:Requires clause"
                             (#"map_c.jc" 323 12 763# "expl:Requires clause"
                             ((#"map_c.jc" 323 12 763# "expl:Requires clause"
                              ((<=)
                              (offset_min
                              __anonstruct_Value_22_value_1_36_alloc_table
                              value_1) (0)))
                             /\
                             (#"map_c.jc" 323 12 763# "expl:Requires clause"
                             ((#"map_c.jc" 323 12 763# "expl:Requires clause"
                              ((>=)
                              (offset_max
                              __anonstruct_Value_22_value_1_36_alloc_table
                              value_1) (0)))
                             /\
                             (#"map_c.jc" 323 12 763# "expl:Requires clause"
                             ((=) true true)))))))
                            /\
                            (#"map_c.jc" 323 12 763# "expl:Requires clause"
                            ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 61 13 30#
                             "expl:Requires clause"
                             (is_valid_map map_3_0 voidP_items_70_alloc_table
                             __anonstruct_Value_22_items_70_alloc_table
                             __anonstruct_Map_24_map_3_34_alloc_table
                             __anonstruct_Key_21_items_70_alloc_table
                             !__anonstruct_Map_24_count_map_3_34
                             __anonstruct_Map_24_capacity_map_3_34
                             !__anonstruct_Map_24_items_map_3_34
                             !__anonstruct_Item_23_existent_items_70
                             __anonstruct_Item_23_value_2_items_70
                             __anonstruct_Item_23_key_2_items_70
                             !__anonstruct_Key_21_b_items_70
                             !__anonstruct_Key_21_a_items_70))
                            /\
                            (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 62 13 30#
                            "expl:Requires clause"
                            (Int32.(>)
                            (select __anonstruct_Map_24_capacity_map_3_34
                            map_3_0) (#"map_c.jc" 335 49 61#
                            "expl:Integer cast" (Int32.of_int (0))))))))))))))))
                            }
                          reads { __anonstruct_Item_23_existent_items_70,
                          __anonstruct_Key_21_a_items_70,
                          __anonstruct_Key_21_b_items_70,
                          __anonstruct_Map_24_count_map_3_34,
                          __anonstruct_Map_24_items_map_3_34,
                          __anonstruct_Value_22_c_items_70,
                          __anonstruct_Value_22_c_value_1_36,
                          __anonstruct_Value_22_d_items_70,
                          __anonstruct_Value_22_d_value_1_36 } writes {
                          __anonstruct_Item_23_existent_items_70,
                          __anonstruct_Key_21_a_items_70,
                          __anonstruct_Key_21_b_items_70,
                          __anonstruct_Map_24_count_map_3_34,
                          __anonstruct_Map_24_items_map_3_34,
                          __anonstruct_Value_22_c_items_70,
                          __anonstruct_Value_22_c_value_1_36,
                          __anonstruct_Value_22_d_items_70,
                          __anonstruct_Value_22_d_value_1_36 }
                          ensures {
                            ((((((((((#"map_c.jc" 337 10 382#
                                     "expl:Assigns clause"
                                     (not_assigns
                                     __anonstruct_Key_21_items_70_alloc_table
                                     __anonstruct_Key_21_items_70_alloc_table
                                     (old !__anonstruct_Key_21_a_items_70)
                                     !__anonstruct_Key_21_a_items_70
                                     (pset_deref
                                     __anonstruct_Item_23_key_2_items_70
                                     (pset_range
                                     (pset_deref (old
                                     !__anonstruct_Map_24_items_map_3_34)
                                     (pset_singleton map_3_0)) (0)
                                     (Int.(-)
                                     (Int32.to_int
                                     (select
                                     __anonstruct_Map_24_capacity_map_3_34
                                     map_3_0)) (1))))))
                                    /\
                                    (#"map_c.jc" 337 10 382#
                                    "expl:Assigns clause"
                                    (not_assigns
                                    __anonstruct_Key_21_items_70_alloc_table
                                    __anonstruct_Key_21_items_70_alloc_table
                                    (old !__anonstruct_Key_21_b_items_70)
                                    !__anonstruct_Key_21_b_items_70
                                    (pset_deref
                                    __anonstruct_Item_23_key_2_items_70
                                    (pset_range
                                    (pset_deref (old
                                    !__anonstruct_Map_24_items_map_3_34)
                                    (pset_singleton map_3_0)) (0)
                                    (Int.(-)
                                    (Int32.to_int
                                    (select
                                    __anonstruct_Map_24_capacity_map_3_34
                                    map_3_0)) (1)))))))
                                   /\
                                   (#"map_c.jc" 337 10 382#
                                   "expl:Assigns clause"
                                   (not_assigns
                                   __anonstruct_Value_22_value_1_36_alloc_table
                                   __anonstruct_Value_22_value_1_36_alloc_table
                                   (old !__anonstruct_Value_22_c_value_1_36)
                                   !__anonstruct_Value_22_c_value_1_36
                                   (pset_singleton value_1))))
                                  /\
                                  (#"map_c.jc" 337 10 382#
                                  "expl:Assigns clause"
                                  (not_assigns
                                  __anonstruct_Value_22_items_70_alloc_table
                                  __anonstruct_Value_22_items_70_alloc_table
                                  (old !__anonstruct_Value_22_c_items_70)
                                  !__anonstruct_Value_22_c_items_70
                                  (pset_deref
                                  __anonstruct_Item_23_value_2_items_70
                                  (pset_range
                                  (pset_deref (old
                                  !__anonstruct_Map_24_items_map_3_34)
                                  (pset_singleton map_3_0)) (0)
                                  (Int.(-)
                                  (Int32.to_int
                                  (select
                                  __anonstruct_Map_24_capacity_map_3_34
                                  map_3_0)) (1)))))))
                                 /\
                                 (#"map_c.jc" 337 10 382#
                                 "expl:Assigns clause"
                                 (not_assigns
                                 __anonstruct_Value_22_value_1_36_alloc_table
                                 __anonstruct_Value_22_value_1_36_alloc_table
                                 (old !__anonstruct_Value_22_d_value_1_36)
                                 !__anonstruct_Value_22_d_value_1_36
                                 (pset_singleton value_1))))
                                /\
                                (#"map_c.jc" 337 10 382#
                                "expl:Assigns clause"
                                (not_assigns
                                __anonstruct_Value_22_items_70_alloc_table
                                __anonstruct_Value_22_items_70_alloc_table
                                (old !__anonstruct_Value_22_d_items_70)
                                !__anonstruct_Value_22_d_items_70
                                (pset_deref
                                __anonstruct_Item_23_value_2_items_70
                                (pset_range
                                (pset_deref (old
                                !__anonstruct_Map_24_items_map_3_34)
                                (pset_singleton map_3_0)) (0)
                                (Int.(-)
                                (Int32.to_int
                                (select __anonstruct_Map_24_capacity_map_3_34
                                map_3_0)) (1)))))))
                               /\
                               (#"map_c.jc" 337 10 382# "expl:Assigns clause"
                               (not_assigns voidP_items_70_alloc_table
                               voidP_items_70_alloc_table (old
                               !__anonstruct_Item_23_existent_items_70)
                               !__anonstruct_Item_23_existent_items_70
                               (pset_range
                               (pset_deref (old
                               !__anonstruct_Map_24_items_map_3_34)
                               (pset_singleton map_3_0)) (0)
                               (Int.(-)
                               (Int32.to_int
                               (select __anonstruct_Map_24_capacity_map_3_34
                               map_3_0)) (1))))))
                              /\
                              (#"map_c.jc" 337 10 382# "expl:Assigns clause"
                              (not_assigns
                              __anonstruct_Map_24_map_3_34_alloc_table
                              __anonstruct_Map_24_map_3_34_alloc_table (old
                              !__anonstruct_Map_24_items_map_3_34)
                              !__anonstruct_Map_24_items_map_3_34 pset_empty)))
                             /\
                             (#"map_c.jc" 337 10 382# "expl:Assigns clause"
                             (not_assigns
                             __anonstruct_Map_24_map_3_34_alloc_table
                             __anonstruct_Map_24_map_3_34_alloc_table (old
                             !__anonstruct_Map_24_count_map_3_34)
                             !__anonstruct_Map_24_count_map_3_34
                             (pset_singleton map_3_0))))
                            /\
                            (exists __anonstruct_Key_21_b_key_1_72 : (memory
                             __anonstruct_Key_21 Int32.t).
                             (exists __anonstruct_Key_21_a_key_1_72 : (memory
                              __anonstruct_Key_21 Int32.t).
                              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                              "expl:Ensures clause"
                              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                              "expl:Ensures clause"
                              ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                               "expl:Ensures clause"
                               (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                               "expl:Ensures clause"
                               ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                                "expl:Ensures clause"
                                ((<=)
                                (offset_min
                                __anonstruct_Key_21_key_1_35_alloc_table
                                key_1) (0)))
                               /\
                               (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                               "expl:Ensures clause"
                               ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                                "expl:Ensures clause"
                                ((>=)
                                (offset_max
                                __anonstruct_Key_21_key_1_35_alloc_table
                                key_1) (0)))
                               /\
                               (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                               "expl:Ensures clause" ((=) true true)))))))
                              /\
                              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                              "expl:Ensures clause"
                              ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 73 12 23#
                               "expl:Ensures clause"
                               (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                               "expl:Ensures clause"
                               ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                                "expl:Ensures clause"
                                ((<=)
                                (offset_min
                                __anonstruct_Map_24_map_3_34_alloc_table
                                map_3_0) (0)))
                               /\
                               (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                               "expl:Ensures clause"
                               ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                                "expl:Ensures clause"
                                ((>=)
                                (offset_max
                                __anonstruct_Map_24_map_3_34_alloc_table
                                map_3_0) (0)))
                               /\
                               (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                               "expl:Ensures clause" ((=) true true)))))))
                              /\
                              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                              "expl:Ensures clause"
                              ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 74 12 29#
                               "expl:Ensures clause"
                               (is_valid_map map_3_0
                               voidP_items_70_alloc_table
                               __anonstruct_Value_22_items_70_alloc_table
                               __anonstruct_Map_24_map_3_34_alloc_table
                               __anonstruct_Key_21_items_70_alloc_table
                               !__anonstruct_Map_24_count_map_3_34
                               __anonstruct_Map_24_capacity_map_3_34
                               !__anonstruct_Map_24_items_map_3_34
                               !__anonstruct_Item_23_existent_items_70
                               __anonstruct_Item_23_value_2_items_70
                               __anonstruct_Item_23_key_2_items_70
                               !__anonstruct_Key_21_b_items_70
                               !__anonstruct_Key_21_a_items_70))
                              /\
                              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                              "expl:Ensures clause"
                              ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 75 12 45#
                               "expl:Ensures clause"
                               ((((<=)
                                 (offset_min
                                 __anonstruct_Value_22_value_1_36_alloc_table
                                 value_1) (0))
                                /\
                                (((>=)
                                 (offset_max
                                 __anonstruct_Value_22_value_1_36_alloc_table
                                 value_1) (0))
                                /\ ((=) true true)))
                               \/ ((=) value_1 null)))
                              /\
                              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                              "expl:Ensures clause"
                              ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 76 13 49#
                               "expl:Ensures clause"
                               (Int32.(=)
                               (select __anonstruct_Map_24_capacity_map_3_34
                               map_3_0)
                               (select __anonstruct_Map_24_capacity_map_3_34
                               map_3_0)))
                              /\
                              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                              "expl:Ensures clause"
                              ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 77 12 169#
                               "expl:Ensures clause"
                               ((not
                                (has_key map_3_0 key_1
                                __anonstruct_Map_24_capacity_map_3_34 (old
                                !__anonstruct_Map_24_items_map_3_34) (old
                                !__anonstruct_Item_23_existent_items_70)
                                __anonstruct_Item_23_key_2_items_70 (old
                                !__anonstruct_Key_21_b_items_70)
                                __anonstruct_Key_21_b_key_1_35 (old
                                !__anonstruct_Key_21_a_items_70)
                                __anonstruct_Key_21_a_key_1_35)) ->
                                ((Int32.(=) result (#"map_c.jc" 367 56 68#
                                 "expl:Integer cast" (Int32.of_int (0)))) ->
                                 ((Int32.(=)
                                  (select (old
                                  !__anonstruct_Map_24_count_map_3_34)
                                  map_3_0)
                                  (select !__anonstruct_Map_24_count_map_3_34
                                  map_3_0))
                                 /\
                                 ((=)
                                 (count map_3_0 (0)
                                 (Int32.to_int
                                 (select
                                 __anonstruct_Map_24_capacity_map_3_34
                                 map_3_0))
                                 !__anonstruct_Map_24_items_map_3_34
                                 !__anonstruct_Item_23_existent_items_70)
                                 (count map_3_0 (0)
                                 (Int32.to_int
                                 (select
                                 __anonstruct_Map_24_capacity_map_3_34
                                 map_3_0))
                                 !__anonstruct_Map_24_items_map_3_34
                                 !__anonstruct_Item_23_existent_items_70))))))
                              /\
                              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                              "expl:Ensures clause"
                              ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 78 12 176#
                               "expl:Ensures clause"
                               ((has_key map_3_0 key_1
                                __anonstruct_Map_24_capacity_map_3_34 (old
                                !__anonstruct_Map_24_items_map_3_34) (old
                                !__anonstruct_Item_23_existent_items_70)
                                __anonstruct_Item_23_key_2_items_70 (old
                                !__anonstruct_Key_21_b_items_70)
                                __anonstruct_Key_21_b_key_1_35 (old
                                !__anonstruct_Key_21_a_items_70)
                                __anonstruct_Key_21_a_key_1_35) ->
                                ((Int32.(=) result (#"map_c.jc" 378 58 70#
                                 "expl:Integer cast" (Int32.of_int (1)))) ->
                                 (((=)
                                  (Int32.to_int
                                  (select (old
                                  !__anonstruct_Map_24_count_map_3_34)
                                  map_3_0))
                                  (Int.(+)
                                  (Int32.to_int
                                  (select !__anonstruct_Map_24_count_map_3_34
                                  map_3_0)) (1)))
                                 /\
                                 ((=)
                                 (count map_3_0 (0)
                                 (Int32.to_int
                                 (select
                                 __anonstruct_Map_24_capacity_map_3_34
                                 map_3_0))
                                 !__anonstruct_Map_24_items_map_3_34
                                 !__anonstruct_Item_23_existent_items_70)
                                 (Int.(+)
                                 (count map_3_0 (0)
                                 (Int32.to_int
                                 (select
                                 __anonstruct_Map_24_capacity_map_3_34
                                 map_3_0))
                                 !__anonstruct_Map_24_items_map_3_34
                                 !__anonstruct_Item_23_existent_items_70)
                                 (1)))))))
                              /\
                              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                              "expl:Ensures clause"
                              ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 79 12 432#
                               "expl:Ensures clause"
                               ((has_key map_3_0 key_1
                                __anonstruct_Map_24_capacity_map_3_34 (old
                                !__anonstruct_Map_24_items_map_3_34) (old
                                !__anonstruct_Item_23_existent_items_70)
                                __anonstruct_Item_23_key_2_items_70 (old
                                !__anonstruct_Key_21_b_items_70)
                                __anonstruct_Key_21_b_key_1_35 (old
                                !__anonstruct_Key_21_a_items_70)
                                __anonstruct_Key_21_a_key_1_35) ->
                                ((Int32.(=) result (#"map_c.jc" 391 60 72#
                                 "expl:Integer cast" (Int32.of_int (1)))) ->
                                 (exists i_12 : int.
                                  (((<=) (0) i_12) /\
                                  (((<) i_12
                                   (Int32.to_int
                                   (select
                                   __anonstruct_Map_24_capacity_map_3_34
                                   map_3_0)))
                                  /\
                                  ((Int32.(=)
                                   (select (old
                                   !__anonstruct_Key_21_a_items_70)
                                   (select
                                   __anonstruct_Item_23_key_2_items_70
                                   (shift
                                   (select (old
                                   !__anonstruct_Map_24_items_map_3_34)
                                   map_3_0) i_12)))
                                   (select __anonstruct_Key_21_a_key_1_35
                                   key_1))
                                  /\
                                  ((Int32.(=)
                                   (select (old
                                   !__anonstruct_Key_21_b_items_70)
                                   (select
                                   __anonstruct_Item_23_key_2_items_70
                                   (shift
                                   (select (old
                                   !__anonstruct_Map_24_items_map_3_34)
                                   map_3_0) i_12)))
                                   (select __anonstruct_Key_21_b_key_1_35
                                   key_1))
                                  /\
                                  ((Int32.(=)
                                   (select (old
                                   !__anonstruct_Item_23_existent_items_70)
                                   (shift
                                   (select (old
                                   !__anonstruct_Map_24_items_map_3_34)
                                   map_3_0) i_12)) (#"map_c.jc" 404 56 68#
                                   "expl:Integer cast" (Int32.of_int (1))))
                                  /\
                                  (exists j_2 : int.
                                   (((<=) (0) j_2) /\
                                   (((<) j_2
                                    (Int32.to_int
                                    (select
                                    __anonstruct_Map_24_capacity_map_3_34
                                    map_3_0)))
                                   /\
                                   ((Int32.(=)
                                    (select
                                    !__anonstruct_Item_23_existent_items_70
                                    (shift
                                    (select
                                    !__anonstruct_Map_24_items_map_3_34
                                    map_3_0) j_2)) (#"map_c.jc" 411 61 73#
                                    "expl:Integer cast" (Int32.of_int (0))))
                                   /\
                                   ((Int32.(=)
                                    (select !__anonstruct_Key_21_a_items_70
                                    (select
                                    __anonstruct_Item_23_key_2_items_70
                                    (shift
                                    (select
                                    !__anonstruct_Map_24_items_map_3_34
                                    map_3_0) j_2)))
                                    (select __anonstruct_Key_21_a_key_1_35
                                    key_1))
                                   /\
                                   (Int32.(=)
                                   (select !__anonstruct_Key_21_b_items_70
                                   (select
                                   __anonstruct_Item_23_key_2_items_70
                                   (shift
                                   (select
                                   !__anonstruct_Map_24_items_map_3_34
                                   map_3_0) j_2)))
                                   (select __anonstruct_Key_21_b_key_1_35
                                   key_1))))))))))))))))
                              /\
                              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                              "expl:Ensures clause"
                              ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 84 12 432#
                               "expl:Ensures clause"
                               (forall i_13 : int.
                                (((<=) (0) i_13) /\
                                (((<) i_13
                                 (Int32.to_int
                                 (select
                                 __anonstruct_Map_24_capacity_map_3_34
                                 map_3_0)))
                                /\
                                (((not
                                  (Int32.(=)
                                  (select (old
                                  !__anonstruct_Key_21_a_items_70)
                                  (select __anonstruct_Item_23_key_2_items_70
                                  (shift
                                  (select (old
                                  !__anonstruct_Map_24_items_map_3_34)
                                  map_3_0) i_13)))
                                  (select __anonstruct_Key_21_a_key_1_35
                                  key_1)))
                                 \/
                                 (not
                                 (Int32.(=)
                                 (select (old
                                 !__anonstruct_Key_21_b_items_70)
                                 (select __anonstruct_Item_23_key_2_items_70
                                 (shift
                                 (select (old
                                 !__anonstruct_Map_24_items_map_3_34)
                                 map_3_0) i_13)))
                                 (select __anonstruct_Key_21_b_key_1_35
                                 key_1))))
                                /\
                                ((Int32.(=)
                                 (select (old
                                 !__anonstruct_Item_23_existent_items_70)
                                 (shift
                                 (select (old
                                 !__anonstruct_Map_24_items_map_3_34)
                                 map_3_0) i_13)) (#"map_c.jc" 429 54 66#
                                 "expl:Integer cast" (Int32.of_int (1))))
                                /\
                                (exists j_3 : int.
                                 (((<=) (0) j_3) /\
                                 (((<) j_3
                                  (Int32.to_int
                                  (select
                                  __anonstruct_Map_24_capacity_map_3_34
                                  map_3_0)))
                                 /\
                                 ((Int32.(=)
                                  (select (old
                                  !__anonstruct_Key_21_a_items_70)
                                  (select __anonstruct_Item_23_key_2_items_70
                                  (shift
                                  (select (old
                                  !__anonstruct_Map_24_items_map_3_34)
                                  map_3_0) i_13)))
                                  (select !__anonstruct_Key_21_a_items_70
                                  (select __anonstruct_Item_23_key_2_items_70
                                  (shift
                                  (select !__anonstruct_Map_24_items_map_3_34
                                  map_3_0) j_3))))
                                 /\
                                 ((Int32.(=)
                                  (select (old
                                  !__anonstruct_Key_21_b_items_70)
                                  (select __anonstruct_Item_23_key_2_items_70
                                  (shift
                                  (select (old
                                  !__anonstruct_Map_24_items_map_3_34)
                                  map_3_0) i_13)))
                                  (select !__anonstruct_Key_21_b_items_70
                                  (select __anonstruct_Item_23_key_2_items_70
                                  (shift
                                  (select !__anonstruct_Map_24_items_map_3_34
                                  map_3_0) j_3))))
                                 /\
                                 (Int32.(=)
                                 (select (old
                                 !__anonstruct_Item_23_existent_items_70)
                                 (shift
                                 (select (old
                                 !__anonstruct_Map_24_items_map_3_34)
                                 map_3_0) i_13))
                                 (select
                                 !__anonstruct_Item_23_existent_items_70
                                 (shift
                                 (select !__anonstruct_Map_24_items_map_3_34
                                 map_3_0) j_3))))))))))))))
                              /\
                              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                              "expl:Ensures clause"
                              ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 88 12 90#
                               "expl:Ensures clause"
                               (forall key_1_0 : (pointer
                                __anonstruct_Key_21).
                                ((not
                                 (has_key map_3_0 key_1_0
                                 __anonstruct_Map_24_capacity_map_3_34 (old
                                 !__anonstruct_Map_24_items_map_3_34) (old
                                 !__anonstruct_Item_23_existent_items_70)
                                 __anonstruct_Item_23_key_2_items_70 (old
                                 !__anonstruct_Key_21_b_items_70)
                                 __anonstruct_Key_21_b_key_1_72 (old
                                 !__anonstruct_Key_21_a_items_70)
                                 __anonstruct_Key_21_a_key_1_72)) ->
                                 (not
                                 (has_key map_3_0 key_1_0
                                 __anonstruct_Map_24_capacity_map_3_34
                                 !__anonstruct_Map_24_items_map_3_34
                                 !__anonstruct_Item_23_existent_items_70
                                 __anonstruct_Item_23_key_2_items_70
                                 !__anonstruct_Key_21_b_items_70
                                 __anonstruct_Key_21_b_key_1_72
                                 !__anonstruct_Key_21_a_items_70
                                 __anonstruct_Key_21_a_key_1_72)))))
                              /\
                              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                              "expl:Ensures clause"
                              ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 90 12 53#
                               "expl:Ensures clause"
                               ((Int32.(=) result (#"map_c.jc" 451 64 76#
                                "expl:Integer cast" (Int32.of_int (0)))) ->
                                ((=) value_1 value_1)))
                              /\
                              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 72 12 23#
                              "expl:Ensures clause"
                              ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 91 12 81#
                               "expl:Ensures clause"
                               (((Int32.(=) result (#"map_c.jc" 455 57 69#
                                 "expl:Integer cast" (Int32.of_int (1))))
                                /\ ((=) value_1 null)) ->
                                ((Int32.(=)
                                 (select !__anonstruct_Value_22_c_value_1_36
                                 value_1)
                                 (select (old
                                 !__anonstruct_Value_22_c_value_1_36)
                                 value_1))
                                /\
                                (Int32.(=)
                                (select !__anonstruct_Value_22_d_value_1_36
                                value_1)
                                (select (old
                                !__anonstruct_Value_22_d_value_1_36) value_1)))))
                              /\
                              (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 92 12 220#
                              "expl:Ensures clause"
                              (((Int32.(=) result (#"map_c.jc" 463 58 70#
                                "expl:Integer cast" (Int32.of_int (1))))
                               /\ (not ((=) value_1 null))) ->
                               (exists i_14 : int.
                                (((<=) (0) i_14) /\
                                (((<) i_14
                                 (Int32.to_int
                                 (select
                                 __anonstruct_Map_24_capacity_map_3_34
                                 map_3_0)))
                                /\
                                ((Int32.(=)
                                 (select (old
                                 !__anonstruct_Value_22_c_items_70)
                                 (select
                                 __anonstruct_Item_23_value_2_items_70
                                 (shift
                                 (select (old
                                 !__anonstruct_Map_24_items_map_3_34)
                                 map_3_0) i_14)))
                                 (select !__anonstruct_Value_22_c_value_1_36
                                 value_1))
                                /\
                                (Int32.(=)
                                (select (old
                                !__anonstruct_Value_22_d_items_70)
                                (select __anonstruct_Item_23_value_2_items_70
                                (shift
                                (select (old
                                !__anonstruct_Map_24_items_map_3_34) map_3_0)
                                i_14)))
                                (select !__anonstruct_Value_22_d_value_1_36
                                value_1)))))))))))))))))))))))))))))))))))) }
  
end

module Function_getElement

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import Root___anonstruct_Value_22 
  
  use import Root___anonstruct_Map_24 
  
  use import Root___anonstruct_Key_21 
  
  use import ref.Ref 
  
  use import core.Pset 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_valid_map 
  
  use import Logic_has_key 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import core.Assigns 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val getElement
  (map_1_0 : (pointer __anonstruct_Map_24)) 
   (key_0_0 : (pointer __anonstruct_Key_21)) 
    (value_0 : (pointer __anonstruct_Value_22)) 
     (__anonstruct_Value_22_d_value_0_39 : ref (memory __anonstruct_Value_22
      Int32.t)) 
      (__anonstruct_Value_22_c_value_0_39 : ref (memory __anonstruct_Value_22
       Int32.t)) 
       (voidP_items_80_alloc_table : (alloc_table voidP)) 
        (__anonstruct_Value_22_items_80_alloc_table : (alloc_table
         __anonstruct_Value_22)) 
         (__anonstruct_Value_22_value_0_39_alloc_table : (alloc_table
          __anonstruct_Value_22)) 
          (__anonstruct_Map_24_map_1_37_alloc_table : (alloc_table
           __anonstruct_Map_24)) 
           (__anonstruct_Key_21_items_80_alloc_table : (alloc_table
            __anonstruct_Key_21)) 
            (__anonstruct_Key_21_key_0_38_alloc_table : (alloc_table
             __anonstruct_Key_21)) 
             (voidP_items_80_tag_table : (tag_table voidP)) 
              (__anonstruct_Map_24_count_map_1_37 : (memory
               __anonstruct_Map_24 Int32.t)) 
               (__anonstruct_Map_24_capacity_map_1_37 : (memory
                __anonstruct_Map_24 Int32.t)) 
                (__anonstruct_Map_24_items_map_1_37 : (memory
                 __anonstruct_Map_24 (pointer voidP))) 
                 (__anonstruct_Item_23_existent_items_80 : (memory voidP
                  Int32.t)) 
                  (__anonstruct_Item_23_value_2_items_80 : (memory voidP
                   (pointer __anonstruct_Value_22))) 
                   (__anonstruct_Item_23_key_2_items_80 : (memory voidP
                    (pointer __anonstruct_Key_21))) 
                    (__anonstruct_Value_22_d_items_80 : (memory
                     __anonstruct_Value_22 Int32.t)) 
                     (__anonstruct_Value_22_c_items_80 : (memory
                      __anonstruct_Value_22 Int32.t)) 
                      (__anonstruct_Key_21_b_items_80 : (memory
                       __anonstruct_Key_21 Int32.t)) 
                       (__anonstruct_Key_21_b_key_0_38 : (memory
                        __anonstruct_Key_21 Int32.t)) 
                        (__anonstruct_Key_21_a_items_80 : (memory
                         __anonstruct_Key_21 Int32.t)) 
                         (__anonstruct_Key_21_a_key_0_38 : (memory
                          __anonstruct_Key_21 Int32.t)) : Int32.t
                          requires { true } writes {
                          __anonstruct_Value_22_c_value_0_39,
                          __anonstruct_Value_22_d_value_0_39 }
                          ensures {
                            (((#"map_c.jc" 772 10 32# "expl:Assigns clause"
                              (not_assigns
                              __anonstruct_Value_22_value_0_39_alloc_table
                              __anonstruct_Value_22_value_0_39_alloc_table
                              (old !__anonstruct_Value_22_c_value_0_39)
                              !__anonstruct_Value_22_c_value_0_39
                              (pset_singleton value_0)))
                             /\
                             (#"map_c.jc" 772 10 32# "expl:Assigns clause"
                             (not_assigns
                             __anonstruct_Value_22_value_0_39_alloc_table
                             __anonstruct_Value_22_value_0_39_alloc_table
                             (old !__anonstruct_Value_22_d_value_0_39)
                             !__anonstruct_Value_22_d_value_0_39
                             (pset_singleton value_0))))
                            /\
                            (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 116 12 53#
                            "expl:Ensures clause"
                            (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 116 12 53#
                            "expl:Ensures clause"
                            ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 116 12 53#
                             "expl:Ensures clause"
                             ((has_key map_1_0 key_0_0
                              __anonstruct_Map_24_capacity_map_1_37
                              __anonstruct_Map_24_items_map_1_37
                              __anonstruct_Item_23_existent_items_80
                              __anonstruct_Item_23_key_2_items_80
                              __anonstruct_Key_21_b_items_80
                              __anonstruct_Key_21_b_key_0_38
                              __anonstruct_Key_21_a_items_80
                              __anonstruct_Key_21_a_key_0_38) ->
                              (Int32.(=) result (#"map_c.jc" 776 45 57#
                              "expl:Integer cast" (Int32.of_int (1))))))
                            /\
                            (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 116 12 53#
                            "expl:Ensures clause"
                            ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 117 12 80#
                             "expl:Ensures clause"
                             ((not
                              (has_key map_1_0 key_0_0
                              __anonstruct_Map_24_capacity_map_1_37
                              __anonstruct_Map_24_items_map_1_37
                              __anonstruct_Item_23_existent_items_80
                              __anonstruct_Item_23_key_2_items_80
                              __anonstruct_Key_21_b_items_80
                              __anonstruct_Key_21_b_key_0_38
                              __anonstruct_Key_21_a_items_80
                              __anonstruct_Key_21_a_key_0_38)) ->
                              ((Int32.(=) result (#"map_c.jc" 779 48 60#
                               "expl:Integer cast" (Int32.of_int (0))))
                              /\ ((=) value_0 value_0))))
                            /\
                            (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 116 12 53#
                            "expl:Ensures clause"
                            ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 118 12 48#
                             "expl:Ensures clause"
                             (Int32.(=)
                             (select __anonstruct_Map_24_capacity_map_1_37
                             map_1_0)
                             (select __anonstruct_Map_24_capacity_map_1_37
                             map_1_0)))
                            /\
                            (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 116 12 53#
                            "expl:Ensures clause"
                            ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 119 12 42#
                             "expl:Ensures clause"
                             (Int32.(=)
                             (select __anonstruct_Map_24_count_map_1_37
                             map_1_0)
                             (select __anonstruct_Map_24_count_map_1_37
                             map_1_0)))
                            /\
                            (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 116 12 53#
                            "expl:Ensures clause"
                            ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 120 12 380#
                             "expl:Ensures clause"
                             (forall i_15_0 : int.
                              ((((<=) (0) i_15_0) /\
                               ((<) i_15_0
                               (Int32.to_int
                               (select __anonstruct_Map_24_capacity_map_1_37
                               map_1_0)))) ->
                               ((Int32.(=)
                                (select
                                __anonstruct_Item_23_existent_items_80
                                (shift
                                (select __anonstruct_Map_24_items_map_1_37
                                map_1_0) i_15_0))
                                (select
                                __anonstruct_Item_23_existent_items_80
                                (shift
                                (select __anonstruct_Map_24_items_map_1_37
                                map_1_0) i_15_0)))
                               /\
                               ((Int32.(=)
                                (select __anonstruct_Key_21_a_items_80
                                (select __anonstruct_Item_23_key_2_items_80
                                (shift
                                (select __anonstruct_Map_24_items_map_1_37
                                map_1_0) i_15_0)))
                                (select __anonstruct_Key_21_a_items_80
                                (select __anonstruct_Item_23_key_2_items_80
                                (shift
                                (select __anonstruct_Map_24_items_map_1_37
                                map_1_0) i_15_0))))
                               /\
                               ((Int32.(=)
                                (select __anonstruct_Key_21_b_items_80
                                (select __anonstruct_Item_23_key_2_items_80
                                (shift
                                (select __anonstruct_Map_24_items_map_1_37
                                map_1_0) i_15_0)))
                                (select __anonstruct_Key_21_b_items_80
                                (select __anonstruct_Item_23_key_2_items_80
                                (shift
                                (select __anonstruct_Map_24_items_map_1_37
                                map_1_0) i_15_0))))
                               /\
                               ((Int32.(=)
                                (select __anonstruct_Value_22_c_items_80
                                (select __anonstruct_Item_23_value_2_items_80
                                (shift
                                (select __anonstruct_Map_24_items_map_1_37
                                map_1_0) i_15_0)))
                                (select __anonstruct_Value_22_c_items_80
                                (select __anonstruct_Item_23_value_2_items_80
                                (shift
                                (select __anonstruct_Map_24_items_map_1_37
                                map_1_0) i_15_0))))
                               /\
                               (Int32.(=)
                               (select __anonstruct_Value_22_d_items_80
                               (select __anonstruct_Item_23_value_2_items_80
                               (shift
                               (select __anonstruct_Map_24_items_map_1_37
                               map_1_0) i_15_0)))
                               (select __anonstruct_Value_22_d_items_80
                               (select __anonstruct_Item_23_value_2_items_80
                               (shift
                               (select __anonstruct_Map_24_items_map_1_37
                               map_1_0) i_15_0)))))))))))
                            /\
                            (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 116 12 53#
                            "expl:Ensures clause"
                            ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 124 12 28#
                             "expl:Ensures clause" ((=) key_0_0 key_0_0))
                            /\
                            (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 125 12 29#
                            "expl:Ensures clause"
                            (is_valid_map map_1_0 voidP_items_80_alloc_table
                            __anonstruct_Value_22_items_80_alloc_table
                            __anonstruct_Map_24_map_1_37_alloc_table
                            __anonstruct_Key_21_items_80_alloc_table
                            __anonstruct_Map_24_count_map_1_37
                            __anonstruct_Map_24_capacity_map_1_37
                            __anonstruct_Map_24_items_map_1_37
                            __anonstruct_Item_23_existent_items_80
                            __anonstruct_Item_23_value_2_items_80
                            __anonstruct_Item_23_key_2_items_80
                            __anonstruct_Key_21_b_items_80
                            __anonstruct_Key_21_a_items_80)))))))))))))))) }
  
end

module Function_getElement_safe

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import Root___anonstruct_Value_22 
  
  use import Root___anonstruct_Map_24 
  
  use import Root___anonstruct_Key_21 
  
  use import ref.Ref 
  
  use import core.Pset 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_valid_map 
  
  use import Logic_has_key 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import core.Assigns 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val getElement
  (map_1_0 : (pointer __anonstruct_Map_24)) 
   (key_0_0 : (pointer __anonstruct_Key_21)) 
    (value_0 : (pointer __anonstruct_Value_22)) 
     (__anonstruct_Value_22_d_value_0_39 : ref (memory __anonstruct_Value_22
      Int32.t)) 
      (__anonstruct_Value_22_c_value_0_39 : ref (memory __anonstruct_Value_22
       Int32.t)) 
       (voidP_items_80_alloc_table : (alloc_table voidP)) 
        (__anonstruct_Value_22_items_80_alloc_table : (alloc_table
         __anonstruct_Value_22)) 
         (__anonstruct_Value_22_value_0_39_alloc_table : (alloc_table
          __anonstruct_Value_22)) 
          (__anonstruct_Map_24_map_1_37_alloc_table : (alloc_table
           __anonstruct_Map_24)) 
           (__anonstruct_Key_21_items_80_alloc_table : (alloc_table
            __anonstruct_Key_21)) 
            (__anonstruct_Key_21_key_0_38_alloc_table : (alloc_table
             __anonstruct_Key_21)) 
             (voidP_items_80_tag_table : (tag_table voidP)) 
              (__anonstruct_Map_24_count_map_1_37 : (memory
               __anonstruct_Map_24 Int32.t)) 
               (__anonstruct_Map_24_capacity_map_1_37 : (memory
                __anonstruct_Map_24 Int32.t)) 
                (__anonstruct_Map_24_items_map_1_37 : (memory
                 __anonstruct_Map_24 (pointer voidP))) 
                 (__anonstruct_Item_23_existent_items_80 : (memory voidP
                  Int32.t)) 
                  (__anonstruct_Item_23_value_2_items_80 : (memory voidP
                   (pointer __anonstruct_Value_22))) 
                   (__anonstruct_Item_23_key_2_items_80 : (memory voidP
                    (pointer __anonstruct_Key_21))) 
                    (__anonstruct_Value_22_d_items_80 : (memory
                     __anonstruct_Value_22 Int32.t)) 
                     (__anonstruct_Value_22_c_items_80 : (memory
                      __anonstruct_Value_22 Int32.t)) 
                      (__anonstruct_Key_21_b_items_80 : (memory
                       __anonstruct_Key_21 Int32.t)) 
                       (__anonstruct_Key_21_b_key_0_38 : (memory
                        __anonstruct_Key_21 Int32.t)) 
                        (__anonstruct_Key_21_a_items_80 : (memory
                         __anonstruct_Key_21 Int32.t)) 
                         (__anonstruct_Key_21_a_key_0_38 : (memory
                          __anonstruct_Key_21 Int32.t)) : Int32.t
                          requires {
                            ("expl:Internal"
                            (#"map_c.jc" 758 12 763# "expl:Requires clause"
                            ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 105 13 25#
                             "expl:Requires clause" (not ((=) map_1_0 null)))
                            /\
                            (#"map_c.jc" 758 12 763# "expl:Requires clause"
                            ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 106 13 25#
                             "expl:Requires clause" (not ((=) key_0_0 null)))
                            /\
                            (#"map_c.jc" 758 12 763# "expl:Requires clause"
                            ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 107 13 24#
                             "expl:Requires clause"
                             (#"map_c.jc" 758 12 763# "expl:Requires clause"
                             ((#"map_c.jc" 758 12 763# "expl:Requires clause"
                              ((<=)
                              (offset_min
                              __anonstruct_Key_21_key_0_38_alloc_table
                              key_0_0) (0)))
                             /\
                             (#"map_c.jc" 758 12 763# "expl:Requires clause"
                             ((#"map_c.jc" 758 12 763# "expl:Requires clause"
                              ((>=)
                              (offset_max
                              __anonstruct_Key_21_key_0_38_alloc_table
                              key_0_0) (0)))
                             /\
                             (#"map_c.jc" 758 12 763# "expl:Requires clause"
                             ((=) true true)))))))
                            /\
                            (#"map_c.jc" 758 12 763# "expl:Requires clause"
                            ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 108 13 26#
                             "expl:Requires clause"
                             (#"map_c.jc" 758 12 763# "expl:Requires clause"
                             ((#"map_c.jc" 758 12 763# "expl:Requires clause"
                              ((<=)
                              (offset_min
                              __anonstruct_Value_22_value_0_39_alloc_table
                              value_0) (0)))
                             /\
                             (#"map_c.jc" 758 12 763# "expl:Requires clause"
                             ((#"map_c.jc" 758 12 763# "expl:Requires clause"
                              ((>=)
                              (offset_max
                              __anonstruct_Value_22_value_0_39_alloc_table
                              value_0) (0)))
                             /\
                             (#"map_c.jc" 758 12 763# "expl:Requires clause"
                             ((=) true true)))))))
                            /\
                            (#"map_c.jc" 758 12 763# "expl:Requires clause"
                            ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 109 13 30#
                             "expl:Requires clause"
                             (is_valid_map map_1_0 voidP_items_80_alloc_table
                             __anonstruct_Value_22_items_80_alloc_table
                             __anonstruct_Map_24_map_1_37_alloc_table
                             __anonstruct_Key_21_items_80_alloc_table
                             __anonstruct_Map_24_count_map_1_37
                             __anonstruct_Map_24_capacity_map_1_37
                             __anonstruct_Map_24_items_map_1_37
                             __anonstruct_Item_23_existent_items_80
                             __anonstruct_Item_23_value_2_items_80
                             __anonstruct_Item_23_key_2_items_80
                             __anonstruct_Key_21_b_items_80
                             __anonstruct_Key_21_a_items_80))
                            /\
                            (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 110 13 30#
                            "expl:Requires clause"
                            (Int32.(>)
                            (select __anonstruct_Map_24_capacity_map_1_37
                            map_1_0) (#"map_c.jc" 770 49 61#
                            "expl:Integer cast" (Int32.of_int (0))))))))))))))))
                            }
                          writes { __anonstruct_Value_22_c_value_0_39,
                          __anonstruct_Value_22_d_value_0_39 }
                          ensures {
                            (((#"map_c.jc" 772 10 32# "expl:Assigns clause"
                              (not_assigns
                              __anonstruct_Value_22_value_0_39_alloc_table
                              __anonstruct_Value_22_value_0_39_alloc_table
                              (old !__anonstruct_Value_22_c_value_0_39)
                              !__anonstruct_Value_22_c_value_0_39
                              (pset_singleton value_0)))
                             /\
                             (#"map_c.jc" 772 10 32# "expl:Assigns clause"
                             (not_assigns
                             __anonstruct_Value_22_value_0_39_alloc_table
                             __anonstruct_Value_22_value_0_39_alloc_table
                             (old !__anonstruct_Value_22_d_value_0_39)
                             !__anonstruct_Value_22_d_value_0_39
                             (pset_singleton value_0))))
                            /\
                            (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 116 12 53#
                            "expl:Ensures clause"
                            (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 116 12 53#
                            "expl:Ensures clause"
                            ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 116 12 53#
                             "expl:Ensures clause"
                             ((has_key map_1_0 key_0_0
                              __anonstruct_Map_24_capacity_map_1_37
                              __anonstruct_Map_24_items_map_1_37
                              __anonstruct_Item_23_existent_items_80
                              __anonstruct_Item_23_key_2_items_80
                              __anonstruct_Key_21_b_items_80
                              __anonstruct_Key_21_b_key_0_38
                              __anonstruct_Key_21_a_items_80
                              __anonstruct_Key_21_a_key_0_38) ->
                              (Int32.(=) result (#"map_c.jc" 776 45 57#
                              "expl:Integer cast" (Int32.of_int (1))))))
                            /\
                            (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 116 12 53#
                            "expl:Ensures clause"
                            ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 117 12 80#
                             "expl:Ensures clause"
                             ((not
                              (has_key map_1_0 key_0_0
                              __anonstruct_Map_24_capacity_map_1_37
                              __anonstruct_Map_24_items_map_1_37
                              __anonstruct_Item_23_existent_items_80
                              __anonstruct_Item_23_key_2_items_80
                              __anonstruct_Key_21_b_items_80
                              __anonstruct_Key_21_b_key_0_38
                              __anonstruct_Key_21_a_items_80
                              __anonstruct_Key_21_a_key_0_38)) ->
                              ((Int32.(=) result (#"map_c.jc" 779 48 60#
                               "expl:Integer cast" (Int32.of_int (0))))
                              /\ ((=) value_0 value_0))))
                            /\
                            (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 116 12 53#
                            "expl:Ensures clause"
                            ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 118 12 48#
                             "expl:Ensures clause"
                             (Int32.(=)
                             (select __anonstruct_Map_24_capacity_map_1_37
                             map_1_0)
                             (select __anonstruct_Map_24_capacity_map_1_37
                             map_1_0)))
                            /\
                            (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 116 12 53#
                            "expl:Ensures clause"
                            ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 119 12 42#
                             "expl:Ensures clause"
                             (Int32.(=)
                             (select __anonstruct_Map_24_count_map_1_37
                             map_1_0)
                             (select __anonstruct_Map_24_count_map_1_37
                             map_1_0)))
                            /\
                            (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 116 12 53#
                            "expl:Ensures clause"
                            ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 120 12 380#
                             "expl:Ensures clause"
                             (forall i_15_0 : int.
                              ((((<=) (0) i_15_0) /\
                               ((<) i_15_0
                               (Int32.to_int
                               (select __anonstruct_Map_24_capacity_map_1_37
                               map_1_0)))) ->
                               ((Int32.(=)
                                (select
                                __anonstruct_Item_23_existent_items_80
                                (shift
                                (select __anonstruct_Map_24_items_map_1_37
                                map_1_0) i_15_0))
                                (select
                                __anonstruct_Item_23_existent_items_80
                                (shift
                                (select __anonstruct_Map_24_items_map_1_37
                                map_1_0) i_15_0)))
                               /\
                               ((Int32.(=)
                                (select __anonstruct_Key_21_a_items_80
                                (select __anonstruct_Item_23_key_2_items_80
                                (shift
                                (select __anonstruct_Map_24_items_map_1_37
                                map_1_0) i_15_0)))
                                (select __anonstruct_Key_21_a_items_80
                                (select __anonstruct_Item_23_key_2_items_80
                                (shift
                                (select __anonstruct_Map_24_items_map_1_37
                                map_1_0) i_15_0))))
                               /\
                               ((Int32.(=)
                                (select __anonstruct_Key_21_b_items_80
                                (select __anonstruct_Item_23_key_2_items_80
                                (shift
                                (select __anonstruct_Map_24_items_map_1_37
                                map_1_0) i_15_0)))
                                (select __anonstruct_Key_21_b_items_80
                                (select __anonstruct_Item_23_key_2_items_80
                                (shift
                                (select __anonstruct_Map_24_items_map_1_37
                                map_1_0) i_15_0))))
                               /\
                               ((Int32.(=)
                                (select __anonstruct_Value_22_c_items_80
                                (select __anonstruct_Item_23_value_2_items_80
                                (shift
                                (select __anonstruct_Map_24_items_map_1_37
                                map_1_0) i_15_0)))
                                (select __anonstruct_Value_22_c_items_80
                                (select __anonstruct_Item_23_value_2_items_80
                                (shift
                                (select __anonstruct_Map_24_items_map_1_37
                                map_1_0) i_15_0))))
                               /\
                               (Int32.(=)
                               (select __anonstruct_Value_22_d_items_80
                               (select __anonstruct_Item_23_value_2_items_80
                               (shift
                               (select __anonstruct_Map_24_items_map_1_37
                               map_1_0) i_15_0)))
                               (select __anonstruct_Value_22_d_items_80
                               (select __anonstruct_Item_23_value_2_items_80
                               (shift
                               (select __anonstruct_Map_24_items_map_1_37
                               map_1_0) i_15_0)))))))))))
                            /\
                            (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 116 12 53#
                            "expl:Ensures clause"
                            ((#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 124 12 28#
                             "expl:Ensures clause" ((=) key_0_0 key_0_0))
                            /\
                            (#"/home/tsirleo/University/DeductiveVerification/HW5/5_1(safety)/map.h" 125 12 29#
                            "expl:Ensures clause"
                            (is_valid_map map_1_0 voidP_items_80_alloc_table
                            __anonstruct_Value_22_items_80_alloc_table
                            __anonstruct_Map_24_map_1_37_alloc_table
                            __anonstruct_Key_21_items_80_alloc_table
                            __anonstruct_Map_24_count_map_1_37
                            __anonstruct_Map_24_capacity_map_1_37
                            __anonstruct_Map_24_items_map_1_37
                            __anonstruct_Item_23_existent_items_80
                            __anonstruct_Item_23_value_2_items_80
                            __anonstruct_Item_23_key_2_items_80
                            __anonstruct_Key_21_b_items_80
                            __anonstruct_Key_21_a_items_80)))))))))))))))) }
  
end
